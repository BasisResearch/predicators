Running command: python predicators/main.py --env grid_row_door --approach maple_q --experiment_id RLBRIDGE_gridrowdoor-rl_rwd_shape --debug --max_initial_demos 0 --sampler_learner oracle --strips_learner oracle --num_online_learning_cycles 100 --num_test_tasks 10 --num_train_tasks 1 --interactive_num_requests_per_cycle 5 --online_nsrt_learning_requests_per_cycle 5 --max_num_steps_interaction_request 100 --timeout 1000 --active_sampler_learning_num_samples 100 --same_levels True --explorer maple_q --bilevel_plan_without_sim True --mlp_regressor_max_itr 100000 --segmenter oracle --demonstrator oracle --sesame_max_skeletons_optimized 50 --use_obj_centric False --rl_rwd_shape True --seed 3
Full config:
namespace(num_train_tasks=1, num_test_tasks=10, num_online_learning_cycles=100, online_learning_max_transitions=inf, max_initial_demos=0, allow_interaction_in_demo_tasks=True, max_num_steps_interaction_request=100, pretty_print_when_loading=False, test_env_seed_offset=10000, test_task_json_dir=None, segmenter='oracle', demonstrator='oracle', render_state_dpi=150, approach_wrapper=None, allow_exclude_goal_predicates=False, allow_state_allclose_comparison_despite_simulator_state=False, cover_multistep_action_limits=[-inf, inf], cover_multistep_degenerate_oracle_samplers=False, cover_multistep_max_tb_placements=100, cover_multistep_max_hr_placements=100, cover_multistep_thr_percent=0.4, cover_multistep_bhr_percent=0.4, cover_multistep_bimodal_goal=False, cover_multistep_goal_conditioned_sampling=False, bumpy_cover_num_bumps=2, bumpy_cover_spaces_per_bump=1, bumpy_cover_right_targets=False, bumpy_cover_bumpy_region_start=0.8, bumpy_cover_init_bumpy_prob=0.25, regional_bumpy_cover_include_impossible_nsrt=False, blocks_num_blocks_train=[3, 4], blocks_num_blocks_test=[5, 6], blocks_holding_goals=False, blocks_block_size=0.045, playroom_num_blocks_train=[3], playroom_num_blocks_test=[3], cluttered_table_num_cans_train=5, cluttered_table_num_cans_test=10, cluttered_table_can_radius=0.01, cluttered_table_collision_angle_thresh=0.7853981633974483, cluttered_table_place_goal_conditioned_sampling=True, repeated_nextto_num_dots=15, repeated_nextto_nextto_thresh=0.5, painting_initial_holding_prob=0.5, painting_lid_open_prob=0.3, painting_num_objs_train=[2, 3], painting_num_objs_test=[3, 4], painting_max_objs_in_goal=inf, painting_goal_receptacles='box_and_shelf', painting_raise_environment_failure=True, rnt_painting_num_objs_train=[8, 9, 10], rnt_painting_num_objs_test=[11, 12, 13], rnt_painting_max_objs_in_goal=2, tools_num_items_train=[2], tools_num_items_test=[2, 3], tools_num_contraptions_train=[2], tools_num_contraptions_test=[3], sandwich_ingredients_train={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, sandwich_ingredients_test={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, pybullet_draw_debug=False, pybullet_camera_width=335, pybullet_camera_height=180, pybullet_sim_steps_per_action=20, pybullet_max_ik_iters=100, pybullet_ik_tol=0.001, pybullet_robot='fetch', pybullet_birrt_num_attempts=10, pybullet_birrt_num_iters=100, pybullet_birrt_smooth_amt=50, pybullet_birrt_extend_num_interp=10, pybullet_control_mode='position', pybullet_max_vel_norm=0.05, pybullet_robot_ee_orns=defaultdict(<function GlobalSettings.<lambda> at 0x7fcf2096f670>, {'pybullet_blocks': {'fetch': (0.7071, 0.0, -0.7071, 0.0), 'panda': (0.7071, 0.7071, 0.0, 0.0)}}), ikfast_max_time=0.05, ikfast_max_candidates=100, ikfast_max_attempts=inf, ikfast_max_distance=inf, ikfast_norm=inf, pddl_blocks_procedural_train_min_num_blocks=3, pddl_blocks_procedural_train_max_num_blocks=4, pddl_blocks_procedural_train_min_num_blocks_goal=2, pddl_blocks_procedural_train_max_num_blocks_goal=3, pddl_blocks_procedural_test_min_num_blocks=5, pddl_blocks_procedural_test_max_num_blocks=6, pddl_blocks_procedural_test_min_num_blocks_goal=2, pddl_blocks_procedural_test_max_num_blocks_goal=5, pddl_blocks_procedural_new_pile_prob=0.5, pddl_blocks_fixed_train_indices=[1, 2, 3, 4, 5], pddl_blocks_fixed_test_indices=[6, 7, 8, 9, 10], pddl_delivery_procedural_train_min_num_locs=5, pddl_delivery_procedural_train_max_num_locs=10, pddl_delivery_procedural_train_min_want_locs=2, pddl_delivery_procedural_train_max_want_locs=4, pddl_delivery_procedural_train_min_extra_newspapers=0, pddl_delivery_procedural_train_max_extra_newspapers=1, pddl_delivery_procedural_test_min_num_locs=31, pddl_delivery_procedural_test_max_num_locs=40, pddl_delivery_procedural_test_min_want_locs=20, pddl_delivery_procedural_test_max_want_locs=30, pddl_delivery_procedural_test_min_extra_newspapers=0, pddl_delivery_procedural_test_max_extra_newspapers=10, pddl_easy_delivery_procedural_train_min_num_locs=3, pddl_easy_delivery_procedural_train_max_num_locs=5, pddl_easy_delivery_procedural_train_min_want_locs=1, pddl_easy_delivery_procedural_train_max_want_locs=2, pddl_easy_delivery_procedural_train_min_extra_newspapers=0, pddl_easy_delivery_procedural_train_max_extra_newspapers=1, pddl_easy_delivery_procedural_test_min_num_locs=4, pddl_easy_delivery_procedural_test_max_num_locs=6, pddl_easy_delivery_procedural_test_min_want_locs=2, pddl_easy_delivery_procedural_test_max_want_locs=3, pddl_easy_delivery_procedural_test_min_extra_newspapers=0, pddl_easy_delivery_procedural_test_max_extra_newspapers=1, pddl_spanner_procedural_train_min_nuts=1, pddl_spanner_procedural_train_max_nuts=3, pddl_spanner_procedural_train_min_extra_spanners=0, pddl_spanner_procedural_train_max_extra_spanners=2, pddl_spanner_procedural_train_min_locs=2, pddl_spanner_procedural_train_max_locs=4, pddl_spanner_procedural_test_min_nuts=10, pddl_spanner_procedural_test_max_nuts=20, pddl_spanner_procedural_test_min_extra_spanners=0, pddl_spanner_procedural_test_max_extra_spanners=10, pddl_spanner_procedural_test_min_locs=20, pddl_spanner_procedural_test_max_locs=30, pddl_forest_procedural_train_min_size=8, pddl_forest_procedural_train_max_size=10, pddl_forest_procedural_test_min_size=10, pddl_forest_procedural_test_max_size=12, pddl_gripper_procedural_train_min_num_rooms=3, pddl_gripper_procedural_train_max_num_rooms=5, pddl_gripper_procedural_train_min_num_balls=1, pddl_gripper_procedural_train_max_num_balls=2, pddl_gripper_procedural_test_min_num_rooms=3, pddl_gripper_procedural_test_max_num_rooms=5, pddl_gripper_procedural_test_min_num_balls=1, pddl_gripper_procedural_test_max_num_balls=2, pddl_ferry_procedural_train_min_num_locs=3, pddl_ferry_procedural_train_max_num_locs=5, pddl_ferry_procedural_train_min_num_cars=1, pddl_ferry_procedural_train_max_num_cars=2, pddl_ferry_procedural_test_min_num_locs=3, pddl_ferry_procedural_test_max_num_locs=5, pddl_ferry_procedural_test_min_num_cars=1, pddl_ferry_procedural_test_max_num_cars=2, pddl_miconic_procedural_train_min_buildings=1, pddl_miconic_procedural_train_max_buildings=2, pddl_miconic_procedural_train_min_floors=3, pddl_miconic_procedural_train_max_floors=5, pddl_miconic_procedural_train_min_passengers=1, pddl_miconic_procedural_train_max_passengers=2, pddl_miconic_procedural_test_min_buildings=1, pddl_miconic_procedural_test_max_buildings=2, pddl_miconic_procedural_test_min_floors=3, pddl_miconic_procedural_test_max_floors=5, pddl_miconic_procedural_test_min_passengers=1, pddl_miconic_procedural_test_max_passengers=2, stick_button_num_buttons_train=[1, 2], stick_button_num_buttons_test=[3, 4], stick_button_disable_angles=True, stick_button_holder_scale=0.1, screws_num_screws_train=[15, 20], screws_num_screws_test=[25, 30], doors_room_map_size=2, test_doors_room_map_size=5, doors_min_obstacles_per_room=0, doors_max_obstacles_per_room=3, doors_min_room_exists_frac=0.25, doors_max_room_exists_frac=0.75, doors_birrt_num_attempts=10, doors_birrt_num_iters=100, doors_birrt_smooth_amt=50, doors_draw_debug=False, timeout=1000.0, doorknobs_target_value=0.75, narrow_passage_open_door_refine_penalty=0, narrow_passage_door_width_padding_lb=0.0001, narrow_passage_door_width_padding_ub=0.015, narrow_passage_passage_width_padding_lb=0.0005, narrow_passage_passage_width_padding_ub=0.02, narrow_passage_birrt_num_attempts=10, narrow_passage_birrt_num_iters=100, narrow_passage_birrt_smooth_amt=50, exit_garage_clear_refine_penalty=0, exit_garage_min_num_obstacles=2, exit_garage_max_num_obstacles=3, exit_garage_rrt_extend_fn_threshold=0.001, exit_garage_rrt_num_control_samples=100, exit_garage_rrt_num_attempts=3, exit_garage_rrt_num_iters=100, exit_garage_rrt_sample_goal_eps=0.1, exit_garage_motion_planning_ignore_obstacles=False, exit_garage_raise_environment_failure=False, coffee_num_cups_train=[1], coffee_num_cups_test=[4], coffee_jug_init_rot_amt=2.0943951023931953, satellites_num_sat_train=[2, 3], satellites_num_obj_train=[3, 4], satellites_num_sat_test=[3, 4], satellites_num_obj_test=[4, 5], sokoban_gym_name='Sokoban-v0', kitchen_use_perfect_samplers=False, kitchen_goals='all', kitchen_render_set_of_marks=False, kitchen_use_combo_move_nsrts=False, kitchen_randomize_init_state=False, sticky_table_num_tables=5, sticky_table_place_smooth_fall_prob=0.6, sticky_table_place_sticky_fall_prob=0.0, sticky_table_pick_success_prob=1.0, sticky_table_tricky_floor_place_sticky_fall_prob=0.5, sticky_table_place_ball_fall_prob=1.0, sticky_table_num_sticky_tables=1, grid_row_num_cells=5, test_grid_row_num_cells=10, num_doors=2, gridworld_num_rows=4, gridworld_num_cols=4, random_options_max_tries=100, option_model_terminate_on_repeat=True, option_model_use_gui=False, gnn_num_message_passing=3, gnn_layer_size=16, gnn_learning_rate=0.001, gnn_weight_decay=0, gnn_num_epochs=25000, gnn_batch_size=128, gnn_do_normalization=False, gnn_use_validation_set=True, gnn_option_policy_solve_with_shooting=True, gnn_option_policy_shooting_variance=0.1, gnn_option_policy_shooting_max_samples=100, metacontroller_max_samples=100, pg3_heuristic='policy_guided', pg3_search_method='hill_climbing', pg3_task_planning_heuristic='lmcut', pg3_gbfs_max_expansions=100, pg3_hc_enforced_depth=0, pg3_max_policy_guided_rollout=50, pg3_plan_compare_inapplicable_cost=0.99, pg3_add_condition_allow_new_vars=True, pg3_max_analogies=5, pg3_init_policy=None, pg3_init_base_env=None, nsrt_rl_reward_epsilon=0.01, nsrt_rl_pos_reward=0, nsrt_rl_neg_reward=-1, nsrt_rl_option_learner='dummy_rl', nsrt_rl_valid_reward_steps_threshold=10, pretrained_model_prompt_cache_dir='pretrained_model_cache', llm_openai_max_response_tokens=700, llm_use_cache_only=False, llm_model_name='text-curie-001', llm_temperature=0.5, llm_num_completions=1, vlm_model_name='gemini-pro-vision', sesame_task_planner='astar', sesame_task_planning_heuristic='lmcut', sesame_allow_noops=True, sesame_check_expected_atoms=True, sesame_use_necessary_atoms=True, sesame_use_visited_state_set=False, sesame_grounder='naive', sesame_check_static_object_changes=False, sesame_static_object_change_tol=0.001, bilevel_plan_without_sim=True, log_dir='logs', results_dir='results', eval_trajectories_dir='eval_trajectories', approach_dir='saved_approaches', data_dir='saved_datasets', video_dir='videos', image_dir='images', video_fps=2, failure_video_mode='longest_only', offline_data_planning_timeout=-1, offline_data_task_planning_heuristic='default', offline_data_max_skeletons_optimized=-1, offline_data_num_replays=500, offline_data_bilevel_plan_without_sim=None, teacher_dataset_num_examples=1, min_data_for_nsrt=0, min_perc_data_for_nsrt=0, data_orderings_to_search=1, strips_learner='oracle', disable_harmlessness_check=False, enable_harmless_op_pruning=False, backchaining_check_intermediate_harmlessness=False, pnad_search_without_del=False, pnad_search_timeout=10.0, compute_sidelining_objective_value=False, clustering_learner_true_pos_weight=10, clustering_learner_false_pos_weight=1, cluster_and_intersect_prederror_max_groundings=10, cluster_and_search_inner_search_max_expansions=2500, cluster_and_search_inner_search_timeout=30, cluster_and_search_score_func_max_groundings=10000, cluster_and_search_var_count_weight=0.1, cluster_and_search_precon_size_weight=0.01, cluster_and_intersect_prune_low_data_pnads=False, cluster_and_intersect_min_datastore_fraction=0.0, use_torch_gpu=False, learning_rate=0.001, weight_decay=0, mlp_regressor_max_itr=100000, mlp_regressor_hid_sizes=[32, 32], mlp_regressor_clip_gradients=True, mlp_regressor_gradient_clip_value=5, mlp_classifier_hid_sizes=[32, 32], mlp_classifier_balance_data=True, cnn_regressor_max_itr=500, cnn_regressor_conv_channel_nums=[3, 3], cnn_regressor_conv_kernel_sizes=[5, 3], cnn_regressor_linear_hid_sizes=[32, 8], cnn_regressor_clip_gradients=True, cnn_regressor_gradient_clip_value=5, neural_gaus_regressor_hid_sizes=[32, 32], neural_gaus_regressor_max_itr=1000, mlp_classifier_n_iter_no_change=5000, implicit_mlp_regressor_max_itr=10000, implicit_mlp_regressor_num_negative_data_per_input=5, implicit_mlp_regressor_num_samples_per_inference=100, implicit_mlp_regressor_temperature=1.0, implicit_mlp_regressor_inference_method='derivative_free', implicit_mlp_regressor_derivative_free_num_iters=3, implicit_mlp_regressor_derivative_free_sigma_init=0.33, implicit_mlp_regressor_derivative_free_shrink_scale=0.5, implicit_mlp_regressor_grid_num_ticks_per_dim=100, pytorch_train_print_every=1000, sampler_learner='oracle', max_rejection_sampling_tries=100, sampler_mlp_classifier_max_itr=10000, sampler_mlp_classifier_n_reinitialize_tries=1, sampler_learning_use_goals=False, sampler_disable_classifier=False, sampler_learning_regressor_model='neural_gaussian', sampler_learning_max_negative_data=100000, option_learning_action_converter='identity', interactive_num_ensemble_members=10, interactive_query_policy='threshold', interactive_score_function='entropy', interactive_score_threshold=0.05, interactive_random_query_prob=0.5, interactive_num_requests_per_cycle=5, predicate_classifier_model='mlp', predicate_mlp_classifier_max_itr=100000, predicate_mlp_classifier_n_reinitialize_tries=1, predicate_mlp_classifier_init='default', predicate_knn_classifier_n_neighbors=1, online_nsrt_learning_requests_per_cycle=5, online_learning_max_novelty_count=0, active_sampler_learning_model='myopic_classifier_mlp', active_sampler_learning_feature_selection='all', active_sampler_learning_knn_neighbors=3, active_sampler_learning_use_teacher=True, active_sampler_learning_score_gamma=0.5, active_sampler_learning_fitted_q_iters=5, active_sampler_learning_explore_pursue_goal_interval=5, active_sampler_learning_object_specific_samplers=False, active_sampler_learning_n_iter_no_change=5000, active_sampler_learning_num_lookahead_samples=5, active_sampler_learning_explore_length_base=2, active_sampler_learning_num_ensemble_members=10, active_sampler_learning_exploration_sample_strategy='epsilon_greedy', active_sampler_learning_exploration_epsilon=1.0, active_sampler_learning_replay_buffer_size=1000000, active_sampler_learning_batch_size=64, use_epsilon_annealing=True, min_epsilon=0.05, polyak_tau=0.0025, same_levels=True, polyak_true=True, use_old_exploration=False, use_callplanner=True, random_bridge=False, use_obj_centric=False, rl_rwd_shape=True, skill_competence_model='optimistic', skill_competence_model_num_em_iters=3, skill_competence_model_max_train_iters=1000, skill_competence_model_learning_rate=0.01, skill_competence_model_lookahead=1, skill_competence_model_optimistic_window_size=5, skill_competence_model_optimistic_recency_size=5, skill_competence_default_alpha_beta=(10.0, 1.0), skill_competence_initial_prediction_bonus=0.5, refinement_estimator='oracle', refinement_estimation_num_skeletons_generated=8, refinement_data_num_skeletons=8, refinement_data_skeleton_generator_timeout=20, refinement_data_low_level_search_timeout=5, refinement_data_failed_refinement_penalty=5, refinement_data_include_execution_cost=True, refinement_data_low_level_execution_cost=0.05, cnn_refinement_estimator_crop=False, cnn_refinement_estimator_crop_bounds=(320, 400, 100, 650), cnn_refinement_estimator_downsample=2, bridge_policy='learned_ldl', glib_min_goal_size=1, glib_max_goal_size=1, glib_num_babbles=10, greedy_lookahead_max_num_trajectories=100, greedy_lookahead_max_traj_length=2, greedy_lookahead_max_num_resamples=10, active_sampler_explore_use_ucb_bonus=True, active_sampler_explore_bonus=0.1, active_sampler_explore_task_strategy='planning_progress', active_sampler_explorer_replan_frequency=100, active_sampler_explorer_planning_progress_max_tasks=10, active_sampler_explorer_planning_progress_max_replan_tasks=5, active_sampler_explorer_skip_perfect=True, active_sampler_learning_init_cycles_to_pursue_goal=1, grammar_search_grammar_includes_givens=True, grammar_search_grammar_includes_foralls=True, grammar_search_grammar_use_diff_features=False, grammar_search_grammar_use_euclidean_dist=False, grammar_search_use_handcoded_debug_grammar=False, grammar_search_pred_selection_approach='score_optimization', grammar_search_pred_clusterer='oracle', grammar_search_true_pos_weight=10, grammar_search_false_pos_weight=1, grammar_search_bf_weight=1, grammar_search_operator_complexity_weight=0.0, grammar_search_pred_complexity_weight=0.0001, grammar_search_max_predicates=200, grammar_search_predicate_cost_upper_bound=6, grammar_search_prune_redundant_preds=True, grammar_search_score_function='expected_nodes_created', grammar_search_heuristic_based_weight=10.0, grammar_search_max_demos=inf, grammar_search_max_nondemos=50, grammar_search_energy_based_temperature=10.0, grammar_search_task_planning_timeout=1.0, grammar_search_search_algorithm='hill_climbing', grammar_search_hill_climbing_depth=0, grammar_search_parallelize_hill_climbing=False, grammar_search_gbfs_num_evals=1000, grammar_search_off_demo_count_penalty=1.0, grammar_search_on_demo_count_penalty=10.0, grammar_search_suspicious_state_penalty=10.0, grammar_search_expected_nodes_upper_bound=100000.0, grammar_search_expected_nodes_optimal_demo_prob=0.99999, grammar_search_expected_nodes_backtracking_cost=1000.0, grammar_search_expected_nodes_allow_noops=True, grammar_search_classifier_pretty_str_names=['?x', '?y', '?z'], grammar_search_vlm_atom_proposal_prompt_type='options_labels_whole_traj', grammar_search_vlm_atom_label_prompt_type='per_scene_naive', grammar_search_vlm_atom_proposal_use_debug=False, grammar_search_clustering_gmm_num_components=10, handmade_demo_filename='', vlm_trajs_folder_name='', get_arg_specific_settings=<classmethod object at 0x7fcf2096aa90>, perceiver='trivial', horizon=30, active_sampler_learning_num_samples=100, max_num_steps_option_rollout=1000, sesame_propagate_failures='immediately', offline_data_method='demo', option_model_name='oracle', sesame_max_skeletons_optimized=50, sesame_max_samples_per_step=10, grammar_search_expected_nodes_max_skeletons=-1, grammar_search_diff_features_const_multiplier=1e-06, grammar_search_euclidean_feature_names=[('x', 'y', 'x', 'y')], grammar_search_euclidean_const_multiplier=1e-06, cover_num_blocks=2, cover_num_targets=2, cover_block_widths=[0.1, 0.07], cover_target_widths=[0.05, 0.03], cover_initial_holding_prob=0.75, env='grid_row_door', approach='maple_q', excluded_predicates='', included_options='', seed=3, option_learner='no_learning', explorer='maple_q', execution_monitor='trivial', make_test_videos=False, make_failure_videos=False, make_interaction_videos=False, make_demo_videos=False, make_demo_images=False, make_cogman_videos=False, load_approach=False, restart_learning=False, load_data=False, load_atoms=False, save_atoms=False, skip_until_cycle=-1, experiment_id='RLBRIDGE_gridrowdoor-rl_rwd_shape', load_experiment_id='', log_file='', use_gui=False, loglevel=10, crash_on_failure=False)
Git commit hash: 4e424522ab45ae4b145226ae01782f813ddd0863


CREATED 0 DEMONSTRATIONS

Learning NSRTs on 0 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.60254896], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.2970944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9469206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05738067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.8182946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.2601804], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.1428542], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.22581898], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50444686], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6620254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9411175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2614274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71728384], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.08996537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.33906657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00962522], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.48251504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.30229685], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68423074], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.23731309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.22029026], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02519491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.86369085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.32055125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7479623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7127261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.17658632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.07657638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.52646613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4077782], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.11260435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.31926706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.7528618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35217562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03954973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2869449], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.76924497], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44154435], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7652733], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.3947719], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.527066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.02978319], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12206149], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7211203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23295921], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.31545568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.09128444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97898555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.90291965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14516833], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9425415], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.39216545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.80792725], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.408205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.83056927], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.916134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.17496932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01236484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.75361675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7621749], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06076802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8319375], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25648412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.46932045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.70434415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.31746247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6893113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18286867], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5858577], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.40473157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.18718119], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8972024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.35898748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.22487941], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.62491065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00323298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.45039812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995449], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10629021], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29716668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7513467], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.67512596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.77277166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22019297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7685359], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46747553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00956659], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.7081444], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25849074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6314857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.57866234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8575012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28754503], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.38639328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27955803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.64363515], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7514583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8841403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7578635], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8278139], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9828442], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.703716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0660126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.06097495], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17958617], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.67840207], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3369033], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7963298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6309061], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8977551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.63611484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8449161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8907932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01522287], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6612173], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8814533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04762145], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2054205], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.19946244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.32501134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7025752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28871036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8660141], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.48104942], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29324943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.27885407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3312296], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.59392625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4402231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84364635], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5901033], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.42799553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.12305078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.4014196], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.885089], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00655708], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9754305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5062123], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12502135], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.10538631], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.17930676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.27772376], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.28065604], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.34811285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08322779], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08979368], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29785573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.65538406], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7546496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17706342], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8464323], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5257744], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8639637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.57594955], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8885198], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.59242547], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.0964522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8304917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7349993], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10524026], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7973976], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.62927824], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8885014], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.16260314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.23735291], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5076945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5653264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.56870717], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.5492258], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.6894812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.77486616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.99717796], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.701675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.27061144], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.09989353], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08396159], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00928579], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.2758043], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.25059634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.14333805], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.12121996], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5262945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85594386], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3974548], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.82028663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6614999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.45761457], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7082912], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 0, 'query_cost': 0.0, 'learning_time': 0.15868482901714742})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__None.pkl


ONLINE LEARNING CYCLE 0

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 808, frozenset({LightInCell(?x0:light, ?x1:cell)}): 101, frozenset({LightOff(?x0:light)}): 101, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 101})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 1616, frozenset({LightInCell(?x0:light, ?x1:cell)}): 202, frozenset({LightOff(?x0:light)}): 202, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 202})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 2424, frozenset({LightInCell(?x0:light, ?x1:cell)}): 303, frozenset({LightOff(?x0:light)}): 303, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 303})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 3232, frozenset({LightInCell(?x0:light, ?x1:cell)}): 404, frozenset({LightOff(?x0:light)}): 404, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 404})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 4040, frozenset({LightInCell(?x0:light, ?x1:cell)}): 505, frozenset({LightOff(?x0:light)}): 505, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 505})

Learning NSRTs on 5 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 500 datapoints
Loss: 0.01003, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss: 0.00000, iter: 15000/100000
Loss: 0.00000, iter: 16000/100000
Loss: 0.00000, iter: 17000/100000
Loss: 0.00000, iter: 18000/100000
Loss: 0.00000, iter: 19000/100000
Loss: 0.00000, iter: 20000/100000
Loss: 0.00000, iter: 21000/100000
Loss: 0.00000, iter: 22000/100000
Loss: 0.00000, iter: 23000/100000
Loss did not improve after 5000 itrs, terminating at itr 23053.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.59092516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9021657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5228579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8682521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.42952332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5036209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.20763952], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9749501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98642945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.46134415], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.697032], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1490453], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.3086654], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5625682], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.60235775], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9923341], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.57866627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.77928793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.81787807], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.19908348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5835208], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.1764157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.91993386], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.13289492], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4470474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27081972], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.88113064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.63716537], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.93319744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.637892], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5203292], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8338727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7064196], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.63256776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.36907735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.58990115], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6113273], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.47343323], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10317497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.64953214], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.33862865], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9350684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2663683], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.789452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3189541], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7652696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.30960706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.49454495], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02937068], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.319533], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.53646976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.39231375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7888457], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5054811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6561147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99271953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.67087346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.41329435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67713535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9852516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.30685514], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.003163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7310775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.56670517], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9950733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17307642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.87063116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8296086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8066011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7997187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21012968], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01700321], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.58749044], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.73148453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.41042012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5849844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9903682], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8636045], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14653935], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.26053858], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7430505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.75734824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9571605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3144655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27732724], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96653974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7976948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90369934], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54547906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.70228076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.82342017], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8096317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.78154606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.04968915], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14813587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20001791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.41255778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19280563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85805947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9549439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.49062482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9582882], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.03058676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.27805173], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.38416496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8174606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5854087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8444242], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.307415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.33862942], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.37214962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5120483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6717974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.75076354], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05388186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.56874645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3884097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15644218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.61988163], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.42705896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.76389635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25553122], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9649859], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.19833116], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.7567584], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.34239554], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.1184988], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.32992983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.32364848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4932126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.18852228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.25063312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.62578773], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23732491], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20647258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9833246], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49666357], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.37479362], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.44636506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6226425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.16883697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5678855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9160896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8629201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4652824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00622276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54514205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7232569], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4358555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3294888], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.71870476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8560891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14076635], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9303841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.23827979], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.62894833], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.33681548], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9509647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6378292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.999544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.23219876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.4167854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9795168], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.87879556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.29736826], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7767254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.63384235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.63960314], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34313357], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9710099], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96379995], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.93847144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97790104], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26285902], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9952082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.86232686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10254575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.72801644], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.84151256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6436564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5837314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.490963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5516859], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.27571335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7857636], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00273343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9848337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.30055475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.18713148], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (0,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0][1][0.0][0.0]
[0.0][1][0.0][0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 500, 'query_cost': 0.0, 'learning_time': 47.75715224904707})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__0.pkl


ONLINE LEARNING CYCLE 1

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 4848, frozenset({LightInCell(?x0:light, ?x1:cell)}): 606, frozenset({LightOff(?x0:light)}): 606, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 606})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 5656, frozenset({LightInCell(?x0:light, ?x1:cell)}): 707, frozenset({LightOff(?x0:light)}): 707, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 707})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 6464, frozenset({LightInCell(?x0:light, ?x1:cell)}): 808, frozenset({LightOff(?x0:light)}): 808, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 808})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 7272, frozenset({LightInCell(?x0:light, ?x1:cell)}): 909, frozenset({LightOff(?x0:light)}): 909, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 909})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 8080, frozenset({LightInCell(?x0:light, ?x1:cell)}): 1010, frozenset({LightOff(?x0:light)}): 1010, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 1010})

Learning NSRTs on 10 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 1000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5594.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.77178913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.19479255], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.39126647], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4260952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.1916174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.86311066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.7446067], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9850058], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08933548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.69649994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0018565], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.458648], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98428065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6437118], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99777013], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7627221], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.982287], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9945821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7985644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9886213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38630557], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.70166963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.39549923], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.79916185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9843802], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.85908234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.20058821], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.12127161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9072581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.09737245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.18575366], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.12335907], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5927488], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00972489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.33858544], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1137199], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.02187052], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.45867872], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97768044], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6780244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96722287], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08417238], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.56161994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15006894], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20502657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.32568872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.61817974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14210457], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.25062647], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15637518], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.332471], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03110545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9890679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5410704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26450685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.29271874], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.63760734], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.74764556], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.08702713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.06454215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.36605263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.433266], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6175302], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9891157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93524855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9217705], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98955953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4471239], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6236477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6287625], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37360978], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16213931], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.59856457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52852726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5015251], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19187264], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79548836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72563946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.37573993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.43214232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22309636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20328104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98804027], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.50796735], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6214916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7857518], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.91688114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03735106], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.20386295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.710205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9428477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7283249], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6493309], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39633006], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35554242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5980666], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98373145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26813054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.25750524], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6554572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66511434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23316123], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21973503], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9427217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9971362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29845423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.51736647], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9841167], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.20258944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48827842], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.49092132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.18089701], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.69837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.75671816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.63357055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.74998754], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.14495929], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9982646], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9684399], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3722135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.86027044], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.23649809], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6233202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.60654265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.0732165], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7961494], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4268386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.34655604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5527307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2971027], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9300801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99238694], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.82479376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9249135], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79671776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9999956], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.24906555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.1109829], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.72190017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5153808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.00963305], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.3097756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.7670435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6302342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50492007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.16613182], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0078511], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09225672], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97187155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.41563624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.49602488], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.13313779], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9586935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.37876704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.1796882], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.41548535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4034167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7004641], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5109221], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19681045], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6893498], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12826797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9529019], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99849594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.55878425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9975439], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7694837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6579597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.7903399], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.84962505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4665538], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.40622255], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.33701456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.8701093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.45025927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9516436], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.08481019], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5540415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3108804], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (1,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0][1, 2][0.0, 0.0][0.0, 0.0]
[0.0, 0.0][1, 2][0.0, 0.0][0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1000, 'query_cost': 0.0, 'learning_time': 61.46646996203344})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__1.pkl


ONLINE LEARNING CYCLE 2

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 8888, frozenset({LightInCell(?x0:light, ?x1:cell)}): 1111, frozenset({LightOff(?x0:light)}): 1111, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 1111})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 9696, frozenset({LightInCell(?x0:light, ?x1:cell)}): 1212, frozenset({LightOff(?x0:light)}): 1212, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 1212})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 10504, frozenset({LightInCell(?x0:light, ?x1:cell)}): 1313, frozenset({LightOff(?x0:light)}): 1313, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 1313})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 11312, frozenset({LightInCell(?x0:light, ?x1:cell)}): 1414, frozenset({LightOff(?x0:light)}): 1414, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 1414})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 12120, frozenset({LightInCell(?x0:light, ?x1:cell)}): 1515, frozenset({LightOff(?x0:light)}): 1515, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 1515})

Learning NSRTs on 15 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 1500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8881.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6401459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.23010609], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.52900755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6619332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09177997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5579793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9911113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.45696542], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26064095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9567935], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99893606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8259786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99819434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.37304562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05480069], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13557468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10708887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.83818376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.64866966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9405687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.64301145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8861576], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.45145637], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8136853], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.47466856], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98395836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.84399384], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.66974515], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5458805], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.22515874], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.25415555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8814639], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.072961], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5841945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.76214904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2622259], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.44464222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9691058], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49279246], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41706225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8041768], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43765235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7316155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14498524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01217971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60443044], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9785519], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5262347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8203158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9072408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.74818385], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2480363], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9889085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.63264775], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9762005], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06104881], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3904952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.58751315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.21465622], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.82142425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7724229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9951111], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96596295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6367737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12709485], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6597078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.56401545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6327084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48073113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.84186476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.999821], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40214735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.79616165], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2493449], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97396004], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.33363724], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9418913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.76417553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.12760659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6496612], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.77336764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2329493], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0847799], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5966536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.699298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.29663128], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5689564], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9576845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07947542], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.76093054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.24113078], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08406184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6810815], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.64709115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.914746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25146818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.16731784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9733955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.87821424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.45592505], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14563337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9126902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9433242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99546075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99799204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.545616], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.08714151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9999419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7814765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25489628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.59819084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9818908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.955122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72663176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99666375], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.62367314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8320873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.04752662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54132676], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.86285716], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7696345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98883027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8957661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5908598], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5198051], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.55998296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4978673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.31003135], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.30522534], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7088732], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40317208], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1683334], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.01849477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.61018395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5561403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23381186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1495013], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.46439227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.1813268], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9552676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.95872283], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.19159374], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.995644], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.41015023], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6836959], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1421923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10437619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9465136], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5015564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.19969258], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44637528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6943344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04220854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48708457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.21131623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.26542336], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.43564966], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.49937922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9778543], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.7741149], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.92425066], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.7536621], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.71181554], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.07438865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9747526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23407899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99984723], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99866617], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9784041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.97487366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.02480212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9892736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9183124], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9719682], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.385886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9587943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9527385], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9895847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.919392], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9980868], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.2055776], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.65117055], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.04374116], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.22865158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.94363064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97049344], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.28384575], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99330294], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.7809128], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.69289654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.3199481], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6725008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9603229], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (2,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0][1, 2, 3][0.0, 0.0, 0.0][0.0, 0.0, 0.0]
[0.0, 0.0, 0.0][1, 2, 3][0.0, 0.0, 0.0][0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1500, 'query_cost': 0.0, 'learning_time': 83.05446127901087})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__2.pkl


ONLINE LEARNING CYCLE 3

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 12928, frozenset({LightInCell(?x0:light, ?x1:cell)}): 1616, frozenset({LightOff(?x0:light)}): 1616, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 1616})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 13736, frozenset({LightInCell(?x0:light, ?x1:cell)}): 1717, frozenset({LightOff(?x0:light)}): 1717, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 1717})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 14544, frozenset({LightInCell(?x0:light, ?x1:cell)}): 1818, frozenset({LightOff(?x0:light)}): 1818, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 1818})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 15352, frozenset({LightInCell(?x0:light, ?x1:cell)}): 1919, frozenset({LightOff(?x0:light)}): 1919, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 1919})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 16160, frozenset({LightInCell(?x0:light, ?x1:cell)}): 2020, frozenset({LightOff(?x0:light)}): 2020, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 2020})

Learning NSRTs on 20 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 2000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5288.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.03308658], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99654776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.986045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.07849037], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9886101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.93634415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8956771], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4101941], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1454466], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.30912456], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.05847086], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.973854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69608647], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.25752202], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.046039], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9775582], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94007957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4737949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5929752], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6820082], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6258514], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.42900252], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9347455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4058539], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.92918164], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.71461403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23282304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6557732], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.7119208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9682766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.22749332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.13646403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.47732538], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6314404], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.30981112], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.49363822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10693841], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2524865], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9769289], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72392476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00152782], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78940314], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15207829], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1557128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08046053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5542805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5226933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.28456455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4026386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5336759], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.06528527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36012557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2010984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.74119705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08033752], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9704137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9959368], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.976127], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3155298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8560805], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21242365], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.47041646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.7643908], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9472372], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.64317304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01249936], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.17238718], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99902564], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8405777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9848124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9730823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8296353], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07237766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99345684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.21188593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21899919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.08209917], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21098547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.60034525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9747841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.87122226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20462239], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7210964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52275103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.85208493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9306679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15228972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.34159285], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.556131], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14173019], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34739435], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99358076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7173298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16787642], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97670203], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8677437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9979849], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.24361603], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6725586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8804481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.49739876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21657588], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2912905], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.03251631], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24332154], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.31622076], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9865278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9770629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5580744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9826487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5965079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9849961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8515737], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7933358], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01333095], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.156899], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4735232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.38420415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.29019392], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.13821167], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.90646434], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.52783567], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9115052], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6453811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5536733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5644387], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.78952354], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2180986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9561897], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.55131847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.70961356], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.14268921], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9941636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.7456998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.40583903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.12471483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.56804675], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25065953], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.35837072], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44318533], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8739527], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9829821], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9816882], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08823482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99942183], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07099222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.25034085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.64588743], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38596734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.56713665], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5040303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.77732486], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9816926], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.42452908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.2022835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.8181217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.7291526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.94002825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9901625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9964689], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.77318734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.683507], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.979509], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8133676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46910477], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.3607894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7120433], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.961815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14465739], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.32409227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48581985], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05551241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79637253], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.96428335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.72440696], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.3485622], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5956115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5029433], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9637053], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.28205207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.62490296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5138499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.08243475], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (3,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0][1, 2, 3, 4][0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0][1, 2, 3, 4][0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2000, 'query_cost': 0.0, 'learning_time': 99.90771264804062})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__3.pkl


ONLINE LEARNING CYCLE 4

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 16968, frozenset({LightInCell(?x0:light, ?x1:cell)}): 2121, frozenset({LightOff(?x0:light)}): 2121, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 2121})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 17776, frozenset({LightInCell(?x0:light, ?x1:cell)}): 2222, frozenset({LightOff(?x0:light)}): 2222, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 2222})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 18584, frozenset({LightInCell(?x0:light, ?x1:cell)}): 2323, frozenset({LightOff(?x0:light)}): 2323, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 2323})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 19392, frozenset({LightInCell(?x0:light, ?x1:cell)}): 2424, frozenset({LightOff(?x0:light)}): 2424, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 2424})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 20200, frozenset({LightInCell(?x0:light, ?x1:cell)}): 2525, frozenset({LightOff(?x0:light)}): 2525, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 2525})

Learning NSRTs on 25 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 2500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6360.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18353173], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4690888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4864674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7891129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.08159233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4025866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.79822], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.29228708], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.60697377], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9941489], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9863501], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9946487], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9865832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.55529505], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.84969], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.20286651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5857909], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08872704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95584273], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.18189237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.994962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.8403083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6275699], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.68600124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50939155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7711763], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.77358603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9891736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9531775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9851002], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.80975634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9978313], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.963163], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.970531], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11864395], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.50893664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.12397145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5267485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99396247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.42237604], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1235574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9971893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9871195], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35779276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9729724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9893884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.21355133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98723793], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06376282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6448414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99394435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46883512], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9894323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74915457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1486956], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9810923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9732705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03944829], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.10832252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.59416014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.63846016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4522088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5045333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27928495], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3649533], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5455664], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23128642], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.46135858], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.986438], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99105865], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9948412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.60371244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.02821166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.30524653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9909491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.0316299], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.74565196], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93077123], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98453593], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5658766], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8837606], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99653983], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.653046], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.82471156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.16916001], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9124326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5649698], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6702903], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2542334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4642351], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26876613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.17454219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03449247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.35688958], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5179415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97401136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.47198424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.999127], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5086819], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50329715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99807155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.260141], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.57477075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5601091], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5019817], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07922228], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9060334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.26129624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7066557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6747296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01530879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99688476], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5992068], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3814826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.47084707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8393734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9356045], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5729579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0570687], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.18404242], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.27585733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9653531], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4865362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50876796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.47558174], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9841321], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5335207], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34043288], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48951668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9987647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.03345466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9899808], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9887695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14631265], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.292052], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.350608], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20102109], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04921875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.12173745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.34387818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48696378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5348552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9785299], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9940239], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9840758], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9694792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0995974], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9937157], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.35510185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52367455], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19494146], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.36403906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.52341986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06179619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.66154647], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.2845649], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9929584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.77198434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.90260506], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2691062], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9780362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3024103], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.19176196], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.33598918], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9781552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8331129], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.65313125], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99816585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.52337974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.40559757], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.10464533], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06351847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.37684447], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.52443475], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.6645474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.88939744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97004104], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.31017748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.37196797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48456797], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.968078], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.54902655], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99711454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45987907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9193641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11046549], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97803277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5228986], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9993302], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9698682], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.81042606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.18871565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04907762], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01398669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9068442], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8768121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.95291483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9643422], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9859205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9981244], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99165535], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.55618495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92273355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.41674098], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (4,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5][0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5][0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2500, 'query_cost': 0.0, 'learning_time': 120.33578536804998})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__4.pkl


ONLINE LEARNING CYCLE 5

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 21008, frozenset({LightInCell(?x0:light, ?x1:cell)}): 2626, frozenset({LightOff(?x0:light)}): 2626, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 2626})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 21816, frozenset({LightInCell(?x0:light, ?x1:cell)}): 2727, frozenset({LightOff(?x0:light)}): 2727, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 2727})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 22624, frozenset({LightInCell(?x0:light, ?x1:cell)}): 2828, frozenset({LightOff(?x0:light)}): 2828, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 2828})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 23432, frozenset({LightInCell(?x0:light, ?x1:cell)}): 2929, frozenset({LightOff(?x0:light)}): 2929, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 2929})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 24240, frozenset({LightInCell(?x0:light, ?x1:cell)}): 3030, frozenset({LightOff(?x0:light)}): 3030, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 3030})

Learning NSRTs on 30 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8720.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20987278], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.28111652], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2652688], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7204119], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48626456], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.34334782], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98180103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7673335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8387525], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99393415], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8201102], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03987147], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00732641], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05639376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.23779312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.06162727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.7381709], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4219701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7839957], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9600174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.10816199], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9724955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.38636848], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99279284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.67556626], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.56080484], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.21905279], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8257353], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.12410649], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9822961], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9965027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4819574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97051716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7188328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8433538], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.90360457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.332353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.21888572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.94274914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.7917913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.85645634], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9381895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.23566584], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.87184185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78647465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5491388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7290308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96691346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.43802586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9981101], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45820028], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19783917], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.91495615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01561462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52644414], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.771611], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98619413], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15740325], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09617507], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.983973], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03093676], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9821688], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9681764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00027413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95290804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9808352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98517525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6414686], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.58110654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9928994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7230939], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99977875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.19890048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.994385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72590846], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9922232], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04470697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9855526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.55799437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15346497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9849778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54536134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8327546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05401491], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20450877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9703231], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98613286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8807339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.15526581], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9033433], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8319538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.934514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8481993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.35440937], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9979185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98975885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9699195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.88108474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11501957], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.93696743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.85271454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5618614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97133195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9830573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.73349524], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98755854], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53644544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.41560936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.07138082], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6023096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9926135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9761899], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.966914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9953081], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94713914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96843344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-9.322752e-05], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.362127], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3013826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.952616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9969093], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9619529], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98346394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.39323837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13888173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8481463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.33443126], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.993122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2805877], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0500324], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4035051], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9807469], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6796961], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35173848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8435821], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9869631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.72998595], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6980988], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9981891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12861274], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9476416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99290746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14305018], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99851793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9644764], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7907919], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97250736], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.33943334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2676871], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.68219966], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.21783178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8463786], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6845645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68230784], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.49532425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.44937024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.43448418], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2482315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.438123], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.58229595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8512418], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8300025], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9983957], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.5492627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99826425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.09804421], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.20533466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8313008], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.8796327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.6795834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9975694], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.41127548], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.18935406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.98769736], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.989962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.40940547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9635995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02144822], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.92500913], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.10832881], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9749903], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99120355], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.75927037], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2526763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.02673921], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.50548166], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14472017], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97938454], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.995107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8092979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8498141], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9615954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.68822294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48447493], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6040721], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42746216], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98050815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9731108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.08583067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8836201], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.25120202], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9789201], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (5,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6][0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6][0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3000, 'query_cost': 0.0, 'learning_time': 146.82899122306844})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__5.pkl


ONLINE LEARNING CYCLE 6

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 25048, frozenset({LightInCell(?x0:light, ?x1:cell)}): 3131, frozenset({LightOff(?x0:light)}): 3131, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 3131})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 25856, frozenset({LightInCell(?x0:light, ?x1:cell)}): 3232, frozenset({LightOff(?x0:light)}): 3232, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 3232})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 26664, frozenset({LightInCell(?x0:light, ?x1:cell)}): 3333, frozenset({LightOff(?x0:light)}): 3333, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 3333})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 27472, frozenset({LightInCell(?x0:light, ?x1:cell)}): 3434, frozenset({LightOff(?x0:light)}): 3434, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 3434})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 28280, frozenset({LightInCell(?x0:light, ?x1:cell)}): 3535, frozenset({LightOff(?x0:light)}): 3535, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 3535})

Learning NSRTs on 35 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6414.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.36528742], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.7234801], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.38647127], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.984059], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99221355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.995074], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9900887], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6524881], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.77058554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7543117], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.709942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5692729], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7271032], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7491161], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5414987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.7460838], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.73799485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9840216], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97536933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97710174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5600534], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.7470651], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97831744], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9529252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.8356433], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98079157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8245986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.2724658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9989414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.38041613], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7652112], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9968717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.54630035], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.990834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6342888], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9525333], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.36461458], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6795662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.39772075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97403735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.70335025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.74682295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9971708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37627798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.62657285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66412127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1337086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.55941254], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.64463055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20098254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9963407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20713657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98441344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26848736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11507212], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06783833], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9866975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7982471], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85139227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.48292813], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9582696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8134241], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.952679], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.8850451], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.32509676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95629054], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8849097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9715263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.61661994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.37514418], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.19694418], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.18225558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9974447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9922743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.66824013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.74533033], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.72628933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.33201352], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07004873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9887638], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9553371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.45981044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.750893], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5262157], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.53288275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.36669728], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9592522], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.20977864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4211516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26331437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8225603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9870561], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.61809], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9354177], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9673621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.48369667], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.234835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9296149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04344603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9755352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9780383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07821659], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9930668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.18096355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9209729], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.90643203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.80194336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97172034], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5256385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9281719], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95828426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9876655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98275876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.998647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8278525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9934386], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9693145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7837669], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99946415], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9977718], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37829947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.09726536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9997941], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99800855], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9796883], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5283531], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9261398], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17071925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97070384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98882145], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9837509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1263857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98934245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78986233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.88822293], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9507084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.61778307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.95247996], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9822566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.12470013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9874609], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.05661138], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.12973614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9980246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98905987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.18494703], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.3088405], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99568677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.11303371], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9878758], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98340666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6904303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27912232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6284403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21441439], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06024688], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7426205], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8401395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2469913], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.704669], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9991968], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96642786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44183108], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8305875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94148827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.70138866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9818644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4172179], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9975831], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5712804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18721011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.39379227], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.90862393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8574512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.72042066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9989414], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.37532887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.00437546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9642938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.78942704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9996654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5586312], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5721828], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.766819], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.95860064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4631587], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.17289297], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.8313819], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.998811], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.12438528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96627265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.17839886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9909254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.385543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.30200502], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9582032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.3344569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.35065985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9229945], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99424535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13666922], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45014992], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9991553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6162067], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.27393875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9931267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5620088], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.15835883], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99928916], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (6,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3500, 'query_cost': 0.0, 'learning_time': 171.29181334911846})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__6.pkl


ONLINE LEARNING CYCLE 7

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 29088, frozenset({LightInCell(?x0:light, ?x1:cell)}): 3636, frozenset({LightOff(?x0:light)}): 3636, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 3636})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 29896, frozenset({LightInCell(?x0:light, ?x1:cell)}): 3737, frozenset({LightOff(?x0:light)}): 3737, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 3737})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 30704, frozenset({LightInCell(?x0:light, ?x1:cell)}): 3838, frozenset({LightOff(?x0:light)}): 3838, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 3838})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 31512, frozenset({LightInCell(?x0:light, ?x1:cell)}): 3939, frozenset({LightOff(?x0:light)}): 3939, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 3939})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 32320, frozenset({LightInCell(?x0:light, ?x1:cell)}): 4040, frozenset({LightOff(?x0:light)}): 4040, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 4040})

Learning NSRTs on 40 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6447.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.849918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4066272], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9250529], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8185846], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06534903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.7639889], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9862478], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9529897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.30632743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2912881], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9449724], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.33474457], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.991763], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9773126], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98077404], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00064927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.07100251], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9655988], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0147039], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9906242], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99786264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7193918], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3155177], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.31292516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.26932347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9638488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.38511965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.96042407], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18654826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8641156], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.47963002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17573205], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5401889], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9952013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.52960575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99121684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97959673], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9057516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93513775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94663554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.991288], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9807129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51134723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7164214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.04681649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7046422], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.10716619], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.78145844], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60361123], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11470594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5025188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.643832], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8784355], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02225374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.49716422], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9529314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.37850714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3217943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.38746566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4262834], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8932708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.24319516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.997177], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.530623], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8804861], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8339542], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97811514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.75554043], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5415582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.03272111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04472103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10016727], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99439996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.488924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9663528], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2047687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9904575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72294706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6916229], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99174803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13442424], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9891055], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71216094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39470807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85557747], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9888378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1289266], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6256293], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8567757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7613362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4839965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9807919], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9829515], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9770128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.31263083], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4179647], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.91853184], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5397211], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54593974], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9460368], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26612714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98495656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38827202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9925213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99650455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.79316634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13883618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7300129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4060341], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00777883], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9699879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6051872], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14562567], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24984513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1626392], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6688543], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8145892], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9210868], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6873028], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9787754], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9381926], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9941456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5744765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9910669], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97818595], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98278725], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.89437246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98928636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9460362], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9579047], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5813685], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.97018445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.8708042], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.18937647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.7107488], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1883141], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9658858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4275042], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9815125], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7565229], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2413367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.53898096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44873142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.06944919], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8863227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28115633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9846446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9387362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15417661], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1850901], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99801975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.75978774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99702376], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99966484], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9912451], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.00113852], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.10097557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.64215076], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9989155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6143512], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19911219], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.966864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.57151294], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9329378], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.4861947], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19020918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5189894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9881664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.69407964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4289845], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937468], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96935916], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9873524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.57886523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98403835], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.73018396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98713535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10106024], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5935674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98696715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.32296562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9690402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44310296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.997064], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3263721], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9991225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9891231], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9713628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9503557], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9950511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.14804806], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (7,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4000, 'query_cost': 0.0, 'learning_time': 197.32471441011876})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__7.pkl


ONLINE LEARNING CYCLE 8

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 33128, frozenset({LightInCell(?x0:light, ?x1:cell)}): 4141, frozenset({LightOff(?x0:light)}): 4141, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 4141})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 33936, frozenset({LightInCell(?x0:light, ?x1:cell)}): 4242, frozenset({LightOff(?x0:light)}): 4242, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 4242})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 34744, frozenset({LightInCell(?x0:light, ?x1:cell)}): 4343, frozenset({LightOff(?x0:light)}): 4343, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 4343})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 35552, frozenset({LightInCell(?x0:light, ?x1:cell)}): 4444, frozenset({LightOff(?x0:light)}): 4444, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 4444})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 36360, frozenset({LightInCell(?x0:light, ?x1:cell)}): 4545, frozenset({LightOff(?x0:light)}): 4545, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 4545})

Learning NSRTs on 45 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5990.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18013544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96951985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5607222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9857452], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00568453], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.19181317], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9902543], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99665666], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99843174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6825026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97705853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9689699], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97264296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9998643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.16611454], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9800685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97988653], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.958453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99021655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97751474], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.89057964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.96834415], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.024918], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.05843021], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98361814], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9996177], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5864398], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91008216], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6010832], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99220467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99970376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.58994895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.27106625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.85988873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.40303457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9714701], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9607046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9832648], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.41940895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93677986], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98645645], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9923433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.21322386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.502385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.81961536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8050884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.35051927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9727609], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42117453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5861959], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9855243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97329473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.80845], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.865343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2711826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96673703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09944803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9926223], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9981251], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9988863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6375567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08621518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2898388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.63752764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95957226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9915162], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.16148458], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99755794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95929635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9824559], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98348284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982676], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98400927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2410691], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.34307504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9666465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4256831], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.44318336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.79004914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99620366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9771778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8244328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00448997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9993816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.19492361], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.54533607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9992407], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9886013], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.64203537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35284248], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9535179], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.07317241], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5274227], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9843656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3770834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97308266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9821466], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8402346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.47369832], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00874975], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.985486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26033604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97867894], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21706904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9977328], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6728719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.29716355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00798953], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9935013], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3893223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5304064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9670092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96505547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9773126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4700222], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23518851], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.64906806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9093094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13199182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.32001242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20335068], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05123554], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97781], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99046504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.945514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9932506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.996926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9791667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9665603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9639145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.31109685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.66446143], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6910769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.26615727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.30572698], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9251666], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00994494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2992178], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97756267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9977032], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97362274], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3533449], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.996833], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9771697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9642838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6410764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9129499], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7309028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10730678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.39333165], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9756174], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.36679208], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9316739], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.25617927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98382443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.95270485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9498542], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9834785], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98731923], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12951104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8343557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9484594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97787243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.18779963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09724151], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.72009265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9789238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.87116206], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98894095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.397879], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.1895153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.88114053], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12029272], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6409177], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8527745], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.979265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.56711507], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73482305], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9947979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98589575], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8391699], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.33728334], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.8930004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.996864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9985629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3981153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.92966986], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9979229], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99414426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97877693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9062416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22347161], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9837898], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.999006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9966168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.24840057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9910379], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98336416], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.92687064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7875421], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.6704137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.04435986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.56266934], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8313787], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.89815617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.26556897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.27869964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.3238872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.51970774], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98711234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6414524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14725439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.82598513], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.27184284], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95670396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.23849116], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.47439665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9900427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12926428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.910551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5070568], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4945801], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9995964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.90518504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24937797], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9848551], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (8,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4500, 'query_cost': 0.0, 'learning_time': 223.94814131507883})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__8.pkl


ONLINE LEARNING CYCLE 9

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 37168, frozenset({LightInCell(?x0:light, ?x1:cell)}): 4646, frozenset({LightOff(?x0:light)}): 4646, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 4646})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 37976, frozenset({LightInCell(?x0:light, ?x1:cell)}): 4747, frozenset({LightOff(?x0:light)}): 4747, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 4747})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 38784, frozenset({LightInCell(?x0:light, ?x1:cell)}): 4848, frozenset({LightOff(?x0:light)}): 4848, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 4848})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 39592, frozenset({LightInCell(?x0:light, ?x1:cell)}): 4949, frozenset({LightOff(?x0:light)}): 4949, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 4949})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 40400, frozenset({LightInCell(?x0:light, ?x1:cell)}): 5050, frozenset({LightOff(?x0:light)}): 5050, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 5050})

Learning NSRTs on 50 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5474.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.73701864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95280737], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9813913], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9901368], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98542666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.53776556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9887112], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99721026], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.91648567], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5318046], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.07142367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9998166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.60327715], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97984207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.09597749], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9693042], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95787764], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.14714882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7881767], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43797117], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03677214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9939949], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.04796222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98564947], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98881453], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5233848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99304426], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9513356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9849282], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9701236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98295975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9912934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99592316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.45643592], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99955404], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8186322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43020087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.45437795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9812341], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9883614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.917185], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46898574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9678764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00949251], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.76963043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05957066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9404544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9392554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99047893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.996208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.79269767], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99138737], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9794289], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9993736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98858035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9885666], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9457412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9938819], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9586194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97433203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9893747], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6160499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.19660565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9897727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14159307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46008083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.91846985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7015834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.05588243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99225324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9552852], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.92644316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00548626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9612501], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.50474757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9954196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9731923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97830105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98641026], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93028575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9617216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.37386048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99664754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.31956106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.0099205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9825365], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9911246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7547913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99638695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99769723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9801595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99330026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.11830436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6007415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9728913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9779926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9736471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95949596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9899731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8921446], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.05414842], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9994069], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.42680314], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.16224764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9994067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9841824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0681851], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9924977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6104829], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9939167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9719929], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8383684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06357575], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.89704126], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99776465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9721097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99863094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.89623487], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9954701], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8922918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.30193824], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.56262994], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9829804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24152364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9552986], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5558444], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96496254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.43559933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83144313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8463273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6767842], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.90149873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9986549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8247344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9969308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9828216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27563456], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98973686], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96106863], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.34425446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.46413335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18544805], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9923669], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.20004483], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9976716], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9955837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9888248], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9840332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.46844456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.97989064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9939899], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.74916536], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.43876222], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98226154], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.42791295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.89487135], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9516175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99020904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9353548], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99517787], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.14027469], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.63865024], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.05854446], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9954533], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9801004], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8048973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9944029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.13602078], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9577364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9871359], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99662423], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03097781], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9187575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.10968551], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98031557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98307276], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.30871937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8865728], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.74924064], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08600143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99413615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5428074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.64851964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19633503], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99888337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8995785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4931281], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99047494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4879018], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06836849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37213305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97352415], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5291618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.972629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3644969], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9971471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21112007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.82316893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9314334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9702169], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7635228], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97789496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.08824963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6833851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.08338756], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99121135], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.986816], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42148012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.94459045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.25183988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.45889625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.45151606], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (9,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5000, 'query_cost': 0.0, 'learning_time': 251.62003753409954})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__9.pkl


ONLINE LEARNING CYCLE 10

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 41208, frozenset({LightInCell(?x0:light, ?x1:cell)}): 5151, frozenset({LightOff(?x0:light)}): 5151, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 5151})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 42016, frozenset({LightInCell(?x0:light, ?x1:cell)}): 5252, frozenset({LightOff(?x0:light)}): 5252, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 5252})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 42824, frozenset({LightInCell(?x0:light, ?x1:cell)}): 5353, frozenset({LightOff(?x0:light)}): 5353, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 5353})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 43632, frozenset({LightInCell(?x0:light, ?x1:cell)}): 5454, frozenset({LightOff(?x0:light)}): 5454, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 5454})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 44440, frozenset({LightInCell(?x0:light, ?x1:cell)}): 5555, frozenset({LightOff(?x0:light)}): 5555, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 5555})

Learning NSRTs on 55 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6332.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9910551], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15250815], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9971995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96407694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.50483376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9965319], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9005873], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9747033], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9995809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3022896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.47552985], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.56944406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96000385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9319755], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9936978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.58769935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.64954436], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99910945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9410208], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9875276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9757685], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4641494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95940477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97200495], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9981693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.31920782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.3833568], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99717945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5602194], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.65325373], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96698123], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4849987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7687769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.10241926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.57683265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15860547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00359152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79657656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9919395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.24414003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91090816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2206282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.81740797], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9908382], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8109452], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9821644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4803468], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8894979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.63432395], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99652696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02510537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9976913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96787214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.57080424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.05876588], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99139625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11638714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99932724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9535547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9992787], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99560916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5353632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26561087], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9982296], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96264124], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99455404], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9960948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.38339823], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.75826305], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9730985], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04782797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.32175526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9887512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9691051], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94616014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.17721456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9900752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9132469], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6513396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9799321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.543397], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99656135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9882751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9849216], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98963857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9248374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9897506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17293602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04359533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99654096], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5551415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9946514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.982456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72000986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1774501], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9993788], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18906972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.75206774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.34136885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9822446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99750954], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99447304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5404556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99836475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.802622], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99708694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1868855], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9886173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6109699], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8880788], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.215285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7591917], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99798214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.734012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1471534], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98764133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9839457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97755283], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.68448293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4021948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92964536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48617086], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9906386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.42250633], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3004377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1340465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.68599844], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15158163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99938196], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.25096622], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5648575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5942364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99370927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.05147172], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98001885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9938567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9914822], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9839974], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9806347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98874867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7531295], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99396133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9994209], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9944559], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9672753], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9906523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9917798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9663851], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9985996], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9546634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4504436], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.45850235], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9959034], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97161484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97850996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.26578665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5318672], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97459507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95134497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9985359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.42654526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.42374763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9806304], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7048229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6484119], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9840337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.85311955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6184566], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09226049], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98637867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.73495746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9844776], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12089511], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99429417], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6821717], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02804698], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9738852], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9516163], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.12964606], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8192535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9729795], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.1706077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.970622], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9971595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.65625125], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9763541], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99806994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9940089], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9868348], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.19781502], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9988626], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7142287], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9862406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9641357], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.38170156], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96052545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.02374947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9984567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.22603787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8938508], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.24437742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4859734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9925791], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.41790262], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.02799484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00265304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94647175], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9989154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97241527], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99657583], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (10,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5500, 'query_cost': 0.0, 'learning_time': 282.1833068371052})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__10.pkl


ONLINE LEARNING CYCLE 11

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 45248, frozenset({LightInCell(?x0:light, ?x1:cell)}): 5656, frozenset({LightOff(?x0:light)}): 5656, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 5656})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 46056, frozenset({LightInCell(?x0:light, ?x1:cell)}): 5757, frozenset({LightOff(?x0:light)}): 5757, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 5757})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 46864, frozenset({LightInCell(?x0:light, ?x1:cell)}): 5858, frozenset({LightOff(?x0:light)}): 5858, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 5858})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 47672, frozenset({LightInCell(?x0:light, ?x1:cell)}): 5959, frozenset({LightOff(?x0:light)}): 5959, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 5959})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 48480, frozenset({LightInCell(?x0:light, ?x1:cell)}): 6060, frozenset({LightOff(?x0:light)}): 6060, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 6060})

Learning NSRTs on 60 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5565.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9930879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96521276], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9940702], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05670337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99318933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5735783], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37904686], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7737914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.62735605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.25631568], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9817417], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.27660352], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9901187], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9999201], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9730562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97202766], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6564655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99890924], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96249574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9926744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08951788], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.75656074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97470033], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.95688516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.78020996], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9990576], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6914833], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9934488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04420399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7557745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0114429], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.60691184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9705239], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.933708], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9983165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.3246247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.69404477], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9931514], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9962215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97817135], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00792724], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00819124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9604906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.59853494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94884694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.553624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.47606978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93158346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9913305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99702096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.398699], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99508464], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96360886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3393783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5899843], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75207305], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9879676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9884836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.06101258], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.59985024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5681997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54682106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9666318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.35685733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9902652], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99292684], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9988357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98325557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.31552985], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.40978655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6069529], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.962035], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.995624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96557176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9982822], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9949847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20294572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9691114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.64721704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.11398333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.29743764], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98283696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99929315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9546262], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5520344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99836665], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9807019], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.90255195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9824753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20931843], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9828552], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6875028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3975036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7392365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45825106], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9890763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96733516], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7821856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9989617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9817829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.42429012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9601375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99439025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9951487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99105847], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9872234], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98796225], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8731253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.48429728], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9951198], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.17599101], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9903746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9988873], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.08889963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.45313132], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9862599], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5165827], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98577917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08691718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.06157694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.39622754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.939043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9802802], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96900535], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.89423275], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98974407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8330467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6014192], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9557849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99592847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6432818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9802305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97912997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99685866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.64061856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46557724], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.19696864], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9963452], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99167997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3706953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.03685826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9869112], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9973567], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.42532676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98562217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.47209102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6818783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.61191326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.88957775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.408098], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.83369267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9978166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7022123], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99997306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89404756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.03939353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98058414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6412902], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.85821265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95203674], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.17985103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9989426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98236024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96286273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99573594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12253301], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.94946915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9745405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9990477], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98162997], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9995225], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9976163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.91921085], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99269366], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7949723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.83744395], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6633026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22998784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9924411], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97002476], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99167293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6880645], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9887047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6275101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8739531], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.95431554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99888504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99430376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.96628505], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.98034626], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9352058], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5431812], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9963059], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98244977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9885255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9719529], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05593963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27506977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9978484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9411969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.89073706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99276155], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.31771767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97964376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0241174], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5206248], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9817202], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.84791875], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99723166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.8492078], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9948808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.20179696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98514915], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.09107818], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9555355], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (11,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6000, 'query_cost': 0.0, 'learning_time': 313.2660690781195})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__11.pkl


ONLINE LEARNING CYCLE 12

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 49288, frozenset({LightInCell(?x0:light, ?x1:cell)}): 6161, frozenset({LightOff(?x0:light)}): 6161, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 6161})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 50096, frozenset({LightInCell(?x0:light, ?x1:cell)}): 6262, frozenset({LightOff(?x0:light)}): 6262, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 6262})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 50904, frozenset({LightInCell(?x0:light, ?x1:cell)}): 6363, frozenset({LightOff(?x0:light)}): 6363, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 6363})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 51712, frozenset({LightInCell(?x0:light, ?x1:cell)}): 6464, frozenset({LightOff(?x0:light)}): 6464, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 6464})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 52520, frozenset({LightInCell(?x0:light, ?x1:cell)}): 6565, frozenset({LightOff(?x0:light)}): 6565, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 6565})

Learning NSRTs on 65 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5501.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.01143045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.51387334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9793072], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97852993], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.963158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8787292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.87033993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.70830214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97749096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9590053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99283856], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.3132755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.93158317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.46811265], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.7800817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2777946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99720144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.0308471], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.1439033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.999848], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.966867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.29550377], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98781544], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99535817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8317746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6089508], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99601996], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9829226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1594945], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.6949593], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9665236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3192648], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9931578], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99020463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.980958], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99670786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.28302175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99116063], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96446216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95769984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8545459], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98307973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99474066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9884299], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9629808], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9860986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.31224176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7314285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.84002256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20731436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7047837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97357786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9947444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.29396766], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9389432], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97963744], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99743485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.92700136], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98903537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36514872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.32003427], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24745207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9979512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.70722777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8957273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9722431], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.999626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9922141], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7154993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12473106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98268944], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.55704665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9707195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9619649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.582647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9472389], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9991682], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21454743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.03346891], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99499625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9977036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9985117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11272119], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98026717], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9615713], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9756333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.90130717], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.44510922], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7431638], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9986998], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.61034244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99578536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99429697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9952766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98132753], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9700184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78728014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9230977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70860565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5141077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3255564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96392435], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9866872], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99885505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95887214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.990746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98517114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9940946], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98929244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9725563], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94727236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.61501133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5851868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9198687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2897824], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9843806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6891856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9774648], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00378449], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9891716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99009657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8532945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9876776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.17478174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5557381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2905999], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.63814086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19587398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09634704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.84156656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.59434694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9770928], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9816513], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.59916174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98773855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7253222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9815774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9767037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9954336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99749273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8497052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81437606], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98862505], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.56640935], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98341066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9721937], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9717171], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99500257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9560286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5778809], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99772394], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99504834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9886375], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98377234], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8609092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02741138], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54183775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.09296346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.97104895], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.87977123], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99955165], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99371845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92769486], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9984162], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.991856], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.96552545], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97936165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9924639], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.87501353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9694023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9570781], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98556143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2777056], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.232298], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.996331], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9657844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4305042], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9979788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9370661], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9945897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9880228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4002766], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9891416], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9546121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9820946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13044252], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99079514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9948103], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19600329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7485867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.985157], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98525834], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8359588], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9825362], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9994976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98211056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99468976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9493196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9950037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.26988488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9930783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9287561], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.7287654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.25375175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99794066], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9930007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9970678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.93867904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99094814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8961642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.89377683], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6027457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.955886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9404596], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9959899], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18147749], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9664646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99953544], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.95475054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9779072], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98790944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98696285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.925641], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (12,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6500, 'query_cost': 0.0, 'learning_time': 346.84401243313914})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__12.pkl


ONLINE LEARNING CYCLE 13

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 53328, frozenset({LightInCell(?x0:light, ?x1:cell)}): 6666, frozenset({LightOff(?x0:light)}): 6666, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 6666})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 54136, frozenset({LightInCell(?x0:light, ?x1:cell)}): 6767, frozenset({LightOff(?x0:light)}): 6767, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 6767})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 54944, frozenset({LightInCell(?x0:light, ?x1:cell)}): 6868, frozenset({LightOff(?x0:light)}): 6868, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 6868})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 55752, frozenset({LightInCell(?x0:light, ?x1:cell)}): 6969, frozenset({LightOff(?x0:light)}): 6969, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 6969})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 56560, frozenset({LightInCell(?x0:light, ?x1:cell)}): 7070, frozenset({LightOff(?x0:light)}): 7070, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 7070})

Learning NSRTs on 70 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6107.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97595793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99594164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.71160585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94166285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48247144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.86026525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99163777], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99690896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.92990905], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.991522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19217677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5001819], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.57249606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9550238], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9812651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.23717888], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06922802], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97958916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9473308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5469391], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3753154], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96547025], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.73042166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9764616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.984309], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70293003], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9737009], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98993295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96784145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.33551523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.02234797], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99827], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5366691], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9874641], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26346382], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5193019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.47672457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99824005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99626684], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9669039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.05933885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98234236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9845322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.19078636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9989157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.03644471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9894093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9821232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.00201277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99885696], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17203505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6340128], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.57862455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6603237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9939309], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99314123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8572368], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9620103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25428542], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.49424174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4741604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.55762297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.33187792], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.84505177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.21233441], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9396916], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.965696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9231684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94392115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9994293], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9823085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.37787396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7664931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9856332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.23662983], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([9.9251614e-05], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9633395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97145534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5388985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99571013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9459479], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9970012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92037565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.19806056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9714456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99575853], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95805544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9069182], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.66091895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4077679], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9881077], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9658841], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.20173314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6300767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02616155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9867067], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.58052874], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.93645], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9703638], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9996957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5694128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.42293024], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99780464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3320244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.811265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9308758], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99065113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9883101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.07012991], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9974998], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93743056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00377502], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6746201], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9569033], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99392694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9945258], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05513492], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9309712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99932986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7428749], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.69119966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98494774], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99540466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98482484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9877591], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9189845], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9685287], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.78867596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4191601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13623871], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.17546575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98676383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.989187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.19794782], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17562354], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9895619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12509456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.961044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13898137], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9702152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7145116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5353634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7391626], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9996382], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9976843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97712517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5615442], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9590904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13121079], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9908243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15506987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9918557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9772948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7780865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9308187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94900644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9947942], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95185405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.72588754], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6170729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16132952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98662674], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99391586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9338924], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9751947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.14357616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5386808], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9617523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.31785676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9977711], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99227536], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8006947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.90468794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97752875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8922667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9651216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.995702], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.48981944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9769352], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97811043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.94397306], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9726519], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9586773], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9695167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9854065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42829356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97150445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9961862], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6304315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98042727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8153492], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9774004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9793015], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9952739], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9991052], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97021073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9975308], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.91332626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.86710465], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97134984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5137785], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99069744], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9995058], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9724189], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9970097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4489396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3842211], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9977059], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9882542], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97719896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.89514387], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3315931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99903995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98775357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42349678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.22514394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9694055], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9798788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.22527817], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9979972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9898247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97911155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.36510813], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9834181], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9647412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.37815598], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9998881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.03563847], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5483354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.05402501], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9350095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8053039], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49167842], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98379135], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9609304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.01876395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8797793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9673063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9300981], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9590217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98558027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.8775005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4356794], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (13,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7000, 'query_cost': 0.0, 'learning_time': 382.7261411851505})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__13.pkl


ONLINE LEARNING CYCLE 14

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 57368, frozenset({LightInCell(?x0:light, ?x1:cell)}): 7171, frozenset({LightOff(?x0:light)}): 7171, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 7171})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 58176, frozenset({LightInCell(?x0:light, ?x1:cell)}): 7272, frozenset({LightOff(?x0:light)}): 7272, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 7272})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 58984, frozenset({LightInCell(?x0:light, ?x1:cell)}): 7373, frozenset({LightOff(?x0:light)}): 7373, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 7373})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 59792, frozenset({LightInCell(?x0:light, ?x1:cell)}): 7474, frozenset({LightOff(?x0:light)}): 7474, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 7474})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 60600, frozenset({LightInCell(?x0:light, ?x1:cell)}): 7575, frozenset({LightOff(?x0:light)}): 7575, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 7575})

Learning NSRTs on 75 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6409.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06015558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9976555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.41476676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5560153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.990332], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9668797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9951329], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9762691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8470301], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9836617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9801293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9919871], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4647977], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9956072], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99298304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9938409], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6481991], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3051561], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.05821993], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3841936], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.06859845], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7463348], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9954022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9739463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9918655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9007497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.966958], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36556154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.59115773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99249566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8240601], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97859323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9754265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99518186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99731284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3131929], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9791365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.57130885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9804876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.40839037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9573256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9426434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.23404971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.94815725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95522815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9852255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9856693], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.27064657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9961917], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6397425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7184993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9804786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98398805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.958092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9415022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9231325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01191093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2689189], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99511623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94145477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9960402], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54047686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99084187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99164826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99805856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.999738], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6722195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.77556455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99568826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.91460276], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4671206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.51711464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10496823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9687849], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5503152], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9949751], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.06848772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9904853], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9905437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97798723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.16221622], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96180826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99985147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3056603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99733263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7828307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7380929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.87804574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79618764], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.73869306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.814033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9883208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.022609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9147395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91026217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98444563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.547778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99017715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46174416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98591316], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9828906], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9996481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98730665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38022923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98793507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.76474684], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9798733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96476704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9908385], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5155944], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98951536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99004894], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9999266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06899556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9949664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74229383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9984404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.79387635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99078244], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97716266], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9946186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.960894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99484676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9903552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9328128], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9913243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9998664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.20925097], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9167173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.979788], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9958759], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99586564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6877075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.983386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9949526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9375251], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9884009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.44972923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9954974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9924781], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9996824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.21920225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99614197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7396329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.565882], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9593155], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10624705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98628503], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9941315], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9759609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9794227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98372513], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99738455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9949423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.18161342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.96155185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9894484], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.86418694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.06110117], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9755983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9694723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9870166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99290603], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99353534], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9671518], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97957015], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07469622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84043324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40810254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7298819], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99485135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24348377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9938591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.24802735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6664039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27247566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98968923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.38538748], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.977217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7673059], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.8816386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9847861], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.7405646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9964791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.26341704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9892571], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47623828], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98301756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22866896], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4418676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.971745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4894398], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75190413], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9789496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8521236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00029702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99693274], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98725057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5403552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99711496], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98018974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15662296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8735515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97628486], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28912422], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6219816], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14566246], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9977881], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99996233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96573836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9986737], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9962932], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9663864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.210971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9813667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98054874], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99974424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00067564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.16116583], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9725596], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9918686], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98561424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9869722], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9907186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.86452734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.07907927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98704946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.62498635], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9567684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.7233601], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98015416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.54361737], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97722745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9828378], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (14,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7500, 'query_cost': 0.0, 'learning_time': 420.6652375641861})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__14.pkl


ONLINE LEARNING CYCLE 15

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 61408, frozenset({LightInCell(?x0:light, ?x1:cell)}): 7676, frozenset({LightOff(?x0:light)}): 7676, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 7676})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 62216, frozenset({LightInCell(?x0:light, ?x1:cell)}): 7777, frozenset({LightOff(?x0:light)}): 7777, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 7777})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 63024, frozenset({LightInCell(?x0:light, ?x1:cell)}): 7878, frozenset({LightOff(?x0:light)}): 7878, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 7878})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 63832, frozenset({LightInCell(?x0:light, ?x1:cell)}): 7979, frozenset({LightOff(?x0:light)}): 7979, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 7979})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 64640, frozenset({LightInCell(?x0:light, ?x1:cell)}): 8080, frozenset({LightOff(?x0:light)}): 8080, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 8080})

Learning NSRTs on 80 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6154.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99641687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9813869], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02121607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9519706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98620194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14407367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9944439], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97645915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.31245658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.65285504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.09646004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.28488016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9639839], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9966239], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98412436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.77888066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8026156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99826646], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99274385], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97242], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9950654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9370637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.901762], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9671697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5180284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9969585], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99017227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.458542], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99887866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6697563], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70524734], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9997849], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4046046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8625078], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99861866], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.13563459], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9997062], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9916093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6075542], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00478778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9720455], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.91419196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98129946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98229265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99306667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.92102826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99027985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95379037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.33604872], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.83858556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9912676], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99630225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20454665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94382423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47682497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.977143], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8620987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.47400868], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9847854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9787076], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4988624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9890971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01820146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12220855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.81094855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9336306], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9830697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.78634757], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.32485533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.69927865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5102357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94062054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99916875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94986486], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9865515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9899124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97104347], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.60364664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9960451], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99890614], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98069596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.09501912], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9886576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99125147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9189156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7833488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9837312], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98753214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9228236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9986322], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98783034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9415493], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99967325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99288017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00158149], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9982405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9825403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.975788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.86664057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98376656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99642926], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.70516104], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9514635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97763747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99417955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5705462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9020009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7933848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9989407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.52571577], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.68953043], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.78734756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6482743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16558394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9954444], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02298693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98310506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.02753821], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96414673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9730599], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9974108], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99808335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9601728], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9921635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96232986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3060281], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98159784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.16324373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9797374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.26290372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.19282298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.11982689], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99184465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9850887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9942485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5438], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9697084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99691695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11857239], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9965793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15268765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9743657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98472357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9807754], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98808736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.64971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97675353], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9965667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.58014077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9785054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99195486], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9854136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3432672], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4941406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19844234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2565461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.38829213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9835026], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98477757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9891763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99238735], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.3111572], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9931775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9896491], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99934804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99710745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99045116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9972129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.56826997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.940779], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9720768], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.7810204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.22567967], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9733282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99398327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4910013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.21649787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.969319], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20325957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.05429387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25193697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97609746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99625874], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9822656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95630705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01110049], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99591386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7887412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9945546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9684379], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93883055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42186728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.45018822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.23333418], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98931134], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.34494495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.80975074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9942804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9987419], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98907757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12654531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9726343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10924996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.19745632], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7653323], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22518976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99327177], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6427955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9912124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.74864733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9327319], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9917007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.20841187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95294577], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98777395], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9386191], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6646295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9759273], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.88164395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4399203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9957592], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9850274], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.43272695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.5408146], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.973184], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.97463155], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.99989647], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.42832908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9412501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69250745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9934794], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9749791], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01266435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.94390124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6015177], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9758234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.830239], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99123335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9847039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.20180485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.86303276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8952983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98223794], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.989867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9723265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9988526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99756825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9783048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42750594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.92554194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98894626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.987943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41562045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.62985486], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98972994], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (15,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8000, 'query_cost': 0.0, 'learning_time': 459.7981656881748})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__15.pkl


ONLINE LEARNING CYCLE 16

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 65448, frozenset({LightInCell(?x0:light, ?x1:cell)}): 8181, frozenset({LightOff(?x0:light)}): 8181, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 8181})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 66256, frozenset({LightInCell(?x0:light, ?x1:cell)}): 8282, frozenset({LightOff(?x0:light)}): 8282, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 8282})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 67064, frozenset({LightInCell(?x0:light, ?x1:cell)}): 8383, frozenset({LightOff(?x0:light)}): 8383, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 8383})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 67872, frozenset({LightInCell(?x0:light, ?x1:cell)}): 8484, frozenset({LightOff(?x0:light)}): 8484, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 8484})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 68680, frozenset({LightInCell(?x0:light, ?x1:cell)}): 8585, frozenset({LightOff(?x0:light)}): 8585, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 8585})

Learning NSRTs on 85 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6226.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15587121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97735983], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99605125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98395914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09682225], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9906205], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6797616], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.83750457], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.94982165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9889943], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97616637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8587721], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9678629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98390114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9633976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9793333], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.54431117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6498682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9081046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12658875], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9962049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6264598], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9927906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7812097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.85521376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99975485], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9851909], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9806979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96994954], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8020504], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9519394], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9981088], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9812693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99634105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9675435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5336021], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99442756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.93178815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3429178], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.7843405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.26141018], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9851276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.31079453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99742866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9785326], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9023546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9991008], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9700386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.30001006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3577427], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6362252], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9795154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9246843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9635667], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9470122], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99521005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.70089024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9929525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9512474], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99851346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.66690874], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9819951], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.34062365], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92530525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.94403654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9911346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98974586], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99692655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.17801408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99738586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97980005], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4516228], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9819896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.7110368], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9900929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8890561], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9947198], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.23744631], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8433774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9855276], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7856966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98915637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9945141], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.973897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98891914], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9714741], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9421724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95153844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99485993], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9591206], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4350471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9593197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4938498], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6134231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.15949734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9405717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9989308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98455846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9604595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9543909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6360124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9998056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99533176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98233783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9801284], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9934061], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98206484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4153425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.31773338], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9825726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9602106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9068454], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9417229], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99747056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68219954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9616051], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9817536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36852425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.42740953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9973346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81829756], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.33524162], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9869507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9748911], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9543561], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99610096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9912431], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.999116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9956907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9953723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9786835], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9787284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1774687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99020827], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9949006], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.7648502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12922896], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9856344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99518806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99914944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98095435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98992527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99778223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9926515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9461629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.982747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96201086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.8815533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96300745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9775844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9810051], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9656903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9970796], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.92988896], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.13111165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9905424], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9877844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9852642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9865022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98539203], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.79901135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99936855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9806665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9884648], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95785856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99275714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9803462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.17915857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9971057], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14493106], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9565432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8070933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.990155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.86676896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2865689], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9847301], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9821916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.37339085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9883138], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7388766], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9923521], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99238634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9970426], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.25956884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.996492], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9994514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99201024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.95043695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.92155147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.96307814], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9980759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.59530276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.25658488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9794863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.94451797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9803858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.19735913], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.52726024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9931594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.2158889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4830342], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99437416], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.94549674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.973939], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9833558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95208144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93501467], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98627627], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9790459], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99480385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7602396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.94694614], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99379504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9601858], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9767255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9767866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9979668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9841562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.3224396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99472207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9863139], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9823448], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9896141], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (16,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8500, 'query_cost': 0.0, 'learning_time': 501.03621943021426})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__16.pkl


ONLINE LEARNING CYCLE 17

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 69488, frozenset({LightInCell(?x0:light, ?x1:cell)}): 8686, frozenset({LightOff(?x0:light)}): 8686, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 8686})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 70296, frozenset({LightInCell(?x0:light, ?x1:cell)}): 8787, frozenset({LightOff(?x0:light)}): 8787, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 8787})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 71104, frozenset({LightInCell(?x0:light, ?x1:cell)}): 8888, frozenset({LightOff(?x0:light)}): 8888, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 8888})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 71912, frozenset({LightInCell(?x0:light, ?x1:cell)}): 8989, frozenset({LightOff(?x0:light)}): 8989, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 8989})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 72720, frozenset({LightInCell(?x0:light, ?x1:cell)}): 9090, frozenset({LightOff(?x0:light)}): 9090, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 9090})

Learning NSRTs on 90 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6515.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99741423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9922127], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9405451], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97707963], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9846525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9352848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.88790035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9889405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97801983], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.91417295], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99312323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99618125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.972667], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9666608], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9800142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.96001565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9993614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13435066], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9790194], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.998062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.36456376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.995039], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9090949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07674696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.946989], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.19098121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9624223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96787953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.17554432], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.90294206], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9829081], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.991814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9985289], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8431536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.84519327], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98356265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.76322675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9708597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8811511], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9796464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.95552325], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9982358], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98654145], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98994255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9613853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.36570278], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9966424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95701116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9744685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98293895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4729799], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96875334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99995506], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9932629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9312369], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9918154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9839017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.62672544], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9932367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9996967], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5485649], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97505355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8358525], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70655996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.18884277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04497872], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.94683146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.990229], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9973502], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.964095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97905713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.8416981], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9809979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97929376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9971944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.64822096], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9364014], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9359503], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.90150696], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.786215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9668803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7274576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96953607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9565883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4986132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.06911226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99186987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96805555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9899003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.53676516], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6378694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9527478], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99823475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95078313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.996265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9223985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.91054434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9916547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98995334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9827639], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4439608], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7064146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98885316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99967307], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6546682], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.977577], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3517132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97071534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8956541], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95414245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99908185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01210943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2611245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.21863239], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9428769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99640244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96236795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93379927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.25126144], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14838144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.36330575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.961714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97539395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99576354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6707946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99489856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16031758], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9542657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9624286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.54300237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9915541], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99385035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.02126324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95805615], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0947931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.77662486], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9952876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5166001], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00497781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.34242892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9922443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9842131], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53943986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15897338], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99062437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97081393], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9544322], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.90738755], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.26614407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.638436], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1124276], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9593797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.96155626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9623425], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99959767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98825485], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9828699], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9581158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.95684093], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9968232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97835976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9765198], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98911417], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97434145], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98588175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9900504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99443656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9984512], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9973175], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36797386], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99244833], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99973214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9508624], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9354382], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98702365], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9324215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.8380125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9931669], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9559544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.94154006], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9991764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99182224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.88198656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.38941613], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99613976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97578293], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99451864], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99650615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49878475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99397033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98638725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60274774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93642026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9588565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19540596], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99872833], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99711555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.92333543], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.32787478], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9414612], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95341885], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.21624118], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.94281864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.1842739], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.999383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97053254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9722867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99038166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9681543], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9984555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.96130055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9986349], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99726456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99661225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94094104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.516196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9899542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14876783], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.95313704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9804281], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9866067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9722487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.35504243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9838362], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9957721], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9940777], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97149765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9999816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99402165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98245406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9939391], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9823774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9891721], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99631757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99124926], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99125344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9950812], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99253356], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (17,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9000, 'query_cost': 0.0, 'learning_time': 544.1158838421688})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__17.pkl


ONLINE LEARNING CYCLE 18

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 73528, frozenset({LightInCell(?x0:light, ?x1:cell)}): 9191, frozenset({LightOff(?x0:light)}): 9191, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 9191})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 74336, frozenset({LightInCell(?x0:light, ?x1:cell)}): 9292, frozenset({LightOff(?x0:light)}): 9292, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 9292})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 75144, frozenset({LightInCell(?x0:light, ?x1:cell)}): 9393, frozenset({LightOff(?x0:light)}): 9393, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 9393})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 75952, frozenset({LightInCell(?x0:light, ?x1:cell)}): 9494, frozenset({LightOff(?x0:light)}): 9494, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 9494})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 76760, frozenset({LightInCell(?x0:light, ?x1:cell)}): 9595, frozenset({LightOff(?x0:light)}): 9595, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 9595})

Learning NSRTs on 95 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6443.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9917496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96977746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9866149], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99215263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99219763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9987479], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9725973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9897749], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9230332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99467915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16555499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.39549136], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9937981], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98842686], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9859258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7840615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9977922], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99374974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7125314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8166447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9748029], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.987273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9559068], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97839445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77627146], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.80126387], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.09376994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97212994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9903835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9768121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9803922], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9877132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7758114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.09838566], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9781026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5884931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98694557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.84365547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9706771], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9949778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07606985], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7315032], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98726356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.993602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9693663], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.20444556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98319006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.95654124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.60642505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98146415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98215514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.995424], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9959246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.508957], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99877423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9721823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.57722974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9998831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6188931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95801955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9525061], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99890995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6413118], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99788475], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97023076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9748419], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7418277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98831624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9978924], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9944184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9660582], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98974735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97429335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9989502], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9964922], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9854797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9896923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9945089], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9876274], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98716044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9921741], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95421046], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9919529], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.116202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04793619], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97197384], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99299073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9788968], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9992676], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.34639326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99707365], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6668417], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9987506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99468803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97401845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13845006], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.30991724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99572146], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9785362], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9951753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97753096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9981844], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9889679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.47927335], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9761388], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9857112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8667887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.82588977], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96336573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99574846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9876742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9758472], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.44813827], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97678596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.72275454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03594233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4302415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.991042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7341385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7617452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.586345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98998123], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9767891], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9781999], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07414001], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97217363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9706978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98712456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5039735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2502062], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9928772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.46733785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14779042], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94481665], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98985696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1800535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04041772], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98963326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24103245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8065199], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98122776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.07591808], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9249332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9879744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9870696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9589992], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.10573998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0217663], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9477243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9583982], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9665179], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97762585], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99486107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98957145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9974921], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9755615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44201282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9689969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09681661], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97522306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99318975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5763939], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9791448], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95804286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97963417], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99903506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.45856315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97140443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6715327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99899036], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.24027757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9774348], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.94966924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2337672], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.92615604], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.84104234], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9911724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9875683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.17254262], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9909937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.91041607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.01310069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.06552591], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9100261], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98702896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9940151], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.47747916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9739075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99365777], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9834677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.96346885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99880916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99011487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.17365347], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99965316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.46317446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.8624392], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9873797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4915111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9624501], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6163408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99417937], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09649435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44850484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9224103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9738872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6078588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1270865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9497421], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.91534996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9800891], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7380804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8757005], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.8625489], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9758067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97324437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.95878327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9848669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.40099472], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9966736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9969776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9684731], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97732484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.96526706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9977928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.30308503], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99273837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99189013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98708594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95798117], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9961777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9677896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6937801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.48185557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9852485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9741735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9557991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8513691], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99601465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97823447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9804412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.43444845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99991065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.54046595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9980682], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9990332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7533614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99521136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99654144], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.990602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9944803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9261633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9937487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98824966], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (18,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9500, 'query_cost': 0.0, 'learning_time': 588.9546141501633})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__18.pkl


ONLINE LEARNING CYCLE 19

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 77568, frozenset({LightInCell(?x0:light, ?x1:cell)}): 9696, frozenset({LightOff(?x0:light)}): 9696, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 9696})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 78376, frozenset({LightInCell(?x0:light, ?x1:cell)}): 9797, frozenset({LightOff(?x0:light)}): 9797, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 9797})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 79184, frozenset({LightInCell(?x0:light, ?x1:cell)}): 9898, frozenset({LightOff(?x0:light)}): 9898, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 9898})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 79992, frozenset({LightInCell(?x0:light, ?x1:cell)}): 9999, frozenset({LightOff(?x0:light)}): 9999, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 9999})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 80800, frozenset({LightInCell(?x0:light, ?x1:cell)}): 10100, frozenset({LightOff(?x0:light)}): 10100, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 10100})

Learning NSRTs on 100 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6156.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.975369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14905493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99329215], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.1614649], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.42101938], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9723505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.16331606], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.94902146], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9979611], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.982714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9589004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99982595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9948769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9004606], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9745118], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97391933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9641116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9974694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9923192], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.40047672], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9961662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9686515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99442333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9677248], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9969401], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98269355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99349046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9562002], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99407995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9857937], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99845916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.15344177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9648219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99533767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9986828], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9631646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9626079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.33986935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.990437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99042827], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9760654], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95042956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9840559], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9936517], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9267788], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9134418], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9394037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9516058], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99689156], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05430546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9971013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9999836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.977665], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9886113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99140924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98845226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96594584], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.92859536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9661582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8241082], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9841212], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97838587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6112425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99066675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9877865], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.84178126], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98628724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97221714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85134065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9961334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95832413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93836826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96099824], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99151516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.996396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.948909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.33708093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9958693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.994849], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9873328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.53630805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9901273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7624068], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97916156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.57434434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97922635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99958277], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9996558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9989104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98159444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.66126364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44053942], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6189968], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9936796], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9057803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7438785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.986302], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.961029], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99894905], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9694103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.51121783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89267206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9743135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9900521], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99163586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9991604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98302764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9460716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5737327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96568614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9803005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99015313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9375165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9511818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6568826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9630992], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.53285843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9400299], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98058355], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9556342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9733317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9838644], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24219552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.24193862], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8119124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5340232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98634696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7766842], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.75340277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9960999], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9834959], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.92381775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5916159], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9847364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9928567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94319373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49915048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9891818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99513906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.87377566], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94199276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9863758], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99136406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10495847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2666328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9920792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01763433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9665425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00439854], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9832448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.58495075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9986587], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9847142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96498775], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97958803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.19384792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.7664599], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9952764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97731835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.31743222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9304274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9719451], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9985692], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9825672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.47548145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4275498], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9978821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.59479684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9981034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9948475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9972873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99890816], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99577445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98456347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99936324], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9573873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.92594475], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9966882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7409883], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9923469], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8331101], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.94859827], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.1429367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.29366863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.60257685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.6187254], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9975656], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99288046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9938605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98764604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97627026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.27196604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9607948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6968705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06532171], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9616425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2757438], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9908352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5043457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9770625], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99937505], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98984516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9948758], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.966554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.95232815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99322295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95846695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9866378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9899006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97892016], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.06470557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9911176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99245167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9693602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97279596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.55619615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98466045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97236955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9848389], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.999313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9556015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98100334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9925441], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.88297266], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96694547], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95495015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98467636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9869249], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9689069], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9874028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7147697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15514202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99945045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98951274], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6896783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9954511], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9953443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9959684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9352044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.981558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96863556], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9840971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99920404], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.20115319], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3819609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9968342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.96746653], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (19,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10000, 'query_cost': 0.0, 'learning_time': 635.1570776191656})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__19.pkl


ONLINE LEARNING CYCLE 20

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 81608, frozenset({LightInCell(?x0:light, ?x1:cell)}): 10201, frozenset({LightOff(?x0:light)}): 10201, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 10201})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 82416, frozenset({LightInCell(?x0:light, ?x1:cell)}): 10302, frozenset({LightOff(?x0:light)}): 10302, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 10302})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 83224, frozenset({LightInCell(?x0:light, ?x1:cell)}): 10403, frozenset({LightOff(?x0:light)}): 10403, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 10403})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 84032, frozenset({LightInCell(?x0:light, ?x1:cell)}): 10504, frozenset({LightOff(?x0:light)}): 10504, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 10504})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 84840, frozenset({LightInCell(?x0:light, ?x1:cell)}): 10605, frozenset({LightOff(?x0:light)}): 10605, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 10605})

Learning NSRTs on 105 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6650.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9633354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99836457], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.42443275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9799064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99688244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9779853], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9646565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98051685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.18015648], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9991781], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.3684139], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98019296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9636717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5582659], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97234946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96922934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97946274], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98284733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9525186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9783573], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97839594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9876404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95716655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9695265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.08943452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12215142], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9905959], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9990715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98998433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9745258], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.76607937], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9761343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4877484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9781988], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97076803], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98789537], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9789526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9682347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9908309], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9943907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51564527], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97223186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.4997981], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9895458], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9962547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9769516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9634339], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9836914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9606084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.93048793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98598874], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46629745], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95297617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99883807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9617705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9651879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99052393], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98710805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.984677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9840084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99177545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9944358], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99596506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.77168274], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9838694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9950266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96250343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81473696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93549216], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.998486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9160457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9835618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96967924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.207027], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9645471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.998571], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9620821], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6692631], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9884399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6831128], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9950828], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96783984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9960534], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98429865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96686804], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98205715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6098579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.39195642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9826457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.40382645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.90629953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9977227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.82750136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9086731], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95306265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.980127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.89855015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9888097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9927298], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.87123686], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9771895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.49642164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9423626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96440506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9527572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90017414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.30286148], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96664906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98821557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.989708], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96860266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9763324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42803466], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5949312], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9240097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94962615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9959063], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9793139], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9947527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99589264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.991879], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93616545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9729321], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01825723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.91511476], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6223069], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97500646], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9919119], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2873288], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99293166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99728566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99315286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9942853], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16723444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94444835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9909198], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9903585], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98485696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.30859238], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99520564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9747331], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97126794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99899393], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5644386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99595964], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.91942286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.22240728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.45686778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8082092], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4468541], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9951294], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.15163505], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.40424496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9885625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.36616194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9898896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9793288], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97248495], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9894255], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9813612], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9331424], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9602821], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9855814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99410003], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9682571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.23445149], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9801387], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9973797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7466818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9929275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9968076], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.14710166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99766153], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9901117], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9972661], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9621448], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9825841], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98125297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.993121], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9823899], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.7115794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6213629], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.35147014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.40642872], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9451356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98876715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.94870704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.89907324], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9916771], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99003303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9742818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9969938], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96470684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99630994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.383878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9847352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9642057], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4043694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9973002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95425457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2187618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9917034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98720944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9892478], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.34510756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9855067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.94221497], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98416626], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9795949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99456626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9988924], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99425006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.165309], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98305815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5162724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9985758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5674541], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.96037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9543658], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.95887834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9765232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9980563], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9966965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.31144726], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99696696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.746378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.94389033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9895044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98163724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9416163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9814492], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99395037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.828402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.998251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.4389931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9945586], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99727476], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98265976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.68721795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66467434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.32402867], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2991507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9596217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26510617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98400265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.992172], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9988278], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (20,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10500, 'query_cost': 0.0, 'learning_time': 684.0093051171862})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__20.pkl


ONLINE LEARNING CYCLE 21

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 85648, frozenset({LightInCell(?x0:light, ?x1:cell)}): 10706, frozenset({LightOff(?x0:light)}): 10706, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 10706})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 86456, frozenset({LightInCell(?x0:light, ?x1:cell)}): 10807, frozenset({LightOff(?x0:light)}): 10807, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 10807})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 87264, frozenset({LightInCell(?x0:light, ?x1:cell)}): 10908, frozenset({LightOff(?x0:light)}): 10908, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 10908})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 88072, frozenset({LightInCell(?x0:light, ?x1:cell)}): 11009, frozenset({LightOff(?x0:light)}): 11009, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 11009})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 88880, frozenset({LightInCell(?x0:light, ?x1:cell)}): 11110, frozenset({LightOff(?x0:light)}): 11110, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 11110})

Learning NSRTs on 110 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 11000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5946.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.31217763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9882892], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9857853], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9760862], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99152124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9564166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.53836894], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9959263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9985643], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97616833], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9871841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4158818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9727793], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9988091], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99818605], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9934221], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.976965], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9995046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9923175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.7896862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98317087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48295155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.994282], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99907017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9755491], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2990095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.26483494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97827643], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9986964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97365785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.995182], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96653736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97141844], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9973969], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9720004], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99543434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99852973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05595433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.955171], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99909616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.59653383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9920733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9580783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99297583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98248917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10611085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9542198], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9537677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97916424], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9307213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9961449], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98272514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9839573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9844273], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44569483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9858862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47663838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9675917], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9911085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9855332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97006595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99746126], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9847143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99834144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98804474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06460083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9889458], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98437774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9768146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99816364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.91293365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96955997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98855925], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.7410345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9815715], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.33630872], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96693337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9983855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9933956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9947429], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6155428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99078447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9896123], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9919798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9959428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9831932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9990728], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9977831], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99382424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9964772], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.987135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8689455], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9963673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9960254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99353766], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99942195], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9092267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99021876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9972077], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.79047334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9715185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98954916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.22795753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99491274], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99626565], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99364406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9899315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9543969], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9530944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9417583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96352994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9726973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99920976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95945424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9382253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9819359], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99804175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99316907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97882515], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9880189], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29858035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99431604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99623877], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9900992], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99042445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9871294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.88148797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49249658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9839981], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9938564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9629974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9270621], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9883243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99164224], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.924751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9802696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9971353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98725307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9688386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99089986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98866624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5994429], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9949706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9942801], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.990664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.59036934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98770285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9940388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96521115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9897761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09135256], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9991965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9539397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96345264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99649787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99379504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9931648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6129655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01808289], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3473988], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97764856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97787297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5964395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9981339], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9646983], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9975027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9819978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97349274], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9818791], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15582408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99912405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9952042], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9852646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9942355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99865896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9675417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6146676], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.993006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00448215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9566208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9864472], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.971627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9981045], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9557612], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.996747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99936914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97296774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9924897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9990957], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9994381], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.21066514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9885825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96664596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99624026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22583333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99071604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.17667392], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9904325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9127225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9783994], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9868721], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4573986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98837465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97966444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99176735], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99758005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97179306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.998934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9970687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99470943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2061942], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99471015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99690354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67515296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9361568], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93669885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3022526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98820454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.987313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9933842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97712904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9967188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9620813], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9813454], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99961203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.82302654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.91327965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.8610688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9959264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99730676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.7664739], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98772573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.94122356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9985965], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9763631], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97089326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.93143195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9905918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.28428918], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99054134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9992438], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9860751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97398436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99028933], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9792187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93092245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9934879], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9948669], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98847336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44817415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.45847163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.96172994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9904783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5711591], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9492725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.04868804], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98876345], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.6827484], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (21,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11000, 'query_cost': 0.0, 'learning_time': 733.2276416711975})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__21.pkl


ONLINE LEARNING CYCLE 22

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 89688, frozenset({LightInCell(?x0:light, ?x1:cell)}): 11211, frozenset({LightOff(?x0:light)}): 11211, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 11211})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 90496, frozenset({LightInCell(?x0:light, ?x1:cell)}): 11312, frozenset({LightOff(?x0:light)}): 11312, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 11312})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 91304, frozenset({LightInCell(?x0:light, ?x1:cell)}): 11413, frozenset({LightOff(?x0:light)}): 11413, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 11413})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 92112, frozenset({LightInCell(?x0:light, ?x1:cell)}): 11514, frozenset({LightOff(?x0:light)}): 11514, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 11514})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 92920, frozenset({LightInCell(?x0:light, ?x1:cell)}): 11615, frozenset({LightOff(?x0:light)}): 11615, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 11615})

Learning NSRTs on 115 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 11500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6545.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06731485], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9788792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99966604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97125196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9972916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9790211], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9229002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98311263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99051976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9979797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9852453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99049985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.45472294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4413049], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9670752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9656617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9601272], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95593786], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21267778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97566915], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9776126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.62154764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9937111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.94662684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.26684958], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9860783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9884702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99790317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9926814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96453726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17134771], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.963988], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03958633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9739983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9617802], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9944629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97729796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89560175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9862288], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95933926], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96279085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99690694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9859144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9820696], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8911698], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9871552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.976409], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9841735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93373656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98266286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.44661134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98267823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9862812], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9845855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9995325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09449153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.87704706], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9909567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98589224], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9612763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7392462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97359353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78993106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97986305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98465896], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95047396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99485445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9854453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9911077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9999427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98762083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93036526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99043375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3967616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9863639], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99126005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98272204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9833728], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9097268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.49158302], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9805438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9243877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99677044], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5590366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9825229], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96478707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9804111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99154377], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.999568], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98567104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9635687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9719639], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98538834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9888016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9733211], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9901012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06212979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9959359], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9913837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.33781406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37134287], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9989051], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9574654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.983322], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9969685], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9816584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2031545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7875806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9784693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9965594], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9796646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99718046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9157167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9855066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.986878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9995685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99915075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99498504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97901964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.49197647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9834301], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96134955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97834814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3986629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96661055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99519426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9932386], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98107696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3388135], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9979157], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98868203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9861571], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11718482], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9971979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99852383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99359864], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.57015604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9983458], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9969467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.993558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9627028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2368013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9653827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27855697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99700326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97018874], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98202986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9288197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99657726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9941587], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97387123], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9904718], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9856864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95655894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9940947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9979599], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99723315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.45986098], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9958349], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9821369], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9970857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.86678064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9831606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99491376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.997865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.80108124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.34791636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9239928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0078044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99359196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9959714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9868465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9995812], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99050367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9977204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.38559118], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9970216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9796069], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9779742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13011883], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9906058], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8152241], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99760705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9744208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9683756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9965804], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9345655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3998147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9613132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9899277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9691313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.30195996], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9758586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12893978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9853061], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9825222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98271406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9943074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.63567024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.7410631], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9611251], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97817785], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92165065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4346479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8866722], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26317537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9966089], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98538744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9652407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93441606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9807673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9920237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.982129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9921062], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.25219622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6968801], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99893826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3167606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96335626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9847566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99629265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97805554], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96916753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9940215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.51512504], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.55137104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.83599997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97796255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99331254], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9633798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7409501], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9891983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9795956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.880524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9677167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9471071], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9802852], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.09189496], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.792846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.78214073], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9705965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9916628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.80530596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99228454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9707291], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9931229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6664058], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.91944623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9997983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9967499], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9873197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97884643], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9330975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83996016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94996595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6465516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9991303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6188355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.979515], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99530685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9974795], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2904097], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99876606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9982286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9712357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97780377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9974758], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (22,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11500, 'query_cost': 0.0, 'learning_time': 785.6139673901489})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__22.pkl


ONLINE LEARNING CYCLE 23

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 93728, frozenset({LightInCell(?x0:light, ?x1:cell)}): 11716, frozenset({LightOff(?x0:light)}): 11716, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 11716})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 94536, frozenset({LightInCell(?x0:light, ?x1:cell)}): 11817, frozenset({LightOff(?x0:light)}): 11817, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 11817})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 95344, frozenset({LightInCell(?x0:light, ?x1:cell)}): 11918, frozenset({LightOff(?x0:light)}): 11918, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 11918})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 96152, frozenset({LightInCell(?x0:light, ?x1:cell)}): 12019, frozenset({LightOff(?x0:light)}): 11938, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 12019, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 96960, frozenset({LightInCell(?x0:light, ?x1:cell)}): 12120, frozenset({LightOff(?x0:light)}): 12039, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 12120, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 120 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 12000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9766196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9975022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9927499], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99381274], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9845202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9547366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.995219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9848892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96296245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9943458], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95146257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9444907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9838316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9811173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9905544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96080226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99735636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96929723], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9744469], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9505504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6522667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18887238], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.931394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9863941], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97015643], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98872316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99907595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9849707], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9992375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98838246], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9947472], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98270965], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9935008], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9213977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.992801], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9276803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9964959], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98871285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.04715016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.59233755], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04793562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9712048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9859477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5878019], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9914189], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98567057], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.41468933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9870336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.40008262], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.92924124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.09387705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99461097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9072009], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9872129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.69182193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99767077], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.992099], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94182473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9641953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9840551], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9772211], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9677539], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9605545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99975604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9874239], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.57470703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9710127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96662146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9900968], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.997141], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.42082807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8909408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9874203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.10253221], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98416096], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9980149], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99161214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9948884], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95120007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9914652], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9969237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98872644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9704652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20026417], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.999409], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99411726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9898949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9984437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9999201], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.985951], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9986328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99413884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99299896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98816574], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9967227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9995002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9892966], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99965966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99453425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9834167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.8921643], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9958895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9853456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95079815], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9893409], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9799927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9630183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.62250125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98397946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9717349], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99272764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29940993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9908242], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9963908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.60555005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95465136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99537337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9985942], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9812412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99668694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9596561], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9953489], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97416145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99400294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3640392], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9786354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.02090262], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9782202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6566737], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99173015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9909667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.971774], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9962924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.34571946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5716597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9978851], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96875197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9902477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9942683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9956243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9767991], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9684134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99276906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97483313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98395145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7163972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9969522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6481761], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9965694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9942083], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98559934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78814113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16164136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8908401], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99785477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.83705735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9957275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9596292], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.993246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99945784], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99361306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5110523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96897864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9777605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98391294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9442073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9539133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2732147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99741566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96372867], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9983439], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99327284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.8862896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.84334034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9968001], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9492378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.979588], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.64066315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04999753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9956371], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.951774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98483145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9964375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9982716], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99832904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9880586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99796975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9976036], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98642826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99733484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96635306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.988412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9726991], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9925362], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9858453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9848012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9999583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9935321], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9797371], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.967926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9896415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99538803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9961845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9526065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96519613], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9955633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95778114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9949644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99672836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98029006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.57749283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9980374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99115515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.24401277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9832744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9976791], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99620336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.970158], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9905242], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96027744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9654104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98348135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97635144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99832153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9608093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9952878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9969381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10974301], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96723187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.974854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93805337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13504423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97244287], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94056433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9504161], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.947805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98458433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9614743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18673564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99856406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7777227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9301044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9406358], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9744602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9867026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97620493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9595769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9992216], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9515572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9946614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.92219007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99349403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7027278], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97659916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96707875], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7742919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.72111714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9431342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9931847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.09146713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9971263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99583715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97959393], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9794907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9868983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9994827], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9950762], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97337854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99883133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96781874], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99398637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.32557502], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03465787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9791568], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (23,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12000, 'query_cost': 0.0, 'learning_time': 836.7197925471701})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__23.pkl


ONLINE LEARNING CYCLE 24

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 97768, frozenset({LightInCell(?x0:light, ?x1:cell)}): 12221, frozenset({LightOff(?x0:light)}): 12140, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 12221, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 98576, frozenset({LightInCell(?x0:light, ?x1:cell)}): 12322, frozenset({LightOff(?x0:light)}): 12241, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 12322, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 99384, frozenset({LightInCell(?x0:light, ?x1:cell)}): 12423, frozenset({LightOff(?x0:light)}): 12342, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 12423, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 100192, frozenset({LightInCell(?x0:light, ?x1:cell)}): 12524, frozenset({LightOff(?x0:light)}): 12443, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 12524, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 101000, frozenset({LightInCell(?x0:light, ?x1:cell)}): 12625, frozenset({LightOff(?x0:light)}): 12544, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 12625, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 125 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 12500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9332.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99589604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99250096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9857489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99434465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14699098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9932607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9903798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9897948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98751813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.971574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9881172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9890032], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99952567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.84885436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9685417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9978562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.19992924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9987981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99688387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9321652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9797713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98555225], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.16281551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.98208016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.97479475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.98190176], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99288183], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9510963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9364974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99656564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9795707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9872235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96606153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23667406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9634039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9749697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5485002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99107605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98580706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9852016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9908996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9973774], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.995012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9761115], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96508366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05258726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95322144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6214635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9984088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97967845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9821906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98709935], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9942483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97537005], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98973423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9423528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9787269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9435681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9472488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7811615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.48404056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98537153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99057585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99857605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99146235], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8443888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9816572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96290535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99590576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95122963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9452762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9873765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9832992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.995836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.941958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5606999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9957038], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07610043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9984316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9383664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.962627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99366254], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94625515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98546886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9948121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9517931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47424996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9851818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7792055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9646941], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99424523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.96768224], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.30883002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9169738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9796666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98083276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97604454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.93081045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9552338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97359145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9936645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98679805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97796005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98918545], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97562814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98145735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9969084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9906473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95305866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9972275], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9602122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.93707544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.75906986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9804447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9995258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98038113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.969121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95964456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96219057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.924029], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4297625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98557866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99995804], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9865539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9721321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9930607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9988936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99724054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9832068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.67801213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9873892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92535216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98698425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9776173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9634138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9950242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9918153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06886416], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9659491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9598473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4509327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9959364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9806935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9803836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97665274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9959068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99715394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97509867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9740277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98665154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9339997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9895095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98994416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9826818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98823243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9504039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7370875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98603415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98819816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97846806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.57592237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9066674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97820115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9848927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.89879614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9956753], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9647199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9929653], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01395811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.27267817], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9702237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.87498087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99426067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9982047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99517864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9768586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9951541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98840845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99654233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.04674669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9377207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9920014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9709326], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9326153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.96601534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9855181], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2195992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9998273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9677437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.93977475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.85252005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.988723], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9817515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9960544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97876835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9871535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9816291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9788335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98405766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3452504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9931625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94202596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98534584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9755708], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17190696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99426484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9434327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95467913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9564785], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98721886], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99678546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9977362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9639918], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.98240936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.98617584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.96570903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.96754444], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.94366425], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67770076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99909467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99952626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97954756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99691474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9783225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9931914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43803227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96682507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99348253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99028575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91375744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99483913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98640907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9753001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.992994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9951286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94998187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9899335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41677496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8583386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7187676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9980091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99818254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98487246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09849145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91629136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9968745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9953643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9864775], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9988371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9833439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9615742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99807477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99655515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9966317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9961413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9707831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97528553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8040909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.992075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97001916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9825661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9657052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99905086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98670316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99667513], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8736585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94086015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.934186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9844649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99912226], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9862078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98434573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9842367], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9971169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9531574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99851555], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (24,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12500, 'query_cost': 0.0, 'learning_time': 897.2949253531406})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__24.pkl


ONLINE LEARNING CYCLE 25

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 101808, frozenset({LightInCell(?x0:light, ?x1:cell)}): 12726, frozenset({LightOff(?x0:light)}): 12645, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 12726, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 102616, frozenset({LightInCell(?x0:light, ?x1:cell)}): 12827, frozenset({LightOff(?x0:light)}): 12746, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 12827, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 103424, frozenset({LightInCell(?x0:light, ?x1:cell)}): 12928, frozenset({LightOff(?x0:light)}): 12847, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 12928, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 104232, frozenset({LightInCell(?x0:light, ?x1:cell)}): 13029, frozenset({LightOff(?x0:light)}): 12948, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 13029, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 105040, frozenset({LightInCell(?x0:light, ?x1:cell)}): 13130, frozenset({LightOff(?x0:light)}): 13049, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 13130, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 130 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 13000 datapoints
Loss: 0.01017, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00002, iter: 2000/100000
Loss: 0.00002, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00001, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00009, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9308.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.30513978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97883534], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9809295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99120516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9460676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97559], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9865388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9929098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98695785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97113276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9997926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98408836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9554398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9965715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9892191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99139774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99172676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9328418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9427957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9926814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08395626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96249074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98101807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9950681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99177325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95782644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9622567], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9416423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99152094], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9828102], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5969678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.992909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.994419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.6160397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.31449673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.91784716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9986071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9993452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9897824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9998233], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98853266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9953422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98016423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.974875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98449105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9956109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9902443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9822867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9803195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99610424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9685815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.01136071], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.7389747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9920599], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.84798616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99132705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98830277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9543556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97630346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98601216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5045993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23024888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96602625], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98575276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93723863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.976849], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99817914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94523954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5499472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947724], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9554915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99176335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6168317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886511], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9777813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9877368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99180555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99191135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99796003], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9620786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99857223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98430043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98923594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959272], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99995136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9678871], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20111743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9884339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99189883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92485255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.17631918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99477553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9786997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99901557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9757186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98955745], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99547356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9589726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938317], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99657136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98784494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9732168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9381592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98895997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99061406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97388464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99604964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99231845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99764305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9170919], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9634135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.962708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9526394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99023557], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98524594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20602654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95131046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9717852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970172], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21465537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99007976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99894285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94894797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99482125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9710025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99490154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96449304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979159], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.10062329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.21499278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96838135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9820299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99797857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9769714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05082017], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99522144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96269876], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99740446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9820945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9644075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9840151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5218075], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99775565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9706422], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.36325485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98320377], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99707264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98269916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99753624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9429941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97706825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.918538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99688023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99902356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.35757586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98806936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97191244], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99772143], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9973466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9959764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96204036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9804406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9896157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96875554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95163447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9984194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9542107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8225606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97596484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9884006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99634266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99228865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9705974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.38412365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9991175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53658074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9797325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99671584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9802214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97776884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.992226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9867007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5662559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9939633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9264944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99615926], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98471946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99502575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99949425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.44944417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.27237868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9650344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98609066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97107506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7795126], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5338631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9544085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99236065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9500517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9691714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97436035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98154384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9654889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95216495], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9768601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9531927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99628156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9989134], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13477439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9718971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97739154], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79459506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9688737], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9506924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98173976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9722753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97538704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99961513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89173347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97331643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992532], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9405228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9482041], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.69611865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97575396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25548202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99393356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98403555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97723705], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (25,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13000, 'query_cost': 0.0, 'learning_time': 959.6732512701419})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__25.pkl


ONLINE LEARNING CYCLE 26

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 105848, frozenset({LightInCell(?x0:light, ?x1:cell)}): 13231, frozenset({LightOff(?x0:light)}): 13150, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 13231, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 106656, frozenset({LightInCell(?x0:light, ?x1:cell)}): 13332, frozenset({LightOff(?x0:light)}): 13251, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 13332, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 107464, frozenset({LightInCell(?x0:light, ?x1:cell)}): 13433, frozenset({LightOff(?x0:light)}): 13352, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 13433, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 108272, frozenset({LightInCell(?x0:light, ?x1:cell)}): 13534, frozenset({LightOff(?x0:light)}): 13453, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 13534, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 109080, frozenset({LightInCell(?x0:light, ?x1:cell)}): 13635, frozenset({LightOff(?x0:light)}): 13554, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 13635, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 135 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 13500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss: 0.00001, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00936, iter: 10000/100000
Loss: 0.00001, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss: 0.00000, iter: 15000/100000
Loss: 0.00001, iter: 16000/100000
Loss: 0.00001, iter: 17000/100000
Loss did not improve after 5000 itrs, terminating at itr 17900.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93589497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99318737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99537575], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9874881], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9992806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9757963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99610096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98302126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9991535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98316795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97960806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9910936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97033393], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71467185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9832881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9989029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9875177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98738724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94975716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.7334658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9938899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9886839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95343703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97188437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9583038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9794895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9305846], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99551135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9856026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9973365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9920445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9875856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97327864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9977122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98180836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9858078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.959348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9362037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2103179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9680567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9802949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9424658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98878443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2940605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9825044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9843029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96861833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99934834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9789326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98923194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99776185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98789155], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99737054], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9623114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9726354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99277306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9666536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9666765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99664277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97897595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9670436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98468447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9762763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6546968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96060514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97321445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97857326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9743734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7644063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96996313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.43171996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9778393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84240377], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9702222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11260753], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97010356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99464047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98763394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.82684475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99151653], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95882547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9850169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97389007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95915794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96385044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9695661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99914104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9992387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9969711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98862386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99369526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98926973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9959604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99615073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9903845], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9741534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9705471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9765506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9990146], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99560034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99956864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7381141], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96818596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8764203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98895377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9679442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99522656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5422212], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9631039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99237067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99864614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99885654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9684577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98909575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97155476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96397984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9765041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99710405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99982965], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94107664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.41876313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9722299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95331454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99608135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97782403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97467166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867236], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99779433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890449], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6239728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99665904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6786196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960611], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99198514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9665612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782454], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98508835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98508114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99864197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958273], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98500586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99827325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99960065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99738914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12225064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9596918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96521956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98809046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97535187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97147644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07963765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98382044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6063614], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9958882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98452157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98944694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99498177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9951177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.978849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9968773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9480799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98088926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96182764], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99923843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98372644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859598], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9771203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98531544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9743889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97993636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94881773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99934787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98218566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99166507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.930206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99990046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.958491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98348796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9740124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28271195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99008125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.06354193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9133704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95728517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98366797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9489567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96270925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8038288], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96207917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9465899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845991], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9850582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9501485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9937748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.996145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99998695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95951253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96471375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99790776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9796696], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8435213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.85735583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.997658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9204969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94725674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99911845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98506594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99405915], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9900379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.96974814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.987005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98755425], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99680114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7182933], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98179436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92597836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9620544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95862615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.40528336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9505261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.979469], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98326653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98105484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07872698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98282516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5416843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97551554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95776623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9630269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98777455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9604475], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (26,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13500, 'query_cost': 0.0, 'learning_time': 1037.9229896741454})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__26.pkl


ONLINE LEARNING CYCLE 27

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 109888, frozenset({LightInCell(?x0:light, ?x1:cell)}): 13736, frozenset({LightOff(?x0:light)}): 13655, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 13736, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 110696, frozenset({LightInCell(?x0:light, ?x1:cell)}): 13837, frozenset({LightOff(?x0:light)}): 13756, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 13837, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 111504, frozenset({LightInCell(?x0:light, ?x1:cell)}): 13938, frozenset({LightOff(?x0:light)}): 13857, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 13938, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 112312, frozenset({LightInCell(?x0:light, ?x1:cell)}): 14039, frozenset({LightOff(?x0:light)}): 13958, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 14039, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 113120, frozenset({LightInCell(?x0:light, ?x1:cell)}): 14140, frozenset({LightOff(?x0:light)}): 14059, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 14140, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 140 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 14000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00112, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00016, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00003, iter: 7000/100000
Loss: 0.00004, iter: 8000/100000
Loss: 0.00001, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9308.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99416876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98011637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.972774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.05458656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99028355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98714244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9868804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8328622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9992445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9955407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9442902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99991554], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6111347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9933779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98140925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9990682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9986389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9598078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.976193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9862901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9825119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9849269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97586685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9633793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9928872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9322698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99816114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13656753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.953036], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98381555], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9757106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98837876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9961828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.14958972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9804539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9970373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.70208263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.93380815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97756135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9919363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9951112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9533047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9990261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9820241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.968015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9960348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.96962905], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.30570975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9732511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98087144], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9961134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.994237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99674255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.97414434], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9955049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9892702], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9950631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9943746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9897855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9953439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99369335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9888207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97474104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9832139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.965914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9994515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9653674], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9953479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9578581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9780727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.967111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9953541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99756706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98231995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98323894], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8127776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9823655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97730255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99098164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9966097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9892518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99632853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9899513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9942741], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97865015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98918617], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.4294074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9831223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9965855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9651286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9953032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99321836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.997196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9873023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97804177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.96670556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99599737], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.46699956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.95121926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98005325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9930043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99393207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9628191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97937024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99722975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99819267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.96625257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.992962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.1394485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9598844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9567896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9834196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.96341825], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9560092], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9916694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9774047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.999208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9938233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9035849], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.67432004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.990673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9927345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99944437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98100823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9689965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9763665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97686225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9578576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9914358], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.41620088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99276984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9767826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98207104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9815878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99880785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9952741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98419607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97032064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98799014], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9950189], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95370924], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9882372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9777506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9844434], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9995597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26365855], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99819684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2397658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9747767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9793136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9701986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99925995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9991393], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.569214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9917668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97708637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49026006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18421319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97377515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92402697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.996687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.35892972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9947538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9888204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96646553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98890495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9909974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99401134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77759427], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97626525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9746909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.975656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9068261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99822885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.963335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.166623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98305655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9866207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9261479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.09451248], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03498555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96179706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9935066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9996322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9900608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98918945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1793073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9803409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9888968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96617407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.33907455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9607613], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9576118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9973715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9981325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9999454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99975187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9432193], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9875372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96227413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94915324], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9856195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9686802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9416622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99665356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98054713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9882317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9965856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.988073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6253558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9838575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99517125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9312405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9978488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98945946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9610942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98911864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97732353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.054071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73641413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.93478745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9698543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.96519774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06592046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.986771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9599373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9974744], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94964355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9451997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9949486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9793193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9817525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99890816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9915667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9819824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00582481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9959996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9810401], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9969957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9980774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07519662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9996263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9895359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97523946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9726955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9747225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.978238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9431406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99754846], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9956586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.60485953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99710286], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9837599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9824603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98611516], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98202753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9803215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.96891224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.993258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9824779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98719937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99701273], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9987817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.981134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99727356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.952637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98855907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03041971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9782853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99718803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9915901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99244344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99878585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9493948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95906734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9915655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97572637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91492146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8850599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9974018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9504508], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98093045], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (27,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14000, 'query_cost': 0.0, 'learning_time': 1103.703561450122})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__27.pkl


ONLINE LEARNING CYCLE 28

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 113928, frozenset({LightInCell(?x0:light, ?x1:cell)}): 14241, frozenset({LightOff(?x0:light)}): 14160, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 14241, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 114736, frozenset({LightInCell(?x0:light, ?x1:cell)}): 14342, frozenset({LightOff(?x0:light)}): 14261, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 14342, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 115544, frozenset({LightInCell(?x0:light, ?x1:cell)}): 14443, frozenset({LightOff(?x0:light)}): 14362, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 14443, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 116352, frozenset({LightInCell(?x0:light, ?x1:cell)}): 14544, frozenset({LightOff(?x0:light)}): 14463, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 14544, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 117160, frozenset({LightInCell(?x0:light, ?x1:cell)}): 14645, frozenset({LightOff(?x0:light)}): 14564, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 14645, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 145 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 14500 datapoints
Loss: 0.00105, iter: 0/100000
Loss: 0.00009, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00001, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10671.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9922196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83592194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99386656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9782707], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9995657], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98036724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9963353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99844825], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9969986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9849137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.92379725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9830589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9354796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9462565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99714845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9669215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9942424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7138768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9789541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9714163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99736315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99562204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.2744805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9955542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.92987275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.93700254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9987085], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9957295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9602583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9780937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99874306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9695375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22109205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.40876997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98806584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60193485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98997337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99525005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9889711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.18665218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.93842095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99899006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9692629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99261636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9950513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98077273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9908585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9987355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98790115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9713844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98762786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9671972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98279405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95785385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.989912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98427516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94757247], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9595538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99112266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9603499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99301946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9999972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9863327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.39979866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98150736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.980674], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99372876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96647507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9926929], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9942413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97565216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9840057], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98691154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98793733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94815797], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9690522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9706706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98571557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9894815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9901682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9928274], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99018955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97930026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98990864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9913888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9999027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9885277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99855673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98725754], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98768663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9988233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9777351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98652804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9748049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98124504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.981225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.951086], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98860556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9685699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9996172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98072267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.980366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9867359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.994516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98735255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.980923], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9950784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9965462], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9621145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.56493765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9477072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9742653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.34860563], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.989743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9953662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.668524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9981027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9602754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99734867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9889828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9742217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9749964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9969211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9910116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9778637], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.990779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98989016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9727541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9503409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98738086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99961954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.963612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9678476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9919237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9919306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9991983], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99836415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99240935], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6948554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9973551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9553847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9942456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9877256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94570655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9666773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99774647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.53459144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92803925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9685727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96785945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99667376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9967767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99367744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98846453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97923565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96680707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9944119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9921287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9867421], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.991108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99296445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9834559], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9808791], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9941642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9514863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9861776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98560053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92231673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.21640001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9376193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99599874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99441946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9957469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99583936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99902475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9654482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98641557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9986306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99025005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9962952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9703211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9997069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9636137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97596854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9887193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99103194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98056525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9583982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9987113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95696044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9836652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9952212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9898411], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9696461], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9749319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9921862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97556305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99206793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97990984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98796767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.94671935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9858502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.96178544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99374944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9922346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9959041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9541432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9762438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9925758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.96884763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.94518125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.984034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97167116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9895334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9862512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99211484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9682603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97802544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98199916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9670124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9723183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98487586], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9992675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.32351986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9991656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99121773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7525223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.991844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.973193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9969297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9770723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99023825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98997766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9990475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99583584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.991356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9685594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9895329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.996641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9762838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9877619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9749825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98664653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9707032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9521427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9976071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9817776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9809817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9964768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99679667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99940825], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98821473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9875011], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5991224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9938026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9770755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9912983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9845452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9868075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9876425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92354834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98601323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95501477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98595685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9886018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.999303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99045956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9970469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9396778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9990203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.982544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9788982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99890727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9903272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96232826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95443547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99242514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98278564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9587476], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (28,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14500, 'query_cost': 0.0, 'learning_time': 1173.3606489890954})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__28.pkl


ONLINE LEARNING CYCLE 29

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 117968, frozenset({LightInCell(?x0:light, ?x1:cell)}): 14746, frozenset({LightOff(?x0:light)}): 14665, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 14746, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 118776, frozenset({LightInCell(?x0:light, ?x1:cell)}): 14847, frozenset({LightOff(?x0:light)}): 14766, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 14847, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 119584, frozenset({LightInCell(?x0:light, ?x1:cell)}): 14948, frozenset({LightOff(?x0:light)}): 14867, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 14948, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 120392, frozenset({LightInCell(?x0:light, ?x1:cell)}): 15049, frozenset({LightOff(?x0:light)}): 14968, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 15049, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 121200, frozenset({LightInCell(?x0:light, ?x1:cell)}): 15150, frozenset({LightOff(?x0:light)}): 15069, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 15150, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 150 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 15000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5505.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26759812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995145], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9790798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96646005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9771364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.957246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9692698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9879063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9917124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9772204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93327266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9627136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9871649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9603784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9634789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98690635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9955212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9973755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9841943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98676604], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9847939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9892799], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9820462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9707229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9818287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99968904], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99073553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99187744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96898365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9708782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.975535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93423194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91326445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7191478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97499734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9576114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98563415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98923975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92641824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98891884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97042876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98500293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96367633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99997103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9559728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990422], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98819864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99694365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96905595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9641995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98755485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.88904387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98784953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96928614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9380503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8425537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99492556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9725359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96589285], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99478734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9732507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99290216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89575714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803504], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95893604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.976613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97531503], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9754129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9943078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97577333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.966635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97350514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95176625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9869517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9861317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9916384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9914995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9867052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97914606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9932007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9909068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9787725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99960923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9911109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98947597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99633497], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9591452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96274656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.997918], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.45545635], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9637208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99323833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99601424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96271366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9181699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95361966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98243713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97841716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96863025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9539668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98378927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99877137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96979594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9701702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97651076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99659467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816105], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8907907], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99982244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89083266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9377654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95753336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994499], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96322554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99772966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9489174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9779549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98215073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9617197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98191047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9830939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9813829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99438804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95979834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98790324], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.977685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97572154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9748778], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.969342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9936858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.46595067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98453444], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99503815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9664963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97245914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97857445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.53096545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98910433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9237913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5756508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99822503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99193656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9668603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9257724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828751], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9775549], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6442185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9808464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958139], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9576823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9708799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99528563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98345596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99706954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9532263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99672455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99087805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99887085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99481976], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94482476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99375594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96447474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99730676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9768035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96006054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91901594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95356286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9345966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966686], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9920131], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.68039876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95664155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93659544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9970181], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9932897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9881811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.972649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9665726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9988525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95162606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9904933], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9255441], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99364316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99030024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.970466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9802228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9903201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.999564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97574085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99323654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9705412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98288494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9976067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99885476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6160055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9991637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98276794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9979208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97884244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9996532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9879894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9801262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9851639], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9695105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9993339], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (29,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15000, 'query_cost': 0.0, 'learning_time': 1235.9082299030852})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__29.pkl


ONLINE LEARNING CYCLE 30

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 122008, frozenset({LightInCell(?x0:light, ?x1:cell)}): 15251, frozenset({LightOff(?x0:light)}): 15170, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 15251, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 122816, frozenset({LightInCell(?x0:light, ?x1:cell)}): 15352, frozenset({LightOff(?x0:light)}): 15271, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 15352, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 123624, frozenset({LightInCell(?x0:light, ?x1:cell)}): 15453, frozenset({LightOff(?x0:light)}): 15372, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 15453, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 124432, frozenset({LightInCell(?x0:light, ?x1:cell)}): 15554, frozenset({LightOff(?x0:light)}): 15473, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 15554, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 125240, frozenset({LightInCell(?x0:light, ?x1:cell)}): 15655, frozenset({LightOff(?x0:light)}): 15574, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 15655, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 155 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 15500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00285, iter: 8000/100000
Loss: 0.00001, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss did not improve after 5000 itrs, terminating at itr 14273.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96165127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9814232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99474293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9733781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98839384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9675221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99758565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9596563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99846774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9412634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97981054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4012803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98911643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97054976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99400187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.978663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870276], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99312997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9778343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9581901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98689806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9542717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99624264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84098077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98766345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97773045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98791015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9749887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9820443], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9868546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9576416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9893524], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95130324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95049757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97506833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9720021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95806646], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9588682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9737725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98997426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9469214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9498785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98122734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9410004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9677313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97244394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93971276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97864354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9764349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914401], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99314946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98880696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99994963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98416823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9200335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95743394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99409217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96858466], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.971485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97905296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7168369], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9990169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97511655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99476296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9870516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9561802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96401644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9995622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9878908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9891848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9989833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96303356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9895362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9999318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99669385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9958144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.91523176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9803601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.999749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9944418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98705673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2510686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9937428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9734912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9929182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9999141], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98963475], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99511874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7358558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9709373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9675106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3299542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98891896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9120925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.973702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97541934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99203503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94304585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99782217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97510034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97549355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99453783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97153765], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95075417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98427767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00417456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99020016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99356115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40361375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9696123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99006826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.23704816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99984574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9370004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96266997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.941254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9739755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9566928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98595244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99343616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9731357], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95843756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6137991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97871745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99343085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97680664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99872404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98228264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95242023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98395973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97372353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9313669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99551475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99531376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9343119], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9753089], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9735432], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9920159], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9999224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.997406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9990955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9708643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99692094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9934298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9578566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95327455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99743384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96663195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99747354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98074883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96424145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99712056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9949524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96487427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96630293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99432236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99173546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97995985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9929502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99455965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9998373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9896926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9635294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99902904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9323145], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99279726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9808448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9722932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745431], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97440124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92996085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9427765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97716194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99558234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96704227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9552028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9536168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98558587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99991846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99875575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99361694], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98758036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99600744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98511636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97953415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93418455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97748107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17086083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9734858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5229628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97493064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.18875536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98624295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96097386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95067066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9837696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94705963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991967], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42298353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97602236], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (30,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15500, 'query_cost': 0.0, 'learning_time': 1315.373600611114})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__30.pkl


ONLINE LEARNING CYCLE 31

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 126048, frozenset({LightInCell(?x0:light, ?x1:cell)}): 15756, frozenset({LightOff(?x0:light)}): 15675, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 15756, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 126856, frozenset({LightInCell(?x0:light, ?x1:cell)}): 15857, frozenset({LightOff(?x0:light)}): 15776, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 15857, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 127664, frozenset({LightInCell(?x0:light, ?x1:cell)}): 15958, frozenset({LightOff(?x0:light)}): 15877, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 15958, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 128472, frozenset({LightInCell(?x0:light, ?x1:cell)}): 16059, frozenset({LightOff(?x0:light)}): 15978, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 16059, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 129280, frozenset({LightInCell(?x0:light, ?x1:cell)}): 16160, frozenset({LightOff(?x0:light)}): 16079, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 16160, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 160 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 16000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00379, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6662.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96577084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98612386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98948103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9538324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98487973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9715585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99967176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99674904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94124824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98032725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99920225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99899966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9662058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9648425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9748955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99918157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9490549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98046637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98322046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99628264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99819005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759794], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99867475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96834105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9757322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.944472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98624766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99346083], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9919997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9586481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9858456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96779144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9565827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.981869], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99494183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98086315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99693185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9644082], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98203653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99972445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99699813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99249965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98887056], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9644464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99992526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922699], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97651446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99701744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96402913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9624929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98485875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9725152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99965054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99765813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787491], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03740329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99649686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99045306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95275116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99664366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885897], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97467875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97805655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99793196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97361326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877181], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9682617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97575986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96855116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99643135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806721], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9652043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96596056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9656592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.88826597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99365443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926288], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99207234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95178944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98896945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99628025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9602442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9743736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98173016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9438824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9862068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99531996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4611055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99824166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54747957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9677582], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98736024], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9511854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96827453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99618435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99587554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9675735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9760648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96713996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9583717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96641004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9684176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99402195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.79990125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96902335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99806273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95291543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99645954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9201769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98570806], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99372506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9403875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99431217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99103415], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98743916], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9906679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9943118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9974213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9930138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9842745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95551574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9972147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9567509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9913886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97832286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0262744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97067904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9850944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9802362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99938774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9821823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9481661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99307233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99991006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9233911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97216177], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9708604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97203964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99446917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99114066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9348491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99336046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97401714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9257524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91397935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98948413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9785396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99783313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9342602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999795], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9867063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99400157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99212724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9955621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9783112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.999144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9710861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99149054], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96648914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99466616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90363556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99637395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9755484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9768537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00883139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98383814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9653945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9656644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99026364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99248457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99882305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98304677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99820745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9353391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9792442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99013096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97774875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9559524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9654938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97309226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99251604], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9690235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99522567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96980435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99940366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96604127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99602896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99354184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97280926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99384356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98852515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9616705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98605776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99667406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9656833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98059225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.899891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9829338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97997797], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (31,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 16000, 'query_cost': 0.0, 'learning_time': 1383.5294112301199})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__31.pkl


ONLINE LEARNING CYCLE 32

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 130088, frozenset({LightInCell(?x0:light, ?x1:cell)}): 16261, frozenset({LightOff(?x0:light)}): 16180, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 16261, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 130896, frozenset({LightInCell(?x0:light, ?x1:cell)}): 16362, frozenset({LightOff(?x0:light)}): 16281, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 16362, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 131704, frozenset({LightInCell(?x0:light, ?x1:cell)}): 16463, frozenset({LightOff(?x0:light)}): 16382, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 16463, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 132512, frozenset({LightInCell(?x0:light, ?x1:cell)}): 16564, frozenset({LightOff(?x0:light)}): 16483, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 16564, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 133320, frozenset({LightInCell(?x0:light, ?x1:cell)}): 16665, frozenset({LightOff(?x0:light)}): 16584, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 16665, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 165 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 16500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00002, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5312.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.32875678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99313504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99949104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97096676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98718476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9843099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9650275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97896415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98930883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98212093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98188204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99293214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97512174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9805893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9733263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98306125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9679639], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99415314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9771165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97060686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.17531693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9347685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96969944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956507], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.989098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9952889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98597383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98295146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9947076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9948935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99578714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9991964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99860364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99569184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9973111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.904937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9852633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9592539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97409344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.35460383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97502834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9995688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9963476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9986845], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98976475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99867743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9247236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99331087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99956554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99731946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93637705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99654174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99148566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99719906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99915123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99383485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97185874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97079027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98889905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96161306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991643], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9749446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99883574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98913026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96296537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798369], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.32736313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9624404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96739227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97676307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95563537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99460965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99776715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9595797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99595386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1865241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95016176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99882317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9531017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99062234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97838336], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89204234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97719383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.88450426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97995514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01187024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98931485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.921496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.35225606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9378429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9819899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99926835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9754402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99905413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99163544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9377675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9740917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98696077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984918], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99562967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99038947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98320425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9689759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95281225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97529924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99170655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9769498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9733528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9605858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9189356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9765398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99504656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99296945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98123145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9671454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98116344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99808365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95567936], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9583638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99719614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99848723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.971402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94838196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48204812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99221313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.982549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9797556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9772141], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96229917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94991326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99841636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98921716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94586617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9701229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97630686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.933839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98869807], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97108316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97204834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99213934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96479803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92447585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98818016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9397386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99804515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92351055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97471195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99462575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99288845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97684914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98423797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99478686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9705453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9563267], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9769367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99263155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40189955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9203339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98901236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9549858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97349906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99531764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9740684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96305627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9681237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94010586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99560964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99981046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9728278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9830469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99305266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99447733], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99144006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9606477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98138934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9551845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98894054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93050027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95036495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99876755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9776577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9693837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99631196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99657756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97699565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99750215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95270616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92613435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97858804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9709751], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99929845], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (32,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 16500, 'query_cost': 0.0, 'learning_time': 1451.672483619128})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__32.pkl


ONLINE LEARNING CYCLE 33

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 134128, frozenset({LightInCell(?x0:light, ?x1:cell)}): 16766, frozenset({LightOff(?x0:light)}): 16685, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 16766, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 134936, frozenset({LightInCell(?x0:light, ?x1:cell)}): 16867, frozenset({LightOff(?x0:light)}): 16786, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 16867, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 135744, frozenset({LightInCell(?x0:light, ?x1:cell)}): 16968, frozenset({LightOff(?x0:light)}): 16887, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 16968, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 136552, frozenset({LightInCell(?x0:light, ?x1:cell)}): 17069, frozenset({LightOff(?x0:light)}): 16988, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 17069, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 137360, frozenset({LightInCell(?x0:light, ?x1:cell)}): 17170, frozenset({LightOff(?x0:light)}): 17089, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 17170, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 170 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 17000 datapoints
Loss: 0.00001, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00213, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00177, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12664.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99061084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25813082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9769453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9805644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99411714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99169064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9198409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9746153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97640646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99764675], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99439275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.997347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96986026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9913048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9718721], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97800183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98873216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9985315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9886692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99416524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9791958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97187924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9674939], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9757591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98115563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99286735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9640999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9678059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93714905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99578243], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95356464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9950764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99473244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98933005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9565772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9664329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9348238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9896842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.997321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9740857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99772555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99113977], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.983951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99043167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96623546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9792888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9983352], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9366951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99670225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9444079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9777267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98241633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997444], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90351737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9431252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9812089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9764049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99023217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99137855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00474643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9227496], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99566656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97115195], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97865343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9664621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99766976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9447183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9410645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99234957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97913164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9674394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99967164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96180546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99045765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99898356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99666184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9553176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95608675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97405505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99784195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9568574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13278493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9640037], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9551829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96355164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97941667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94369817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9793469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9673282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9769154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97134364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99105066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99976355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98780954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98370796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97129744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99065506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98146033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98380786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9269875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99541926], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987126], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99772745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9392692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96056557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98390377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94376886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9561031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99558413], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9601909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99920964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99437195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97416186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99389637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93842894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99256456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9642325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99047375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.887348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09796493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8691632], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97723377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97752583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9494104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8984045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9558683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98076767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96023744], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99692434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95202625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93726844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97125345], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9709798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99016804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9698346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9706288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96964365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93027866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97949874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99978286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933677], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99387354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99119353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99643475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98445493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9560893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99167204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96706384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99847436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97684205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9727323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9493415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91441035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93500406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9651369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9794989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99373204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9697701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97970355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997188], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98615587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99007505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8849852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98765063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92589504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95473564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9530179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9843829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98299664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98263955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9689515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99149305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99659646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9726221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99805677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98121595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99179024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96536505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98937136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99979544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99936384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.970051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93383473], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99741024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98310214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99432546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99786496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983883], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9627803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99634725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840102], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9889755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9753751], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9892025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9582736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9973385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9778963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.907439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9975764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98983884], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9843143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9614339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99475247], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (33,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 17000, 'query_cost': 0.0, 'learning_time': 1533.1559822401614})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__33.pkl


ONLINE LEARNING CYCLE 34

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 138168, frozenset({LightInCell(?x0:light, ?x1:cell)}): 17271, frozenset({LightOff(?x0:light)}): 17190, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 17271, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 138976, frozenset({LightInCell(?x0:light, ?x1:cell)}): 17372, frozenset({LightOff(?x0:light)}): 17291, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 17372, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 139784, frozenset({LightInCell(?x0:light, ?x1:cell)}): 17473, frozenset({LightOff(?x0:light)}): 17392, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 17473, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 140592, frozenset({LightInCell(?x0:light, ?x1:cell)}): 17574, frozenset({LightOff(?x0:light)}): 17493, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 17574, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 141400, frozenset({LightInCell(?x0:light, ?x1:cell)}): 17675, frozenset({LightOff(?x0:light)}): 17594, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 17675, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 175 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 17500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00004, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00005, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10480.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9397419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97721374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99947643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9633432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99682397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9372328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9786766], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35730463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9757989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97614926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9687376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9516729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97379637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99194914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9647793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9761757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9721791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9598295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96524566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98140234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98821354], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99024534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9738255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98758584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96279293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99117094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99646336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95068353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99726164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9545663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99804884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96718574], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98921883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96826386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9990094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9977759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99992615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98366666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9797071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98868734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99720293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9920708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.971724], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99797165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9546768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94516206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955599], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96154743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96971714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97342557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98826814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99105275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99621505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28183934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9337596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.117821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99155825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99134386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99788225], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99728644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07517858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99410963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97797024], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9690783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98955697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9742565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01060866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99148697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.994363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96923906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99908024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9650994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99113965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9614547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98741287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99198437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96743304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9715467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99288845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99149865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99037194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98703706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9979042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9832312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96297735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.958074], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99888134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98056257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94109774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99330664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98580796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98072964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9735963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93930775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98760355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98481095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91302675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9765135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98089015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98863757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94359565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9754556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9734003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806998], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98888224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9597326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9741951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98151684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99653214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91913384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98088264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99291855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99584126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37726194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9689044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96336216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96283317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9709811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99816763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99024093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93795705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9691161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94055873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96597433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97009444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71149176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99721324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858529], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95419294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.918519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99036753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98175967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9786691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9778303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99173594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99199504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99933594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99021953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97294784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98776346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96994656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94862527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92432356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99856293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94892216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956855], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99544215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97987604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9674622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9110381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.978662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9765435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9555815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99709916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9790138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98975945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97729355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98284215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96101695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9292493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98626727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98176444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99385554], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99393463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34021935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99621403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97278446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9693126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98823035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9647547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98792255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98998433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99577713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9724952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98631454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719448], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9615687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9858877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9691769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9976517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9936661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9857248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9676921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97935474], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97139835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9711151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96922624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96455824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900869], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95865625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99985796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98357594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9734846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9410917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92451864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9540385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98104656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9374546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97821325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9460429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99716437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95241916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99614465], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (34,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 17500, 'query_cost': 0.0, 'learning_time': 1612.4781823231606})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__34.pkl


ONLINE LEARNING CYCLE 35

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 142208, frozenset({LightInCell(?x0:light, ?x1:cell)}): 17776, frozenset({LightOff(?x0:light)}): 17695, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 17776, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 143016, frozenset({LightInCell(?x0:light, ?x1:cell)}): 17877, frozenset({LightOff(?x0:light)}): 17796, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 17877, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 143824, frozenset({LightInCell(?x0:light, ?x1:cell)}): 17978, frozenset({LightOff(?x0:light)}): 17897, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 17978, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 144632, frozenset({LightInCell(?x0:light, ?x1:cell)}): 18079, frozenset({LightOff(?x0:light)}): 17998, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 18079, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 145440, frozenset({LightInCell(?x0:light, ?x1:cell)}): 18180, frozenset({LightOff(?x0:light)}): 18099, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 18180, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 180 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 18000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss: 0.00000, iter: 15000/100000
Loss did not improve after 5000 itrs, terminating at itr 15967.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97187155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99534976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96950424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98422855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96732223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958989], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8276625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9693287], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9845406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9162862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.995081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.987081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99993885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99024856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9350276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9673558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9953476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9501623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9918404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9804157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.988622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9876206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9883489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.91031533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9981753], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98810697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.813438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99420327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9768208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.86789167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99454683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96818596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99140817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9458608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848434], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9641375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97355217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93713814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9648895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99641556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99697447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9935029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9641025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9910623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98225546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.984829], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98812747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35477215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9287095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98400676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9385257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97755843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98293805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9743839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97841805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98630184], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9696206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96912473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9764526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97298765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9730092], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98746485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97033435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93885237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99735045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99682766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9694041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9656363], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99221885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97314554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9799849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99657327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99867237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9623954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98827773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96501005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96843463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9683365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99646443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9698093], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9731859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96533436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99896586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9600456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97669077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9582712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9992625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9797015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9878362], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93471706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98328286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7880569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94782436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9479946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98224163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9790312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99606377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9323852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9686425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2833232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99539614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97584456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9673688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94212234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96382725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99450636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9714669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95789], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9729705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99253285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97211874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9508162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838299], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15018198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9556735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99343693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9570621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99901617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9497522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97989804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9656931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961441], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9626993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9721119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99970454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9546561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9721946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99595904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9542854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98769706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9397268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942089], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96689713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98844105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99445254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97385275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99091876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9560626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97498333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98406243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93991536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98291034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9538805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96462667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9610269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98122525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98893416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97065413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93784493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9718516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95767176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98623556], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98336357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99674547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97942036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94783807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9690497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99811715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99484164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9820239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94477946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98561877], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9982671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96482605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98322046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9981936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99789155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98672956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.994862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9805974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9983102], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9910314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98574406], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99002415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99299586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97861934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95810664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99455947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99240005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99864393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99575764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98020446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99904734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99462265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99136007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9615064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9769802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98733336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99181056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98988694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94673854], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99042404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9592755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9710405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97641516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98810357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92095506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9830118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.59791285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99875927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97822255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91711575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9111824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98222435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9519782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9371422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98530304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9596283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99193573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95592195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9740239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99128145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99265236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98459035], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (35,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 18000, 'query_cost': 0.0, 'learning_time': 1703.3961559391464})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__35.pkl


ONLINE LEARNING CYCLE 36

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 146248, frozenset({LightInCell(?x0:light, ?x1:cell)}): 18281, frozenset({LightOff(?x0:light)}): 18200, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 18281, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 147056, frozenset({LightInCell(?x0:light, ?x1:cell)}): 18382, frozenset({LightOff(?x0:light)}): 18301, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 18382, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 147864, frozenset({LightInCell(?x0:light, ?x1:cell)}): 18483, frozenset({LightOff(?x0:light)}): 18402, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 18483, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 148672, frozenset({LightInCell(?x0:light, ?x1:cell)}): 18584, frozenset({LightOff(?x0:light)}): 18503, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 18584, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 149480, frozenset({LightInCell(?x0:light, ?x1:cell)}): 18685, frozenset({LightOff(?x0:light)}): 18604, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 18685, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 185 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 18500 datapoints
Loss: 0.00003, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5290.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8232895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9538322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99750346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9540115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909756], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9862018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98405534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97377926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9370822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9420039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99718946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9928865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9308774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9823178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9539345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9730584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9984151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99714583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9872619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9936992], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9786273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9730778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97608566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99112254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9211139], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9427113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98439515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9728273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9768845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9770311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99577695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99778837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821272], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08797552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99972713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99899423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9733104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9722009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9744633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91137815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.963037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99806523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99419576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9482153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96126217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97187275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96764493], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99908113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99583125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99859816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94971997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99772817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98781663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93921727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98475665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95793986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99077314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825078], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1782163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98855186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98154086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98122644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989382], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99573433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97800183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.961742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9808506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.17784363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98809695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97792757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97802144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99720347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95474255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98686147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95989454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95195174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95191276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99524266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98651826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98694384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98064345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9398252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9753293], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98748094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98776215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96811485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96868944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9812245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.956297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99877936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94986564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97556937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99748135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99104726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94197816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9642925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98820484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99207705], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9662712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96207905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98969835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9642892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9837674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9802361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91690344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98980397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9754749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98713845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9387574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9591559], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9649904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97613436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99978125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99869573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98428094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97942686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9566254], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97447205], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98175514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9968835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9969605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9537923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9951464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9803924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9881806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9763779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99097484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9769035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9904413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97851074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9798945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9668861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99359995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.77153665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9870677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9645541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9820959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98378825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.996037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99914193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9808011], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14688724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96936256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9934767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9839038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9939721], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.971453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94336945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98788637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99630153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95349854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98528343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99950963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97027093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99804145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9237599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98899984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98098946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9800417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97616076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96225965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98608124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99870926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99582195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9717204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10873807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96754175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9651435], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9555568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9262956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99807924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97647554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99188113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.17723225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99489856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96180445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98824376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9691949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93628836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995207], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.990487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98673254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9684673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9773908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9927161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9837012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97023666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99551755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9983121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9968222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98330194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9954419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96404], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9763225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9657503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99428767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99542487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99096215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9697119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9667574], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9998664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99677914], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99770933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94703144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94312227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96253955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99082047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97913766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98855805], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.985464], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (36,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 18500, 'query_cost': 0.0, 'learning_time': 1777.7647459911532})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__36.pkl


ONLINE LEARNING CYCLE 37

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 150288, frozenset({LightInCell(?x0:light, ?x1:cell)}): 18786, frozenset({LightOff(?x0:light)}): 18705, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 18786, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 151096, frozenset({LightInCell(?x0:light, ?x1:cell)}): 18887, frozenset({LightOff(?x0:light)}): 18806, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 18887, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 151904, frozenset({LightInCell(?x0:light, ?x1:cell)}): 18988, frozenset({LightOff(?x0:light)}): 18907, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 18988, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 152712, frozenset({LightInCell(?x0:light, ?x1:cell)}): 19089, frozenset({LightOff(?x0:light)}): 19008, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 19089, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 153520, frozenset({LightInCell(?x0:light, ?x1:cell)}): 19190, frozenset({LightOff(?x0:light)}): 19109, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 19190, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 190 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 19000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6018.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99438095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99845374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98598117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99588174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939622], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.46039957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9621257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76446897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.69417495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99165183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9448977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99225974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97341776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9437432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9685264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93143195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99845326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907289], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9674065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96773756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96098983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93009955], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99914646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92616236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9608542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99457234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97158694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14395474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9469529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99415416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98939127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98208225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99641985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97045434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97816485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8061659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98925334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99815124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899311], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9812595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9912933], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96712536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96077055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99299663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99248093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9792716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99466854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99435216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99205834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96060795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.958258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98725986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99000764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96083593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99325496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98841304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97422427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9721877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98209596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94898635], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99049205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98031765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9712308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99305755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9641682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99188274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96131617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97829884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98644793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9764589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9615314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96966064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99489516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9672881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9354411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99770755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9718826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99000245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929332], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97351164], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99634707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.30829364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96992236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99313885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78499687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9637178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99689394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9711276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99734366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97212297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9631542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3723762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.973137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97439414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97836757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9559948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9761708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97047395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99666595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9692604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99721205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.922486], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93749154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96220845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9322599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8316732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9568737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9829084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9643013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94338757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9622029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9764402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95290667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95430243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98924893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97818255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96304077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98832077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9764949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97854614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97941947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99981254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9028987], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9245657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.974242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9371961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9762644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23717047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8840939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9772601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97813517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98781747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9837613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96468824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99976975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96043795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99370646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9711804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98975044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96319765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98732483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93649435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97395855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915631], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9617088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98536164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98285294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9785118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96735615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99244374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99917996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.39167896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99782187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.922043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98208284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9421521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98187065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782204], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98638016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35461926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.31305116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9336009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.977527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96287435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9489466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9753363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95888454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95668566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9431238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9573183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97965217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99985856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99088836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99039614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9325188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98446614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97800946], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98658323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95558065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99152833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93670803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99758714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9631458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9447091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97908926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9414787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99861497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99920696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93216217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9722181], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9400711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98841155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94142056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98701227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95541954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986116], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (37,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 19000, 'query_cost': 0.0, 'learning_time': 1855.3226550001418})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__37.pkl


ONLINE LEARNING CYCLE 38

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 154328, frozenset({LightInCell(?x0:light, ?x1:cell)}): 19291, frozenset({LightOff(?x0:light)}): 19210, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 19291, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 155136, frozenset({LightInCell(?x0:light, ?x1:cell)}): 19392, frozenset({LightOff(?x0:light)}): 19311, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 19392, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 155944, frozenset({LightInCell(?x0:light, ?x1:cell)}): 19493, frozenset({LightOff(?x0:light)}): 19412, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 19493, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 156752, frozenset({LightInCell(?x0:light, ?x1:cell)}): 19594, frozenset({LightOff(?x0:light)}): 19513, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 19594, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 157560, frozenset({LightInCell(?x0:light, ?x1:cell)}): 19695, frozenset({LightOff(?x0:light)}): 19614, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 19695, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 195 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 19500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss: 0.00135, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00136, iter: 8000/100000
Loss: 0.00207, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11358.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99282753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9446801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99010915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98798287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08579285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9736154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97627676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97558016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9390403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97429395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9794914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98579156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98474854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98751414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99944323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96411365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99745315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99956405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9548107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9499351], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.956593], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9911201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9769688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9754989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98913634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9772259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9928585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97454214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9997921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9793413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98981446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98982203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9367685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97219306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.997719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9905732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.918019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.982216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97934324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9754664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9433739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9814489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9683067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.978758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9835097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9628492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9067901], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98788345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98959285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98780715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9777208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98980725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95872384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97945553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95889896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9617243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99560827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99321234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.962058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99789494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98870707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99312955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99601674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99512696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9533826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97628033], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9175124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94868207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98141533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6309511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97998756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9431506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96235687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96945614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99452597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.970384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97107065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9650171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9692434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9701345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9737104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9359565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9297147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825843], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98738813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.982676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9488251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97427654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99708015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97110575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96775377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9711719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9726149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9489921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97547686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98168045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97635937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95248723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.39158195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95977396], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99729204], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9662573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9772237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8931865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98556936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97523314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.39287192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89404505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9604225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9697702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9784919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99554324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99880236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9672922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92224073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98438907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841306], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93913317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9505073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.87383753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9744618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99897367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98431945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98718244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95808834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99092644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9133676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99841833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9656153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98723114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96970755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98951995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9716682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98979414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96830505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98641413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931037], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28710982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95571566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95942175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9568208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98742217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9710242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.966665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98389906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96581936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98005074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99955255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9618388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7943604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99645704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9424715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97934234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9584807], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.900193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93019265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9761222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92977756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91713834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5941197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97226804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9228325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96997494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98692495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93693244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99475455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98716784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95161474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9813681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99108654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98374844], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99591535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94583774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95875144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9812511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98933077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98816943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9799882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94804865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.081099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99857336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94365835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98647946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9724341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99557257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99156904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21597233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95110434], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (38,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 19500, 'query_cost': 0.0, 'learning_time': 1943.7238447981072})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__38.pkl


ONLINE LEARNING CYCLE 39

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 158368, frozenset({LightInCell(?x0:light, ?x1:cell)}): 19796, frozenset({LightOff(?x0:light)}): 19715, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 19796, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 159176, frozenset({LightInCell(?x0:light, ?x1:cell)}): 19897, frozenset({LightOff(?x0:light)}): 19816, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 19897, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 159984, frozenset({LightInCell(?x0:light, ?x1:cell)}): 19998, frozenset({LightOff(?x0:light)}): 19917, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 19998, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 160792, frozenset({LightInCell(?x0:light, ?x1:cell)}): 20099, frozenset({LightOff(?x0:light)}): 20018, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 20099, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 161600, frozenset({LightInCell(?x0:light, ?x1:cell)}): 20200, frozenset({LightOff(?x0:light)}): 20119, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 20200, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 200 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 20000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5733.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96834904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96454364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98313886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9374522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99491227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98386645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99237144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99435455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9713543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9710517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97981775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97882473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99856037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9808287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9830179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.952882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98789036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9458381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.67659795], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98348093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869189], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.976882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9763771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9493624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97730595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9772493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96606356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9788324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99101424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9005406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99936014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97930485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932204], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9612016], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98073035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9812067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9996698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97562176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.17667775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99704665], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97080964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998525], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99232733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98679227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9656298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99153274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98818225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96215016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9768059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9805266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9636651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97454506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9636783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99404126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995966], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9459134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98635525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9529692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98495144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9602346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98543555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97920644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95014495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9468786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99550974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96305084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97417766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97359383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9717996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9565056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97965837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.12595427], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98941684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9731418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98576194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9522595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99426454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99903905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98857427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99234134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96116346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951721], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48255512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99824417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8785449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95153403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98943245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9588952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9583696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980613], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.40420908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.39989355], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37539458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96371585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94245225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9654605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9592037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98266006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96925265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7330982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97743505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.961895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9687065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9763815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99631876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97620165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99619293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873689], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95733315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97832483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99868643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97071576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.27963722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876422], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99487025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98737854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96108717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99226916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99716693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9555073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97069556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9706004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95384204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99118346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98828524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95571715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95034415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99055225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9123519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99757326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99027854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9741033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9820099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99161357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99540824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98219323], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99380606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98142713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9548883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94404644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98783433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99114305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9682817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99925965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8690075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98595446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9675425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.966277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9813138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9808853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953178], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9790577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95206374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9659171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99763834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99804485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99134797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9671815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98404163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9580893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98479503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97045434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96824074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9460003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96192706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9762424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9689639], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99806803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9790122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97454464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99930334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99778885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96523607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98088574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99398476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94142395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9698866], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9635689], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9996438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96163917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99737835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96812755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99681824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9901491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96832937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9897106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9872045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9853689], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9856306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9626969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9923156], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (39,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 20000, 'query_cost': 0.0, 'learning_time': 2023.902423936117})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__39.pkl


ONLINE LEARNING CYCLE 40

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 162408, frozenset({LightInCell(?x0:light, ?x1:cell)}): 20301, frozenset({LightOff(?x0:light)}): 20220, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 20301, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 163216, frozenset({LightInCell(?x0:light, ?x1:cell)}): 20402, frozenset({LightOff(?x0:light)}): 20321, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 20402, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 164024, frozenset({LightInCell(?x0:light, ?x1:cell)}): 20503, frozenset({LightOff(?x0:light)}): 20422, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 20503, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 164832, frozenset({LightInCell(?x0:light, ?x1:cell)}): 20604, frozenset({LightOff(?x0:light)}): 20523, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 20604, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 165640, frozenset({LightInCell(?x0:light, ?x1:cell)}): 20705, frozenset({LightOff(?x0:light)}): 20624, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 20705, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 205 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 20500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8421.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99642456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98645645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99772996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9741344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944641], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98909193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98838943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99318576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9856012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9749858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99979156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95747375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9873112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9955172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98848563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9870905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9672583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.91116554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98402506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98017764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9895747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99678063], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09997068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98236555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9499736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99969745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98943913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95420957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.965727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99832684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974089], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.88276887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97207123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9664506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99811715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98918504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99302304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99961287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98790604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9780125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90522546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9772252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96288997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99758494], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94209254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99799347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9492396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98486656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8932433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1657719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94465476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99487627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99249005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99054986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97892374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99538445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99508446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9723335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9524829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97943705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9530839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98302066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9386219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96707857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9607098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992383], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.966424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97937655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99344784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9395006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99141765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9483035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98987657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9470429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98901397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9755296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9770392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99502677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99348557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99989563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98274267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99078804], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99522865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96214324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.21970098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96941555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96924955], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9739463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99723095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99377316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97968245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9462799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.679022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99566686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9718481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95274055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991397], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99239075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99997973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99382895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99884725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.978266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99436104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9697803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99404216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954099], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99025047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8774945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97634286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90463805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9617891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97527313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9535309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9620118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99592143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98911077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98336947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97053814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99648106], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97940266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99349326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99289113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.924847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93227017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9492326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9649283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3864785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99155086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96741766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98729736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9683294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99927807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99214065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96790874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989998], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98260903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9999735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99141854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9962284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9930396], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818797], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99394643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99660206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98603374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9697166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98604524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.959899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9576211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98524845], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9916996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99962413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9717483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93647134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9796356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9671494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9993961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9641605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97741026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9947585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9855967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.914561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.957875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94821995], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98289543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9596599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97905177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99513113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.88363427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98998797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98085624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99957585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96526796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9736811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98093647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95105964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.976038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99249697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9655015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98611695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99334604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9460235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9641148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99433374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99769896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98176754], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97243637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9627554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.42971003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99066925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97833526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94130325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96463597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97860146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9761557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9103855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95856243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97864634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96167934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99664193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98985153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9799873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9309773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95284474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9707046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9768704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98003244], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (40,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 20500, 'query_cost': 0.0, 'learning_time': 2111.620807296131})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__40.pkl


ONLINE LEARNING CYCLE 41

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 166448, frozenset({LightInCell(?x0:light, ?x1:cell)}): 20806, frozenset({LightOff(?x0:light)}): 20725, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 20806, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 167256, frozenset({LightInCell(?x0:light, ?x1:cell)}): 20907, frozenset({LightOff(?x0:light)}): 20826, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 20907, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 168064, frozenset({LightInCell(?x0:light, ?x1:cell)}): 21008, frozenset({LightOff(?x0:light)}): 20927, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 21008, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 168872, frozenset({LightInCell(?x0:light, ?x1:cell)}): 21109, frozenset({LightOff(?x0:light)}): 21028, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 21109, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 169680, frozenset({LightInCell(?x0:light, ?x1:cell)}): 21210, frozenset({LightOff(?x0:light)}): 21129, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 21210, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 210 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 21000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5987.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97662175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9685856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97448504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98929685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98121935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99451506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9812375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9520144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9204135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9305508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99771214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97073275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98458004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99312836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99956906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99431497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9568316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96480125], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98964363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9306535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97094643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98569673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98419744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.932701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9536949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99925643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98159415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97685295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96182567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9760652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9706249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96357197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9744953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9524622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97808546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99579567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960475], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98038757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89737225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9810533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.979404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99118704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.974882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98353213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94948953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99968493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9763544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99968475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99576366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95241886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9751602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9045749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9582975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9775896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9812107], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4179508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9649767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98310184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9788324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98222953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991631], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99992424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9609876], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9919548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9902707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9794789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9823775], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98778814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96924096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98386264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99867284], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99217016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98491895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971804], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97628444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98028874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90946305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9527595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99499303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14066273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99700546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99590456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99164844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97451735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99458486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98165786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97866654], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98942834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.926011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9748448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96964276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97350335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5561131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97630894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97331804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96564895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99281996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9670739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9690495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.42145252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9655022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99432844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.970918], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97823125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9476265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9633442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992262], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.32150012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98124534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98079216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9911171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9936047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99137646], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98687613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97568005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99976766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98535293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98864937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9775736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95938224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99289954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9739646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95712304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99999654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97898453], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99234974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98382545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9698252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97890884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93859905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94993275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99245185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99960166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9626881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8552818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872608], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1180042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96211344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9550724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98905206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95125216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99489975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97827667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97865146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99398005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99504447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887295], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99642473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9765992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97532827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98995566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9781567], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9609607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9907596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98781526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9475688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99133116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96768224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9967105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98248297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99490845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9812482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.89039177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.956753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9695571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9972591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98431283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9898909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9936644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9706452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9835817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9417456], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9658674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98939425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9794648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9716736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99714977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99586105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99280787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9558862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9317281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9216652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951289], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99993026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9672849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9799502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99526864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98765427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9656515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97198826], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9611012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9975522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99764526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9790161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98976314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99378204], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (41,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 21000, 'query_cost': 0.0, 'learning_time': 2196.080301341135})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__41.pkl


ONLINE LEARNING CYCLE 42

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 170488, frozenset({LightInCell(?x0:light, ?x1:cell)}): 21311, frozenset({LightOff(?x0:light)}): 21230, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 21311, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 171296, frozenset({LightInCell(?x0:light, ?x1:cell)}): 21412, frozenset({LightOff(?x0:light)}): 21331, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 21412, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 172104, frozenset({LightInCell(?x0:light, ?x1:cell)}): 21513, frozenset({LightOff(?x0:light)}): 21432, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 21513, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 172912, frozenset({LightInCell(?x0:light, ?x1:cell)}): 21614, frozenset({LightOff(?x0:light)}): 21533, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 21614, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 173720, frozenset({LightInCell(?x0:light, ?x1:cell)}): 21715, frozenset({LightOff(?x0:light)}): 21634, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 21715, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 215 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 21500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00198, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss did not improve after 5000 itrs, terminating at itr 13466.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99308085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99606586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99915224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9685481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98488057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9542416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20557038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99083036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9622118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98729086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99291295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979671], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9891534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9632448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99334455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9776238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9748142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9803838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9677653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95194304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9935575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9986079], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9742802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9735959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97170275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995043], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9914435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9957444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9825572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98899823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99625266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99960065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92175615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9868882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9745585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97200435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9812566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99874645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9951512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9862239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98189646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99859065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9923389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9579021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9911235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96016985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.994114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99000627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96915233], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97823584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97072583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93315387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99017286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97390187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97084016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.904053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97119707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9669877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99832964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.40016612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9652196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9490674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99000907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94054013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96999556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93813926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98355293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96773285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96738476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.978193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97289705], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99819124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99218804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9903657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9903815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9868278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.969246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97921467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.974621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99462414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9619017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9957928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9938988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9890298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97654474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9405479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6904246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9852355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99234486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9889641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.976787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9976574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9966438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9887859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9681745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9948087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10455334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99881643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.998083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9697504], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9814106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95572174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98954314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9615526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95328426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9606205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92748547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9665846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99179435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9736605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972489], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37730658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9750724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99638474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9497152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98475236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92761683], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9808613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96329564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97879565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98206294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9686801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97856826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9634486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99645436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99689615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97703487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99413455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9326558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99418986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9742235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95770097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.966697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.943666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98378456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941945], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98245096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99778825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99616385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5852818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98309237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985958], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5016667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9647934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99337345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9374617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9107484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98576796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98793787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9645668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99352837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9708654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994548], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9992625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9932012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99888146], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3532617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98508006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97523373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98269814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98753667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97948545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9701306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9735159], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98859835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.27782843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9709755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99798715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9760294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99809724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6414247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9762097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99939007], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9764931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98122126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9999104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9759248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9485734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98635167], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9707281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98978156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9586964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99484956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99649864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95773846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99418014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99930876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99613917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96742517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.949968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99660355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9779758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95477676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9229928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9820317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93233365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9675651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98966706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98412764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99555176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96716374], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99648947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97589386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9703914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9757065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97241557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9509154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9581026], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99302137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99442625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9963955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9922593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96220237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9492678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5359408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9862106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99353874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9898759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9959719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99385256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9836773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9917913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9939921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.987952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98434883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95799285], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (42,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 21500, 'query_cost': 0.0, 'learning_time': 2294.902736943157})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__42.pkl


ONLINE LEARNING CYCLE 43

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 174528, frozenset({LightInCell(?x0:light, ?x1:cell)}): 21816, frozenset({LightOff(?x0:light)}): 21735, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 21816, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 175336, frozenset({LightInCell(?x0:light, ?x1:cell)}): 21917, frozenset({LightOff(?x0:light)}): 21836, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 21917, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 176144, frozenset({LightInCell(?x0:light, ?x1:cell)}): 22018, frozenset({LightOff(?x0:light)}): 21937, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 22018, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 176952, frozenset({LightInCell(?x0:light, ?x1:cell)}): 22119, frozenset({LightOff(?x0:light)}): 22038, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 22119, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 177760, frozenset({LightInCell(?x0:light, ?x1:cell)}): 22220, frozenset({LightOff(?x0:light)}): 22139, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 22220, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 220 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 22000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00048, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss: 0.00000, iter: 15000/100000
Loss: 0.00001, iter: 16000/100000
Loss: 0.00000, iter: 17000/100000
Loss did not improve after 5000 itrs, terminating at itr 17895.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96337605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94841677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98700815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9450178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99996793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99352145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9528172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99716914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9389266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99659306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98997533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9507355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97698337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95392066], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9762597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9687664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9942655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9741466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95473814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99742746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.341913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9632617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9899015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99718815], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9666066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9708565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9591607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.40095845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98762816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99982506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99144715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.44352478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98000944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9426409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96160793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95325416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99260753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96166694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97997034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9737695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9622803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98703843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13149787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97368646], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90267384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98581403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99642545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97276354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97658455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9365792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99615777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98742694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99512815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98018163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99913037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97737616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9153908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98954755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9562602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99453163], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99367416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99825823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99686164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96679026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98998934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.967316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980867], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99956125], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99440974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9921754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97181416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98882836], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96519536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9503134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889251], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.82884425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9781834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97354716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99096256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99658424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98018605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99519795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99286926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97148854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98269176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9757077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99402905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.944246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.955238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99459946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994676], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9519964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9732384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96543187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96917474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97231084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98091686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.975497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97727835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9531009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99687725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9750175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99874914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98717946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9666897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9304851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96555036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99775666], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9469328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99343157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98828816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9618528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99527687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.58671594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9775257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9712952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9735368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99818486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97648233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99043995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98728096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9830456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99750745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9732259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99743044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934011], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9675071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9311084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98710036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93250316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.59736484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99710965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9614546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99980253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98749024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96270114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98401755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9472788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98440456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9251306], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9669637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99818283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9764431], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9936717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94816154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96086234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98609793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9775629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99853814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9737382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9887193], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97727793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9712358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9715171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9069556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9681543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99546003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9636133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99327105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99355716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99756837], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9883005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9705183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98937833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98233944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9787334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9994328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9814998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99218786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98004735], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96045053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40820938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9601463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93969387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98623323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.22897518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988048], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9527957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9952871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9660684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9489499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98587686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98882097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98514044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9848894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9776032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9978848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9683958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9970794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9723042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99939406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9921734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9944741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99180406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98163813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97831035], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (43,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 22000, 'query_cost': 0.0, 'learning_time': 2403.015015605197})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__43.pkl


ONLINE LEARNING CYCLE 44

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 178568, frozenset({LightInCell(?x0:light, ?x1:cell)}): 22321, frozenset({LightOff(?x0:light)}): 22240, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 22321, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 179376, frozenset({LightInCell(?x0:light, ?x1:cell)}): 22422, frozenset({LightOff(?x0:light)}): 22341, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 22422, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 180184, frozenset({LightInCell(?x0:light, ?x1:cell)}): 22523, frozenset({LightOff(?x0:light)}): 22442, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 22523, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 180992, frozenset({LightInCell(?x0:light, ?x1:cell)}): 22624, frozenset({LightOff(?x0:light)}): 22543, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 22624, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 181800, frozenset({LightInCell(?x0:light, ?x1:cell)}): 22725, frozenset({LightOff(?x0:light)}): 22644, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 22725, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 225 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 22500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10393.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96879894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9728915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98622507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98690444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97059405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9668865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98899925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.982572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.53112966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99690497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98441935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97093934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95727015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95048845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98663104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99496394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9755093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98948896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99592316], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94312996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99527496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99095595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97972363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9674577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90460753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95160097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9657345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99409163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99041134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9711162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99789524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9819954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842911], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.39383525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99798274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9626633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9692149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9620006], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99737525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99430543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99540544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9400513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9651052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9737962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9281769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8883995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99627286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99943954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3488051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97438884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99687845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96651435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99851006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98010826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9640682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95069927], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97150683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12445763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9729473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97278106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95934427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95583117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9687852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97837937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9769598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96011066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98064834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98506534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972244], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98279583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95896745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99432176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98181427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9530546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94752574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9306086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9500376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97795314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99770033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98925954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9843596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97357106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99351037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973189], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98724926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.05822661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99884164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96362], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19051781], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98420644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99476665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9628222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97779346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97746515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7151431], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93001914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97173196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9380236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9812042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917551], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.71980685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98532134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9722027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936027], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94467443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90658385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98173195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98049927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97894585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96721214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97723097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9650308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.34353504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9419792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99566275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99201936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95331836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98772514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99307895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9569205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.969148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9761986], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99982774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97265595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1468724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49224055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99358183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99487114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9776674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98080975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98590463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98468393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95079046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.964122], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8982581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98995763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9575132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99767643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995431], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92706776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97279644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99549425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98288584], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9727537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99165714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99525577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93403566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.967049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98133856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99605787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5645473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.944474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817907], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.05918081], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9886206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98971254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97575146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9549349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99093854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.54067975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9205411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99963665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94958127], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99573535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.977927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90218765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98262614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99076355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99177104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95216614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99510914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99851406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99241847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9812748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93871796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96357983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98312956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99609214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98671573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9735205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99627906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99259526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982453], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (44,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 22500, 'query_cost': 0.0, 'learning_time': 2500.6062464502174})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__44.pkl


ONLINE LEARNING CYCLE 45

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 182608, frozenset({LightInCell(?x0:light, ?x1:cell)}): 22826, frozenset({LightOff(?x0:light)}): 22745, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 22826, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 183416, frozenset({LightInCell(?x0:light, ?x1:cell)}): 22927, frozenset({LightOff(?x0:light)}): 22846, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 22927, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 184224, frozenset({LightInCell(?x0:light, ?x1:cell)}): 23028, frozenset({LightOff(?x0:light)}): 22947, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 23028, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 185032, frozenset({LightInCell(?x0:light, ?x1:cell)}): 23129, frozenset({LightOff(?x0:light)}): 23048, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 23129, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 185840, frozenset({LightInCell(?x0:light, ?x1:cell)}): 23230, frozenset({LightOff(?x0:light)}): 23149, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 23230, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 230 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 23000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5720.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9584813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97821325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99773794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99656117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9576839], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8554699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9608295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99002546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97598803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9837598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95882136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9707416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9597284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.32166767], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98010397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.973497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9976697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9836602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8940622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96963507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95054334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9945297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.999736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9950791], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92715555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92142636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98625565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9607386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9163035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97759664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98215485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97556394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9651311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99922603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98048824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99892455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99423647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96977276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9665204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97679275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98667383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99899954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99088544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98342323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.56952035], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8063446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99095976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98562044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95882255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98415715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9781442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9700926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98099947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96607184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98491347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99494356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97540045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98957604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9792142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96054536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99347204], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99989843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98607963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99988145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99842775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98746216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99542034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97786176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95438653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9735518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.967962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00632304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95981884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96642303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95071507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99074495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9622535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97789323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98941356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99978995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9474225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99888504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99394494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9119512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93972987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9444012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1620445], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9571162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9323772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9442274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9608034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99197257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99121886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.83390707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98179877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.957594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9629548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9792956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98315185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.968193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99752104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9553835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842902], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99835074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99774855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.66679716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98604506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96869004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98040766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9740626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9692057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95967233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9805224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9293521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9449127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99799293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95608383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9627185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9673073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95900387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9538483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.41633764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98795414], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98949236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99426025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97937393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99795634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98163146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98803663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97193974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89021635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9625725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95818734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9736931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98329073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98575777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99185616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824302], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9880344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.988414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9912917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9969029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98564506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.934727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94525546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9913479], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991598], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99528134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98847103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97438145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98212796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8897578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9556868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9599528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9297783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9788592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99644053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6884336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99467117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99746615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9754352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99929285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95279354], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98173857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9384661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94128454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97397864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811086], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9960529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99766195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98203546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9971695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9804456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9932318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9975688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9991486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97373456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94080186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99404496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98342067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9940916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.987449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99963456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9738462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9293829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99698913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96690315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9803278], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9679932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18252756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99568343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97596335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.82022256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99755836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9740408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98717856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.971125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9780635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99645054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98188406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95245373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97792995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96781415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99722826], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (45,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 23000, 'query_cost': 0.0, 'learning_time': 2591.510735267191})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__45.pkl


ONLINE LEARNING CYCLE 46

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 186648, frozenset({LightInCell(?x0:light, ?x1:cell)}): 23331, frozenset({LightOff(?x0:light)}): 23250, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 23331, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 187456, frozenset({LightInCell(?x0:light, ?x1:cell)}): 23432, frozenset({LightOff(?x0:light)}): 23351, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 23432, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 188264, frozenset({LightInCell(?x0:light, ?x1:cell)}): 23533, frozenset({LightOff(?x0:light)}): 23452, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 23533, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 189072, frozenset({LightInCell(?x0:light, ?x1:cell)}): 23634, frozenset({LightOff(?x0:light)}): 23553, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 23634, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 189880, frozenset({LightInCell(?x0:light, ?x1:cell)}): 23735, frozenset({LightOff(?x0:light)}): 23654, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 23735, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 235 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 23500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00137, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6472.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99423474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97702116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98381996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9427268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99896634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98915297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93806773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99368477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99891657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93312645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99851304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97952414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98496515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9814368], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9706756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98886937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97241753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98955655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97659224], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96627355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9881457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97073746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9738804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8722494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98095995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.986628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95601314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9374304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99423003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97864807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97898394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99128824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99987465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9677009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97191924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9955522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9784164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98157364], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98647547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96527225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9734603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95278126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887062], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2442535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99024886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97554797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9706228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9775267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9444798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97611403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96841455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.91479975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.964711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9763663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99990606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9812838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99863076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9758551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9446727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98010266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98947656], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9681045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97079074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.953809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99683976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97216475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95842135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99592054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96402174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9613519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9386452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98991585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9814339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902933], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9686313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.986095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9678025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9575763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9980715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9951463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9810458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99577296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.981517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99031997], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99155027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97741234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99837416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94598824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97537225], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98576146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9559747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97382593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99276423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97390556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96325445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9095914], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9792382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9667791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99405026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98954856], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9784367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99622947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9667265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99747306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99878365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.954469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98422533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9784085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9779921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9760988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90546757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98445535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930368], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9768667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92837965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7695905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9626129], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9286589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9779512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9770202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99911857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99261504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96776915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98689485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99183404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99097383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9786063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9640384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95460165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99938893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9546221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9511367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9707008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9770605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97435653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97485286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9438705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984663], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96917826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95555323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.949453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94114184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98219234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93392324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98748326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98560387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96556294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9705482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99400306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9167988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9500532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985207], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9961033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9963203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.987051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96978945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.939631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9941508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99583703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95743555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9917087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97052443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9505186], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99604243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99222004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9727781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95429987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.92766654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9179172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97560513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9690452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9626532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9564319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96123844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99593234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9520683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9263019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97173524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97446793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97327375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9698032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9720906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95970875], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9417361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9650113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97066844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94973874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97287923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9780072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96985453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93951577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99700576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9749525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99659485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99394727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97387594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9741502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98085743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9675872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97966653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.978477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9669995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997333], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (46,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 23500, 'query_cost': 0.0, 'learning_time': 2685.482062384195})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__46.pkl


ONLINE LEARNING CYCLE 47

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 190688, frozenset({LightInCell(?x0:light, ?x1:cell)}): 23836, frozenset({LightOff(?x0:light)}): 23755, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 23836, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 191496, frozenset({LightInCell(?x0:light, ?x1:cell)}): 23937, frozenset({LightOff(?x0:light)}): 23856, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 23937, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 192304, frozenset({LightInCell(?x0:light, ?x1:cell)}): 24038, frozenset({LightOff(?x0:light)}): 23957, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 24038, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 193112, frozenset({LightInCell(?x0:light, ?x1:cell)}): 24139, frozenset({LightOff(?x0:light)}): 24058, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 24139, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 193920, frozenset({LightInCell(?x0:light, ?x1:cell)}): 24240, frozenset({LightOff(?x0:light)}): 24159, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 24240, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 240 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 24000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00174, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8232.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9750576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97002333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97718316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9713904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98528546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99154943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96745986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99560905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99886525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99099743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9054029], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13914335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9661126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97864425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96520674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89500093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863181], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96206576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99446565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99624354], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99172676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98929495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99198836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.920988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9569171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9430773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9776236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.974135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.969371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94519526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9495634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9715975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99730736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98713845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9493036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94513756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9416904], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9877404], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901772], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9557948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99142337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9777761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43634167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97432226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98023576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98876715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9474166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9709992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96082824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95987654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9758945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93811196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85032874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9664922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98707336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9780484], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99810725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99392474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9741726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99819815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96502995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97179425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96724707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9613442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92484546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9216838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97898245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9741388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97998744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9517883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96579295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6425797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98189354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96217173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99502844], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9521963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9651214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9635325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98135793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9318867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9368772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.952567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97480774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96812916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99660224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99961597], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9753574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99412674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98235023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99945796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96565163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20337443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97251636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9743994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99794996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98944914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99458313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93832046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99917066], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97853065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99730337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98009485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97581244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98225117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99892896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24069026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9584509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9749063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98039085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98568153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9508747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99103695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8203259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9802839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97503084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9371021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99853307], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9621911], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6439493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98833275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97830117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99182945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9730237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9739767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99353105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9662701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9771071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.982839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99190956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97065574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98559874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94762856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99058384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9283902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97492415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8821634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98104095], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.81499684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9629022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99577576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99377453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9567681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98759276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99034464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997445], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9003548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9712785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9556685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99543023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.976003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99487776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9718303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9857411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9957625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95685637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.977641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9639284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93968916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99657226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9834997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93739057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98921347], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9658458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9758169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983154], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9928813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98087627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9851491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99813926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9831484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96758175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.947188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9945435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9964315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98842734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9860911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99023044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9842702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9903987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9839102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99307144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9942818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9923188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.87635905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9990354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.91584283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9863763], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99522907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98540235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9754974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.17805779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96103567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99363637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98617697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9696767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99636364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9777326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91289914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9596593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93923306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95693266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970441], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9529261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9211053], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (47,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 24000, 'query_cost': 0.0, 'learning_time': 2784.651252278185})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__47.pkl


ONLINE LEARNING CYCLE 48

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 194728, frozenset({LightInCell(?x0:light, ?x1:cell)}): 24341, frozenset({LightOff(?x0:light)}): 24260, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 24341, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 195536, frozenset({LightInCell(?x0:light, ?x1:cell)}): 24442, frozenset({LightOff(?x0:light)}): 24361, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 24442, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 196344, frozenset({LightInCell(?x0:light, ?x1:cell)}): 24543, frozenset({LightOff(?x0:light)}): 24462, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 24543, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 197152, frozenset({LightInCell(?x0:light, ?x1:cell)}): 24644, frozenset({LightOff(?x0:light)}): 24563, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 24644, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 197960, frozenset({LightInCell(?x0:light, ?x1:cell)}): 24745, frozenset({LightOff(?x0:light)}): 24664, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 24745, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 245 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 24500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5392.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9715622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9808876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98785836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02613078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9667174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99639106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97443956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99603784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99679446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98534024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99660873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9812198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96909887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97356933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99549997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8541157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99358827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970263], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98513794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94616055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95642763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99617136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99246675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97402674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98991984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98342174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95476985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925276], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99426484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.988063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.997614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97004795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9983512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98796487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97395104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9821435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9894824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99622655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99462736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9959777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93726134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97636336], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99171716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96898776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99364567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89629054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99579006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98941964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99447346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98865825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9733096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99801266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9436504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99928254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99731475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98084617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98499024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94575804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94982344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9814482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96767974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96980613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97677004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98022294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986476], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9533158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9521456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9671796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97427577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99096745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99902785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99807197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9410682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99744815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9594963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9784566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96642125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99776083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99062556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9776072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99767864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98089355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.962924], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982556], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9581898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95275396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9609998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99626887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944159], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.50365824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9805291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98700964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9592365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98470205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96740407], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.940728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97140473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98359734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97979534], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7242611], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9631098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9706984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8549823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97447103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98393744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9467145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9765596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99978167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885431], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99439996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99675083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93888545], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99833983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93536234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9763562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98097205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9688539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9705171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98934126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9070723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99750745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99015534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99869025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99736357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9720104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99522007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99335235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99773103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69357526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9410627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99522924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99594206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96962976], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98173815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99631965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96953964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97119623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98121166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95450014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99670327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97950536], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97138983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9600274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.940978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9782998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9857001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97045815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9360208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9974636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9378622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9909961], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99635756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97106224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9409305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99773705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9599196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9797396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9974538], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9814515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9589704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99481946], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9765788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.992739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99853706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99817324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98948616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98373544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9676928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9896522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99837327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9959066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9979631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99756134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.973407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9730117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97332144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9662974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98612684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9578673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99492514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99730647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9611979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9909432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9581321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9518393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9920443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.88444686], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7929478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99809754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823018], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99606323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9787977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9754748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97387123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98880315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.986467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9840932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9599852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9443539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98253816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97074264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96766347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5594322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99213433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95796883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9907944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99794877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98618823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9931232], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9999029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9531296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9671073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9940398], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (48,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 24500, 'query_cost': 0.0, 'learning_time': 2880.381281161215})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__48.pkl


ONLINE LEARNING CYCLE 49

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 198768, frozenset({LightInCell(?x0:light, ?x1:cell)}): 24846, frozenset({LightOff(?x0:light)}): 24765, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 24846, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 199576, frozenset({LightInCell(?x0:light, ?x1:cell)}): 24947, frozenset({LightOff(?x0:light)}): 24866, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 24947, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 200384, frozenset({LightInCell(?x0:light, ?x1:cell)}): 25048, frozenset({LightOff(?x0:light)}): 24967, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 25048, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 201192, frozenset({LightInCell(?x0:light, ?x1:cell)}): 25149, frozenset({LightOff(?x0:light)}): 25068, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 25149, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 202000, frozenset({LightInCell(?x0:light, ?x1:cell)}): 25250, frozenset({LightOff(?x0:light)}): 25169, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 25250, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 250 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 25000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5061.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94728744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95898956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.45599797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98771095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98912185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97798264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95869803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98127306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98162967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97666246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9481762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99307805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98894155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97855073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99530375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97411776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9574367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98374355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946414], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97372025], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99794894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9186355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9952059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98972774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9785696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97923815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9973031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9797533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9926291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98024005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.26194885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9994922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9654328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9913607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99193746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95949274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97121555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99349135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97882336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9788786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9786024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9381469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9640591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9798573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97390324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9728436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9889879], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9802683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.960444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9449521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98761463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99664295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9711383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99996537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95406383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94582057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99985725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93823624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99262524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9552964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861029], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7885185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99141544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9653158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9735669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9292829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97952926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9674037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97259545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9797777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99489385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9657978], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99809724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99350023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.968701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.971878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9373364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9545047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94978577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9180997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.947225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.44747528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9717204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99307585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99724716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99674934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9792206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97581154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95159715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9820424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99160284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99886644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9830799], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9784525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9429643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9290122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98657674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9700523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9746483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98600775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9363115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6967319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9653547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9674717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98839366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94172865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99783456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98743397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9724204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99963874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98063296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9728032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99128985], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97682196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99543506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.70011294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96736115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99762106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.29622698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94447094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97312605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99217606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99006456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9754021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94998986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9755242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9632726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99240303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96517557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98548347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98634726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93231386], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9631762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99270725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97913474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96347475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97353226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9687741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94523096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98098075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99371517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99136084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98016816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9622385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99372494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19190061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9654755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98293567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96876127], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98790455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99851155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99619037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96142256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98071957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9582895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98377687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9784764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99583334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98546225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99043906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99123514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99814135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.950749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99875826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99336857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9265472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98297596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904556], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9510951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97426087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95726496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.32607895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99933606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0898978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9259961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9597329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99306196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9360207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96283966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98898107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9604287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9837838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878536], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98671055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97692376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99095917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9801058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9765712], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98029786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98398304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98814577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99296355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99606705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9383898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99788564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99325866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92127436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98159355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96631205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95682126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99859166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9597072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91102314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9527942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9528331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98549855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9723584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9017419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98990285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9333666], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (49,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 25000, 'query_cost': 0.0, 'learning_time': 2977.342899164243})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__49.pkl


ONLINE LEARNING CYCLE 50

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 202808, frozenset({LightInCell(?x0:light, ?x1:cell)}): 25351, frozenset({LightOff(?x0:light)}): 25270, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 25351, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 203616, frozenset({LightInCell(?x0:light, ?x1:cell)}): 25452, frozenset({LightOff(?x0:light)}): 25371, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 25452, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 204424, frozenset({LightInCell(?x0:light, ?x1:cell)}): 25553, frozenset({LightOff(?x0:light)}): 25472, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 25553, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 205232, frozenset({LightInCell(?x0:light, ?x1:cell)}): 25654, frozenset({LightOff(?x0:light)}): 25573, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 25654, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 206040, frozenset({LightInCell(?x0:light, ?x1:cell)}): 25755, frozenset({LightOff(?x0:light)}): 25674, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 25755, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 255 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 25500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00099, iter: 4000/100000
Loss: 0.00092, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5023.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98953694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9612555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9720703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97410756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98298717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16688624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96657723], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9979379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9716639], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9980765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99196947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.987352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99979407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9623059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9880661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9929504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97740215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.580148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9843775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93794554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9977846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9952875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9964279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9989823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98515546], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9820022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9137254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9736412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8902946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90954316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97528875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92770034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99724114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98223644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5351456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97383994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96119493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9814841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9788785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96071917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98520446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99004483], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94695276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99052805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99953336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9722967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98563534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.970825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99627393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99710906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96904016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.958829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9738431], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9394511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99989915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9778225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92558473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99379325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9692305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9715203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9225193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9072667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993289], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97534907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9799298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9547269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987201], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97313195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09399346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98802924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94543564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96700674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97147214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98932964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95070016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98621726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99917024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9649237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93651605], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99052286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9663298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9864579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98292166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9974526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98138136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98172134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97285706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.7248205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9933437], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99287856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.969948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98472595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90863925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9753545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98738927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996037], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89489204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9622351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9639387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99433404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9617922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99089193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98830247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9661798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9652134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986437], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99942976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.971787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9734599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9738242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9416025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93201756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99975634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.958697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99186766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99098957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99442744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99385947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98920983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96250033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98942256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92982805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9418736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95307237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796013], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97228724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9600423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9810729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98303086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7210122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.39413956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98377436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98015887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9556482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99386984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9714625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99652344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99349064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98854566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9610385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98166996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9639578], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98741966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91945934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98267007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99222213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99599564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97374314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95685846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99345917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9681777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6965795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99026597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99906576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92038953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9509582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9734209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97411007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.46013734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99753195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98850155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957276], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99504596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9714985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99510235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9641701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98701596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97427976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98703986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98475236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8919279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97288626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.968212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9610222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9373943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97904736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98379713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99124885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94563353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9810005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95363486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9579249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98976636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990376], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97573113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96781623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9497757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97104686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99123186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97843814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96792275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96542263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99613875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9689379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99458593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96522343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9578998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9645729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.977299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97402674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897737], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (50,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 25500, 'query_cost': 0.0, 'learning_time': 3076.2546317102388})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__50.pkl


ONLINE LEARNING CYCLE 51

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 206848, frozenset({LightInCell(?x0:light, ?x1:cell)}): 25856, frozenset({LightOff(?x0:light)}): 25775, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 25856, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 207656, frozenset({LightInCell(?x0:light, ?x1:cell)}): 25957, frozenset({LightOff(?x0:light)}): 25876, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 25957, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 208464, frozenset({LightInCell(?x0:light, ?x1:cell)}): 26058, frozenset({LightOff(?x0:light)}): 25977, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 26058, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 209272, frozenset({LightInCell(?x0:light, ?x1:cell)}): 26159, frozenset({LightOff(?x0:light)}): 26078, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 26159, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 210080, frozenset({LightInCell(?x0:light, ?x1:cell)}): 26260, frozenset({LightOff(?x0:light)}): 26179, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 26260, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 260 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 26000 datapoints
Loss: 0.00006, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5515.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99728996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9705071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98058796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99056596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9667071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99070436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99099827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9837676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98658425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94146466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54860747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98963225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9633617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99682283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9474558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99282414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9829928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9738527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95467913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99060416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94694024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99191046], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99077153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9746488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98412097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93982834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99680597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9420989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9533145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99308836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99662066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99157375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9517622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97158563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9708677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4598568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9365785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99410266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9642874], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.995623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9739813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.996543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.900848], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96372515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99162227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99242365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99281025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99562216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93539995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9786089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9464765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9777432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95463705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98320204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95441836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9777939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98455864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9368394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99280757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9749418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99834013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99345654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8716747], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891009], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9614819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99822634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9615184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99958783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94569767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.962442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95225483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9452064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97476906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9513193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98852056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98141897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98908484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98488015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942294], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89518094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99852306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96118164], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9761573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99624354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9768262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.956956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90922934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9722894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99657273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9576977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95057535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9740555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99422216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96473515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99392724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99020725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95332164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97842705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9674216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96386695], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99273765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9656266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99621975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96720845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9686893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99598324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98234624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9786446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98491365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99804205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98087823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99347854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99704576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.24876826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96830386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9636158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95143586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94764113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8986331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97375757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97111356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9790736], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94762903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99631536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96521765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9837525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9750562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97698027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.975915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96863526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98576856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9781517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99744195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89134294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99620026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96069056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967142], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95626897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9617126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9756797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9655449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9985849], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5862379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99950254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99150395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99875706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941451], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.973773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9513582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.955833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99163246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9768067], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9703436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96598876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9660702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9952158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9965259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95583963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9822142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9974861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9932501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95502794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9891081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95720077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9906191], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9393599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9788827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99135345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99721414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9765795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96486646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99249744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1311424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95686305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97956127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9678053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97891414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99582016], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.997946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98694855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98912424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9995776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9622254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97820705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.996277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9846817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9819045], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94782925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9451955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99530035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95000595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97970915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99824935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99981487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94304764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9618384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98955536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99963254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99680525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.86803067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886181], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.59919846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.68237865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9579555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951352], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9890038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9911937], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (51,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 26000, 'query_cost': 0.0, 'learning_time': 3177.993203929218})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__51.pkl


ONLINE LEARNING CYCLE 52

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 210888, frozenset({LightInCell(?x0:light, ?x1:cell)}): 26361, frozenset({LightOff(?x0:light)}): 26280, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 26361, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 211696, frozenset({LightInCell(?x0:light, ?x1:cell)}): 26462, frozenset({LightOff(?x0:light)}): 26381, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 26462, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 212504, frozenset({LightInCell(?x0:light, ?x1:cell)}): 26563, frozenset({LightOff(?x0:light)}): 26482, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 26563, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 213312, frozenset({LightInCell(?x0:light, ?x1:cell)}): 26664, frozenset({LightOff(?x0:light)}): 26583, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 26664, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 214120, frozenset({LightInCell(?x0:light, ?x1:cell)}): 26765, frozenset({LightOff(?x0:light)}): 26684, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 26765, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 265 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 26500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5455.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9705724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9762667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98815024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99760014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815057], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9408114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9890267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9996903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9853761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99165326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9879186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.8169404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9979449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9558629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9429288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9156122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9086676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9854499], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9639901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99667007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9870048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9921089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9964096], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9641077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97473747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9549022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95877606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96202916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99778265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95352954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98461825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9763998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96064967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99843466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9710961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99057114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9783339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98151433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23362017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98366076], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9758447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9195491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97395134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9249704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9206567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9670361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96554965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9668936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99937373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09912059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95299065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9636951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99422586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9753263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9247994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98615235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94500124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9672954], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99737316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.967828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9613795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99244285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9292207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9454502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9429915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99415797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9706669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99044394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98694414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9706598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98490024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9640449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95571005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.92682415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9762652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99555117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98235154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99461806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9612926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9672638], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97261816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96620005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99348265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98986226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99319065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9734858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9512278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98341787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9669108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.33334434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99398386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.975846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10185877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5756815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98429453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99053997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956741], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9159834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4900847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9236594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97044486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9726572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99483454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99232376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99360144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8688956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9687719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98814136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9702698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99204874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99224013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9570187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.20846762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94334495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9723976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9020017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94825375], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98613167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9622943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99418724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99519914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99624664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9813526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99923414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97932786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9785712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98628587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96566147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9738747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9689681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.964847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99562764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940189], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93968856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99013454], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.970186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97885066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99940366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97000676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9609678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9725832], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.09665453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9643101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93563914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9426245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9619111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99860275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94737625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98670805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99714595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99467796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98199004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99440336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95886266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9702263], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99091876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9641825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9814705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9628116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99925196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96138316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99823517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99800026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9450478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99662036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98732346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99301153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99593294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28787026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99186146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97914314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97687966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9757706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909245], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99144393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9585515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97029185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95790786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99518514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99286056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98195773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9672569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9635629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99609715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93453854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99686116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96463513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99878037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9808245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.973477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9744514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94921756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9829917], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (52,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 26500, 'query_cost': 0.0, 'learning_time': 3281.0837713742512})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__52.pkl


ONLINE LEARNING CYCLE 53

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 214928, frozenset({LightInCell(?x0:light, ?x1:cell)}): 26866, frozenset({LightOff(?x0:light)}): 26785, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 26866, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 215736, frozenset({LightInCell(?x0:light, ?x1:cell)}): 26967, frozenset({LightOff(?x0:light)}): 26886, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 26967, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 216544, frozenset({LightInCell(?x0:light, ?x1:cell)}): 27068, frozenset({LightOff(?x0:light)}): 26987, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 27068, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 217352, frozenset({LightInCell(?x0:light, ?x1:cell)}): 27169, frozenset({LightOff(?x0:light)}): 27088, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 27169, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 218160, frozenset({LightInCell(?x0:light, ?x1:cell)}): 27270, frozenset({LightOff(?x0:light)}): 27189, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 27270, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 270 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 27000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5084.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9748696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9483997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99815166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98960376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99576986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96108556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97620124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94810295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973689], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99359196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98381776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99361527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98132706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9785246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9622047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98821026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99216866], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9726119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99715805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5657825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98508245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890141], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.977571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96394366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99074066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9674187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98201615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.947405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99221957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99560356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9605408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9760863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9687023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9438732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96921915], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5939249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92387515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98491657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9810171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.959654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9808597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99271345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.77742237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99269867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98355234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99288934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9059348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99440545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9587931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99241686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97291267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9820959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9562517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98290235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994981], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98125106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9822131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99842864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97768104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99097216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9990651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9911775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99851644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.987026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99713594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99849975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9721765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98601985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99304205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98272836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99310327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99701065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94415766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98831445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.970534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9960766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9869522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95839196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98883575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9768547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9062971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99423486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9934902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9545298], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9682206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97874033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99441814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98780733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97318894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98734784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95543814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9267345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99042803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99805415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9724547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98055375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9395895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9605968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9416373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96946776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27119064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851211], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9634616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9510175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9472173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9543324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99509954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9630299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98558307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25397205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9602533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9702666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27791253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99851274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99709725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99356186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9698637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98567694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1415524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9753496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.74498653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9247787], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98768777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99983096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99745023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98787946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92192054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9349844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9721921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9549027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9592451], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9673188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99300843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99678296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92592365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99193084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96782106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99448204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9478403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95500016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9710536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97428954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99723786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99968904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8815645], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9713999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92773217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98702204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98941547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9674316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9794581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9717578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96824247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9779934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93852836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.41382647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94863313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99828595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9730453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.88696754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9703146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41560557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96898323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99354684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96640974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99644005], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95672864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97740793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96839786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9785004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97625625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92656446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9547557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97266906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99613124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97496694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9728542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98560685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99409425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94333595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98929185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9703337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99531513], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2211972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9693981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99034405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.33936375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9770725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96855265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99713635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99879944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99059206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9649749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98026526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96097404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99097633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9734756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8963881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96547186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9630901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96614915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99874544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9674555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94233197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9797764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9350906], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (53,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 27000, 'query_cost': 0.0, 'learning_time': 3385.906127156224})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__53.pkl


ONLINE LEARNING CYCLE 54

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 218968, frozenset({LightInCell(?x0:light, ?x1:cell)}): 27371, frozenset({LightOff(?x0:light)}): 27290, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 27371, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 219776, frozenset({LightInCell(?x0:light, ?x1:cell)}): 27472, frozenset({LightOff(?x0:light)}): 27391, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 27472, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 220584, frozenset({LightInCell(?x0:light, ?x1:cell)}): 27573, frozenset({LightOff(?x0:light)}): 27492, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 27573, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 221392, frozenset({LightInCell(?x0:light, ?x1:cell)}): 27674, frozenset({LightOff(?x0:light)}): 27593, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 27674, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 222200, frozenset({LightInCell(?x0:light, ?x1:cell)}): 27775, frozenset({LightOff(?x0:light)}): 27694, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 27775, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 275 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 27500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5081.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9605243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93788505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99273473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99706393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98803973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92458683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95604575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9681976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99839884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9524389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9670887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9480405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9635369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99857795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9753433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99570686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98745006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9455594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9708764], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9747426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98442024], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96550477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9374515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.959501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9760929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9714408], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9877639], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9663716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98565364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9934082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9573727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9834871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9880982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9998275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9718804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97711647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.971907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99812555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94693476], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.997323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.89411587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9662684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.935615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98842794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99697006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9950681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96344733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9743624], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9769507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98043525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.956387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99820864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9742003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99794114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99535805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.976087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97772866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.979294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99298275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.07506696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9731038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97844815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9496468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96861863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9738605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9421241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99534875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99378884], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9642603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94746923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98917574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99427307], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9942441], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9978777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95842826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9674803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99712396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.951748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9992755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97091794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9965901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9913508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9950079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99120486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99471855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9641289], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99448824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9514911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9811766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98160905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.991677], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98012745], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98417264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96075314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99108857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9781064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97531694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9470723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97243947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840964], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9830063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97511035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95554966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9458637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99099517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9751172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96564364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99994177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97176135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9541149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99826425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99726665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.88472956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95036036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9802015], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98285735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97181135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9862245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94990903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9457954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98699385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93353915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97461456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9186232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98950416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9709793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99274445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97676367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96321803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96806383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98815167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9829746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9837142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9382457], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99951106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9609116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94583803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99571943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99898994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97948325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94364876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8163337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99296325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99991053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7588382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9586199], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.12301274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9445424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99144363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98793334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9614771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99514216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97396487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99983585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9703502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98799646], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99127465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.88075763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9469035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9645993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9284037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99333143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.934606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96224093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99073416], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9870253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9737396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99263185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98273855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9723115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98245883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9934286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99291724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9830366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93469155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9951201], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.30241245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98670524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9931227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9815188], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9737659], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97826296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9778481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.987218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9787588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99575335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9998812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.998748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98737276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9557829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9635071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98172903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9871699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9620211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.983023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9960793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9756303], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9658777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9943464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9859377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99511516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99143624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9842157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.965992], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99586916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9634904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9607974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99527705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97466177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98511964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98714674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98054993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96479917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9596876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95537984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.19744776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98468167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9862819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27680686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99969393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99600905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94290745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99174446], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (54,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 27500, 'query_cost': 0.0, 'learning_time': 3492.788154126203})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__54.pkl


ONLINE LEARNING CYCLE 55

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 223008, frozenset({LightInCell(?x0:light, ?x1:cell)}): 27876, frozenset({LightOff(?x0:light)}): 27795, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 27876, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 223816, frozenset({LightInCell(?x0:light, ?x1:cell)}): 27977, frozenset({LightOff(?x0:light)}): 27896, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 27977, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 224624, frozenset({LightInCell(?x0:light, ?x1:cell)}): 28078, frozenset({LightOff(?x0:light)}): 27997, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 28078, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 225432, frozenset({LightInCell(?x0:light, ?x1:cell)}): 28179, frozenset({LightOff(?x0:light)}): 28098, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 28179, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 226240, frozenset({LightInCell(?x0:light, ?x1:cell)}): 28280, frozenset({LightOff(?x0:light)}): 28199, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 28280, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 280 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 28000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss: 0.00000, iter: 15000/100000
Loss: 0.00000, iter: 16000/100000
Loss: 0.00019, iter: 17000/100000
Loss: 0.00154, iter: 18000/100000
Loss: 0.00000, iter: 19000/100000
Loss: 0.00000, iter: 20000/100000
Loss did not improve after 5000 itrs, terminating at itr 20730.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9311972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883159], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98092794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9716575], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9908902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96299464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98263764], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9363366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99987924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95166904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99238694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10257871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96299356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98589426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47129226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9462257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9769358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98245645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99947655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9589626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97358286], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.463172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95848155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9640466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9645577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99603486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9636537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96570456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96911025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98762125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9351673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9734301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99922365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99267983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99241954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99136597], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9815277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98540854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99174577], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9962022], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99616855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97467065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99206173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98598397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98745275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99130315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9363551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95881796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9697572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94674873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9279753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.953924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94620985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98048806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9492641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93638694], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99580914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98837954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.29873812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98441976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9576789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96679115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8832559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9584463], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99583644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9783877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9858834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99052286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9917698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97987247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95599574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9976185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95808536], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.91291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9649299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9894228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9843569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9423511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99493885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.72217953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99120253], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99271464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9419162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99684083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99797493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99238354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9286793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99687713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9501523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97531676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99324805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21231574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98893654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99153054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94336635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95758647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9715964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96304715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9649526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9517899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98660207], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97824734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98459893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9786266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93479955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.970449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9558449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94253826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98760766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998137], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4170064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745649], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36740378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96302223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99311185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9521625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99184835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95209396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99542844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99413717], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99572325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99516034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9638213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99258995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9524685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9332635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99712896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.960865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8567145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9737946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99366236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9539703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.862555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6375572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97166127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9677837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99611884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9518128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.357017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98762864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982069], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9755185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9672763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.10714611], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99802816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9513306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99930596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9709769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89837366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99894583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97248435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93037516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92384225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9490719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90696156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99703795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99701107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9525943], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98784035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98918015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99261916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98162943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9608109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98226535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99731296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9731332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99374056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9890051], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99955726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96484566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9988622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9771584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.981921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99833417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9991818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9898747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98794085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9992279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99770266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.999159], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99593323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99846584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99981576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99848235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98036605], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946832], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9727578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97735274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97564906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99596936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9999826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96787447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9906291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9899922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99274653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9871558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99624413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99852544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98164654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9557951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9831833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9993507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95960057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96333635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9731517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9841515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.91968304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9652939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98370975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9776522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98997045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9967112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9907293], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (55,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 28000, 'query_cost': 0.0, 'learning_time': 3627.6614141992177})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__55.pkl


ONLINE LEARNING CYCLE 56

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 227048, frozenset({LightInCell(?x0:light, ?x1:cell)}): 28381, frozenset({LightOff(?x0:light)}): 28300, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 28381, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 227856, frozenset({LightInCell(?x0:light, ?x1:cell)}): 28482, frozenset({LightOff(?x0:light)}): 28401, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 28482, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 228664, frozenset({LightInCell(?x0:light, ?x1:cell)}): 28583, frozenset({LightOff(?x0:light)}): 28502, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 28583, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 229472, frozenset({LightInCell(?x0:light, ?x1:cell)}): 28684, frozenset({LightOff(?x0:light)}): 28603, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 28684, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 230280, frozenset({LightInCell(?x0:light, ?x1:cell)}): 28785, frozenset({LightOff(?x0:light)}): 28704, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 28785, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 285 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 28500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00433, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7359.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98516774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99922776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9684786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9694395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9688048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97056305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9677185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95586467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98833704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.961491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98573345], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98079026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9856945], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9906533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99133974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99778754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96087587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9994568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13951254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95826966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9736682], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9269508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9667334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9768821], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95917916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9733434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98869574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.59492236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99595183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9435492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99180305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99378175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.57236695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98599255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9459497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95454055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97585636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9742521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997951], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9842961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9969018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99350893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9773569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98869234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99459636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9368618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9878804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9939236], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9750996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97515917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95738524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98741394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9659522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60161626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8976731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99684215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9225599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9520283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9549453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99379635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99308467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9843001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9500553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9776294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9347382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97467417], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97053593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9748157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98062664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.970206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96963376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99096364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99013776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99990964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92681885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9705681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99879223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99707997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97700113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9611503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99725026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99903685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95767593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99402446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99620277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9583576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804007], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98494136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9757306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99601275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.35062313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95785934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97326124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9666448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99217904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96733123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99069905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97044116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99807566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9393162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.977868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9540762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98768556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9763664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99240726], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99089223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9693714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98420197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99110687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98311424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99950904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98376274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911721], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98914737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9843226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97500473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.982394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99133134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9361873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94823056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8750304], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9699773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99668115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97889477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96529216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9477133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98458505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.81393695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94753593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96221924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9091002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99829215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9758618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98587304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9744509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98182124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93026596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98983663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95675594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9616174], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99968696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95249486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99941593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9724771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98963857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9454997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99751216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91076976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9712587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9575925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9758788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99559283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97060716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973766], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9852769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94156045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9910606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98064], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96097696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9612814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96577626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98895746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9592646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99924916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9778952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.21355666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90593696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08772005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21637727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99511033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9338423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9750265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97370315], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99337536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98489594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9920478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96438634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9749538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97581875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98877406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97542644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99447316], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9765378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96983755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99683964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99627554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9637614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9625049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98960567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99056214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9670552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9780639], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96025085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99589735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97781026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9768017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9736329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9760731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9699044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98540473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9684293], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (56,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 28500, 'query_cost': 0.0, 'learning_time': 3741.2906989472103})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__56.pkl


ONLINE LEARNING CYCLE 57

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 231088, frozenset({LightInCell(?x0:light, ?x1:cell)}): 28886, frozenset({LightOff(?x0:light)}): 28805, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 28886, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 231896, frozenset({LightInCell(?x0:light, ?x1:cell)}): 28987, frozenset({LightOff(?x0:light)}): 28906, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 28987, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 232704, frozenset({LightInCell(?x0:light, ?x1:cell)}): 29088, frozenset({LightOff(?x0:light)}): 29007, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 29088, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 233512, frozenset({LightInCell(?x0:light, ?x1:cell)}): 29189, frozenset({LightOff(?x0:light)}): 29108, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 29189, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 234320, frozenset({LightInCell(?x0:light, ?x1:cell)}): 29290, frozenset({LightOff(?x0:light)}): 29209, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 29290, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 290 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 29000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9994.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9613735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96833897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.39226615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9505628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9754578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99275297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99593866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9520048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9700243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99713033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96550447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98126435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96809316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99921167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98946804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9748262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99756545], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9541723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5719591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9479622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9749832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99688447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921619], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9982762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9438045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98131883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9687303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97059727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98254156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.955183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9502636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98498195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9307856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9796073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.995307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9946434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98769623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98256046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98564065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9741592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98457956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98484504], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99758095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.969419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96690494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.951392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97340447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.965089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94125843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96952957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99517316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98388654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98765963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99597585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99954545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9644718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99496967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99799144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9783373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17372732], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20531635], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970621], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9964473], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97262985], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99967486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.1762989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9925954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9721239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9693889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99070364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9986232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99463445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.3929692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9347541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97887737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9714889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9724743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.91907805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96884894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98534185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.990002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9806451], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9967148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9978659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9795921], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99265474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.978201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9630767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9283488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.967564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96927524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99593896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99340785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95145065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97599447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98493993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9596357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97696626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9579051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99790335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95552725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99815637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97308296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98723036], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97621524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98429734], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99740964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9416934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99506545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99238664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98608255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96713567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98963916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99685174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98715174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97294724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9776626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95300835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97330445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9629496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9632692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9547746], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845884], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99951726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98911285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99896777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99715495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9961517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9608111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9807442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9925317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99767655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99107015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9970398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9865486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96499085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9871415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99518055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9997541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.984136], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9667033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98435074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98523635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99945974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894977], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96950984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9664837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9717767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95297176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92242706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98900557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.979114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99239326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99571234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97245365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.968194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96793187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98166513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9466478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96494234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94415265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98635143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.958266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9355256], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9554192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99788016], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94819474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9824874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9672946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9999056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9639839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9841441], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99543315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9990631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99916065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97109306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9504532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93907076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95645505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9823594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9768329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99598235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9982258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97707516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98913485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9973131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9733124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99796754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9776904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9404604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99497974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9948046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98719853], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9647518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95193714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99667907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8915952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98521453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9426117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.36933437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9750668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97608393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9763626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99748045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99462867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.970854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9781453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9469791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9784701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985529], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (57,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 29000, 'query_cost': 0.0, 'learning_time': 3861.134440736205})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__57.pkl


ONLINE LEARNING CYCLE 58

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 235128, frozenset({LightInCell(?x0:light, ?x1:cell)}): 29391, frozenset({LightOff(?x0:light)}): 29310, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 29391, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 235936, frozenset({LightInCell(?x0:light, ?x1:cell)}): 29492, frozenset({LightOff(?x0:light)}): 29411, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 29492, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 236744, frozenset({LightInCell(?x0:light, ?x1:cell)}): 29593, frozenset({LightOff(?x0:light)}): 29512, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 29593, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 237552, frozenset({LightInCell(?x0:light, ?x1:cell)}): 29694, frozenset({LightOff(?x0:light)}): 29613, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 29694, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 238360, frozenset({LightInCell(?x0:light, ?x1:cell)}): 29795, frozenset({LightOff(?x0:light)}): 29714, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 29795, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 295 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 29500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00002, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss: 0.00000, iter: 15000/100000
Loss: 0.00000, iter: 16000/100000
Loss: 0.00000, iter: 17000/100000
Loss: 0.00000, iter: 18000/100000
Loss: 0.00000, iter: 19000/100000
Loss: 0.00000, iter: 20000/100000
Loss did not improve after 5000 itrs, terminating at itr 20953.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9862401], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99621105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98898387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99811625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9625915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8909506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97461104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98796815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97520477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99671376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99628514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9710292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98305047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9484173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98827624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98006594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98284096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9726548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9462863], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909141], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9571881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99458796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96359885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98653036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.22193679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97846705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756751], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98583513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9634928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94004756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98336965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99675584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97093123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90055895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97344524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9762403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98089486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97761863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99696666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.975235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9446627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917591], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99462277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9693522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99443364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99686384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99621934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99187255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22720982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9445371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99444616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96939266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9583953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9478554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99395066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96795064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99578154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9085172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9668263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97059083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96502334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987054], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99545026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94072926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98539245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9744717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96299094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96537113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9655432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98710597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9628611], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96183956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9077424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99447525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9647842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97475654], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9650091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98077637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95967543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95168746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96874017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97770756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3218055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9627175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9002218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94733596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99242604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9731868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99273235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96484494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99052167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98295546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99818546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98502606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9665209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98878926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97615755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99726844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796067], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9483185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98337454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96627235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99060136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91577435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99172693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99532676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99839073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99188393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99745125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99150634], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98352015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9561773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8991472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96702385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91578215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906035], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9620142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99107176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9705037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9640546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99819976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9444762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9235482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99550223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9843111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99950475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95947933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9664741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9645239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92848665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29209885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9814133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98870444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97148204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99589807], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98085886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9583804], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97733706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9802274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971296], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98861223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.997591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99899465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9372225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9734708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9774047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9972519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9971076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9663812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98757786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99688387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9873952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96993214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97999775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9800669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9638931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95799637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9544237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9972428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.983579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9675887], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99434054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9549293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99173427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96908087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99960166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98430187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9788834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97801965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99860764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96884394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94597286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9516975], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99057734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99033654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99082196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99086475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9542421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93792343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94467837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9757939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99963456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94140553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9430315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96943843], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9126427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.965889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9824402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9863739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9770502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9495026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95085293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9946391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98589724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9713536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.974703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99732614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9989874], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (58,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 29500, 'query_cost': 0.0, 'learning_time': 4001.0037521062186})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__58.pkl


ONLINE LEARNING CYCLE 59

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 239168, frozenset({LightInCell(?x0:light, ?x1:cell)}): 29896, frozenset({LightOff(?x0:light)}): 29815, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 29896, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 239976, frozenset({LightInCell(?x0:light, ?x1:cell)}): 29997, frozenset({LightOff(?x0:light)}): 29916, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 29997, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 240784, frozenset({LightInCell(?x0:light, ?x1:cell)}): 30098, frozenset({LightOff(?x0:light)}): 30017, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 30098, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 241592, frozenset({LightInCell(?x0:light, ?x1:cell)}): 30199, frozenset({LightOff(?x0:light)}): 30118, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 30199, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 242400, frozenset({LightInCell(?x0:light, ?x1:cell)}): 30300, frozenset({LightOff(?x0:light)}): 30219, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 30300, frozenset({LightOn(?x0:light)}): 81})

Learning NSRTs on 300 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 30000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00004, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss did not improve after 5000 itrs, terminating at itr 14114.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94729894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96216446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98405313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.977358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98464566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9464722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97638357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99584943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9776259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96229327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.44057614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.583924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861441], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836128], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99914193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9862611], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97175395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9568461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9427619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94483495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98606265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99472326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9783065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99813163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98186624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97462636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5241704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99960613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97850716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9698862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99313486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97791123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97784346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994302], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98623264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9902771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9825156], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98667026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.975153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9625372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95096797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99358064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99154675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99765354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9675709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98708814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9504853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9790908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98645884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99402404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99505764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9457049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93429744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99002415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9528038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98594403], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97527486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9386402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98723257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99767447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99573517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9771624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99610406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9674982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98965394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92063016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98038083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9650634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98143476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98045176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95680034], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39425942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9232018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9735591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9631068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9785906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9508098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98681104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9040169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94350094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92394644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97585356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95315236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97779834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9785734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99655795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98443407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99073565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99616194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9376145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9517561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846468], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9714437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99280643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9781092], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9783304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8551372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875189], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97630167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.949115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99583286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98881334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98706514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99775755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94528836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9708195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97476006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9587683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9819413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99541795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9755459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988199], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99411565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98222476], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98318774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9817205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99209905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99312425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9756732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9873882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9981183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9933506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98715585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98869246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9925005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99220985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9915841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9739128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9818976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99748546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98474026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9984415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99557745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9738789], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99632716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9799456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9718404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93895197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9532454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29050463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96706456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96457386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9708988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91388184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98438877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02043385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97695684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99850637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9549909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8912842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9513318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98874915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9450226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99658537], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98279923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99227506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99098873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97513956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99791133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7426134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99272275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9503026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99029756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99568003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99334246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9647514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99828726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9607153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96841997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97393256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97254467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.888845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9280248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9718585], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9594668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01047127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99058294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98832434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97791976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99401385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97699225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8968184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98267466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99419284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9611748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9748646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99971795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9671638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9788762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99363494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9611021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98205525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99847037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9769426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97907287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873861], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (59,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 30000, 'query_cost': 0.0, 'learning_time': 4131.427158367238})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__59.pkl


ONLINE LEARNING CYCLE 60

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 243208, frozenset({LightInCell(?x0:light, ?x1:cell)}): 30401, frozenset({LightOff(?x0:light)}): 30320, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 30401, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 244016, frozenset({LightInCell(?x0:light, ?x1:cell)}): 30502, frozenset({LightOff(?x0:light)}): 30421, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 30502, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 244824, frozenset({LightInCell(?x0:light, ?x1:cell)}): 30603, frozenset({LightOff(?x0:light)}): 30522, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 30603, frozenset({LightOn(?x0:light)}): 81})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 245632, frozenset({LightInCell(?x0:light, ?x1:cell)}): 30704, frozenset({LightOff(?x0:light)}): 30620, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 30704, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 246440, frozenset({LightInCell(?x0:light, ?x1:cell)}): 30805, frozenset({LightOff(?x0:light)}): 30721, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 30805, frozenset({LightOn(?x0:light)}): 84})

Learning NSRTs on 305 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 30500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9636.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93987775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97094786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98879296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94125193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99447906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99274504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99000275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9749163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99427575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9074977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99310243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94086987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9409278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94288903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99879706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99146056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97793776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9579025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93783695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99175566], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99470425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99471414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99982613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99624723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95365447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9768952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9802392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9790706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99707663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99572057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97237426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9720441], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9755096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97808635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.956374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98931706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9708863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99436], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98432744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99643624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98657066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97554344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98248184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98322207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94321764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93225557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94422877], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99470615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9720034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98223865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96491027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98393446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9702893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98273546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.939096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99596524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99313504], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98988914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99130046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95818686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98614407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9268553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9639386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.979914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.80315685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9443222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98125446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99399924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99822813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99526006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98542494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99841446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97907746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78551275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96526986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99322826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95035505], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99967253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98811513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99369454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99798495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96447784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97250324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.975799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946844], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8981414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96333057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91891354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9119328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97465926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99831986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99807644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96670675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98569304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9700036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98099566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953052], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97304595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98292494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98394823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99920595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97333366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97425205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99684733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9488484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98427516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98981524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99139315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99665475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95204407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.47907966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95342934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9647762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98892504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99111444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99078864], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9543085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99669385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9685082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9780997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9758259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9647521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.976253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98612565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9772594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95892966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98947513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97367984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9778024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9645613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99630755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9676464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97761095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992421], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98682153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97085655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95957077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98040074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99600583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9550907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98540455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9474737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99744654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98082614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9544414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98846424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9718458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99640715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994755], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98804474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99480844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99279785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94669485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96087635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9607024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9620211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99246556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98911715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99955446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99627703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99576926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836371], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9996332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9746649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99821174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9974218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98741984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9720303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95636904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94522053], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9731717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99217993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99261343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.964871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97913635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97678286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96317184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99591416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9406485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973869], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99818623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98318887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.06934015], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99024916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96170825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9902063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9887771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95723826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9974232], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9721768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97121346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95607793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99287844], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (60,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 30500, 'query_cost': 0.0, 'learning_time': 4255.882790608215})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__60.pkl


ONLINE LEARNING CYCLE 61

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 247248, frozenset({LightInCell(?x0:light, ?x1:cell)}): 30906, frozenset({LightOff(?x0:light)}): 30822, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 30906, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 248056, frozenset({LightInCell(?x0:light, ?x1:cell)}): 31007, frozenset({LightOff(?x0:light)}): 30923, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 31007, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 248864, frozenset({LightInCell(?x0:light, ?x1:cell)}): 31108, frozenset({LightOff(?x0:light)}): 31024, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 31108, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 249672, frozenset({LightInCell(?x0:light, ?x1:cell)}): 31209, frozenset({LightOff(?x0:light)}): 31125, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 31209, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 250480, frozenset({LightInCell(?x0:light, ?x1:cell)}): 31310, frozenset({LightOff(?x0:light)}): 31226, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 31310, frozenset({LightOn(?x0:light)}): 84})

Learning NSRTs on 310 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 31000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7606.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974721], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96408325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9753739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95542514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99657166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9566153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9312558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9361714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99440575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9550435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93440574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9470661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98414904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9793346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99424803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43049002], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9917058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93127036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9885122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9956138], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99124503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98521525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96805346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9699696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99096024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9568007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9556886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96229404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99890214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95003766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99630105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9363271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858951], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.30290964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98470443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99728155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96825314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19367224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9642477], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97831076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96521163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97321886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99694186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9566864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99517375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9116867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9549881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98022574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99512625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96204835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98133826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9738072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99944943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99487907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9712866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96717775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9775442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96026766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99850947], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893109], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9979799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9224175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98946995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94895715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97032976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98958504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9743072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97314006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9877914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9842541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99196327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9547591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9863759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9967667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9996451], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9818125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9640087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97517323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9926481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9885931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9942367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9869467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9311945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9975752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97850657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99989426], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9689199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96257645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98921126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92333364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.947477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9621772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857113], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96191067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9661968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99880475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98262495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99642205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9671382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96607506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97675496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98950404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99123365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98661196], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99738884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9343623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98961765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9563538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9520507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94750166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98643976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97767526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99247056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9685843], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9484999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99692845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942728], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98905146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94715554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9476762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99773484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835518], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99625534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9820574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95640206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98901653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96105075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9763021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97707486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99841154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9786645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99554855], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9972413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9947317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99156135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9844458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9770271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9743375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93920165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9923239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9951076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.91309965], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98013896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9247584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97838247], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99455476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9714624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99395925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99197906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6592725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99607515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9971285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9872812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9885647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9863248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9250029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9883003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99346334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97287685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98430425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98823035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9843455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.994647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.932765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1144491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97896415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9784132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9914922], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99473715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97772497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9639734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9932787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99663407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9805275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9639053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98906463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9873186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9302289], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98729134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.956439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9981157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.954469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93614215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99806696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9769956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9941209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98878056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9582632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99573696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99038184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9790065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9704035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99829257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96776074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99395937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99474615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.08185485], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756691], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98605365], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.966308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9857836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9748388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9705367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9621262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9786367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98885614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99890316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9877456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9796248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.961315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9722206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9808535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9958519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9927999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9602066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.93915683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98821783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.968681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9804538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96052414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9842833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9903811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98942816], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (61,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 31000, 'query_cost': 0.0, 'learning_time': 4379.393676840235})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__61.pkl


ONLINE LEARNING CYCLE 62

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 251288, frozenset({LightInCell(?x0:light, ?x1:cell)}): 31411, frozenset({LightOff(?x0:light)}): 31327, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 31411, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 252096, frozenset({LightInCell(?x0:light, ?x1:cell)}): 31512, frozenset({LightOff(?x0:light)}): 31428, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 31512, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 252904, frozenset({LightInCell(?x0:light, ?x1:cell)}): 31613, frozenset({LightOff(?x0:light)}): 31529, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 31613, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 253712, frozenset({LightInCell(?x0:light, ?x1:cell)}): 31714, frozenset({LightOff(?x0:light)}): 31630, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 31714, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 254520, frozenset({LightInCell(?x0:light, ?x1:cell)}): 31815, frozenset({LightOff(?x0:light)}): 31731, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 31815, frozenset({LightOn(?x0:light)}): 84})

Learning NSRTs on 315 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 31500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00338, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6478.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.967472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94634867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9494544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.932997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9554946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97173166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9512472], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4868749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9718651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98058665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9327526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99722064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9730928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92103255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99649614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99782014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99499464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99356204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.39134544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99698275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9673674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9521538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98638475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97642666], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99164605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97700894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8888426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99088854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9532442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96310693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99577725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9749371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96935797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99176204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96596587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9769622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99170136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9577724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.979457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9718792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9183428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99830616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99693686], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.21983503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9954195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.984164], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9331637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99153274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97204036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9632731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98752123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99555784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99600285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9594598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9742863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96562815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95415133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9580442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99316406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99650496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9676007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6666217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9814538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98911494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98533064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97694486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97361445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99462533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98586845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795247], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10977504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9729951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99496037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97244126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9144576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9671435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98498595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9637051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9776817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97374016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99015355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9543169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96560144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9765939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97794247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97070545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866119], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9609478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98677546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98781615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98430187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9263061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98887944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99109787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9650277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97754335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99926245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99105895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99540615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.978667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96413153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9624597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9679354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97633016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99191546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97269773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959354], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99505436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98926157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96310294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9720375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9589107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980751], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9764111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9279469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99902385], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96573424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97681016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9634549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98885894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9615697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97088224], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97325844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9602236], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97783864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99908805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99115634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.958945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97918534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97004986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93142515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97728586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92595756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97553825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99021274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99603295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99540293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9062519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99544066], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99175185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96050435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97219294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99194527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9740367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.948782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99915016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99121356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97848123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92889947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97470975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99541146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97227186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98163813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99436885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9779723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99620855], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99100655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94174284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99923205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99510765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94204205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96947503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99637806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96022266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98163974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96848816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9641618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99644786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94406813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98296213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95509577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98751086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809833], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9735182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9709126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9335677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.89693654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97829294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99387354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99302274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95129406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9678833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99742883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98647773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.956258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96146613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97714776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99262947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97976214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982189], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97780824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99341094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99573416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98806715], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (62,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 31500, 'query_cost': 0.0, 'learning_time': 4501.648659728235})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__62.pkl


ONLINE LEARNING CYCLE 63

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 255328, frozenset({LightInCell(?x0:light, ?x1:cell)}): 31916, frozenset({LightOff(?x0:light)}): 31832, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 31916, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 256136, frozenset({LightInCell(?x0:light, ?x1:cell)}): 32017, frozenset({LightOff(?x0:light)}): 31933, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 32017, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 256944, frozenset({LightInCell(?x0:light, ?x1:cell)}): 32118, frozenset({LightOff(?x0:light)}): 32034, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 32118, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 257752, frozenset({LightInCell(?x0:light, ?x1:cell)}): 32219, frozenset({LightOff(?x0:light)}): 32135, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 32219, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 258560, frozenset({LightInCell(?x0:light, ?x1:cell)}): 32320, frozenset({LightOff(?x0:light)}): 32236, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 32320, frozenset({LightOn(?x0:light)}): 84})

Learning NSRTs on 320 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 32000 datapoints
Loss: 0.00292, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7124.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9743018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9730771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.897159], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.05507247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99513423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95836973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9109857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99880344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9743588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9575062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99699426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9686032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95807123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9257078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99114907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9657422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99162805], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9775849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.23317465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99565977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95254576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98331976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98714215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97190577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9725917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99562263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98418456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98635495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9788576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98222977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96501726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97590244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9602145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99524134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93369323], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97384155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97667354], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99910116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9341835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9718723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9588423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9570615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9753827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8126368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89953417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98545575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9621774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99601626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99863034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9622066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99189824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95507246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8951628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93012995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99851775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95437694], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99560845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96364254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98499167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94976586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965467], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9818309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99497944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9396416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99736965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99919784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9803335], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9762036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98952264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98336345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99910563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98307973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.900117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99455315], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98684436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99130124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9884852], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912179], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99545425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99002874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99409693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99597627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93737185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94995236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94801676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99633527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9174826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99415815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9837857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93709624], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99298936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98185104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.917272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98227537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9571854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95348424], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98609936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9688807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91680545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9731716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95038587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97665465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92229855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99208283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96389747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98512864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9539571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9695009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99595225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.03407755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97956586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821611], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97759026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99691546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98504657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876619], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94846636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99305534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9746015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9403737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97270644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99738896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99035686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96642345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99702024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.80862963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99530905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95654136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96622026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98097354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98914456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.87142354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9757081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98360324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963401], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98201036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98014355], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9739201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8903556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99891704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98979324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9494806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78405654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97182506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.24406722], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99507076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98160636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9980102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9843865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9526625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98849547], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9614488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7135406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99394345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90404147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97334766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99344045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96062034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99078906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9637712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923917], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9805203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97311974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98862386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.934767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9501463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9799446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95415914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9314461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9792588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9723443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9438446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.979487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99693054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96752083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99761665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9724239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9596098], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9941519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97937745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9509965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97041875], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99773496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9775294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98342043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95583344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98316604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98635274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95401543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96708995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99965173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94656014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9707015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809957], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7302584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97930014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9830185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97986597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9631521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99859565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850017], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (63,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 32000, 'query_cost': 0.0, 'learning_time': 4628.367048366228})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__63.pkl


ONLINE LEARNING CYCLE 64

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 259368, frozenset({LightInCell(?x0:light, ?x1:cell)}): 32421, frozenset({LightOff(?x0:light)}): 32337, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 32421, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 260176, frozenset({LightInCell(?x0:light, ?x1:cell)}): 32522, frozenset({LightOff(?x0:light)}): 32438, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 32522, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 260984, frozenset({LightInCell(?x0:light, ?x1:cell)}): 32623, frozenset({LightOff(?x0:light)}): 32539, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 32623, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 261792, frozenset({LightInCell(?x0:light, ?x1:cell)}): 32724, frozenset({LightOff(?x0:light)}): 32640, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 32724, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 262600, frozenset({LightInCell(?x0:light, ?x1:cell)}): 32825, frozenset({LightOff(?x0:light)}): 32741, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 32825, frozenset({LightOn(?x0:light)}): 84})

Learning NSRTs on 325 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 32500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00199, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5420.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98764616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94536453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99930227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9662773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96296334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99062145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99143517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99313897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98340994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6586048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38627538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99850875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.977174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11724283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900964], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97103274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98219657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9557046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99309355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9941269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97721744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97003776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9803197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9747935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9696756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9892823], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97544134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99410665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97682846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9682229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99520254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99764025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97490317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9786907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92917705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9616908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98801064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9443223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9637129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98837954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9722322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98694694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95378125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95940214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.301228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97899073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96239245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96521235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99382436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9741214], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9629624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99859065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98981494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98288417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98208594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9603307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99838513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9585518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98759335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97674626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00965658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99902487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98936224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97739387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94725037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9710639], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9663237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9393295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95812625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963174], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96562916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9728827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98273087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9510381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9784369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98122215], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9936018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7724105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9993034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95341533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9871958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9977467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97841614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.02974109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99714077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9744554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99519116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9979573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99561346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.90568197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98653877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9877049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9989892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98601633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9963777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9559274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9980315], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99432534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98163795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99208254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99686205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98317856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98967785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96415585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90746474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.978917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98588455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96911764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9320707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97698367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93143755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9663794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96556306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95963436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97455376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9753256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.959673], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.976944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99614286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93889505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95044655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9750507], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99923986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9682152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99284816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99443793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9128674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815827], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52199876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97475064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99863297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99958557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48079875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97691816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98653394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99189955], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.956578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99733466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9709215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98067415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93070036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98480856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9726992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98751336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98256445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99758464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90905654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9353712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9641217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9472719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9593417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99523824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99273694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9430294], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9288279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99377877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98074555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99138314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99376655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97276443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9194907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9734462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98579127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.910766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98295265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98168576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98957807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.974293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90788347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96745545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89129853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914302], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97046655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99495894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96106356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98765254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8761949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98399675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98670226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99098754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.979866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96200514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9772443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9654842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98653144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97968316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98498565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9715299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9678176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9398652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99796987], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99364245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99997586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9618536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98567235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9507332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96169823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99347615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97637653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96870244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96083605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98695713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96299076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96434224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99300414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9760749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99940497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9670666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99673533], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (64,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 32500, 'query_cost': 0.0, 'learning_time': 4753.25502641825})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__64.pkl


ONLINE LEARNING CYCLE 65

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 263408, frozenset({LightInCell(?x0:light, ?x1:cell)}): 32926, frozenset({LightOff(?x0:light)}): 32842, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 32926, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 264216, frozenset({LightInCell(?x0:light, ?x1:cell)}): 33027, frozenset({LightOff(?x0:light)}): 32943, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 33027, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 265024, frozenset({LightInCell(?x0:light, ?x1:cell)}): 33128, frozenset({LightOff(?x0:light)}): 33044, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 33128, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 265832, frozenset({LightInCell(?x0:light, ?x1:cell)}): 33229, frozenset({LightOff(?x0:light)}): 33145, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 33229, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 266640, frozenset({LightInCell(?x0:light, ?x1:cell)}): 33330, frozenset({LightOff(?x0:light)}): 33246, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 33330, frozenset({LightOn(?x0:light)}): 84})

Learning NSRTs on 330 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 33000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8879.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98418635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902189], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99244606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99401325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998293], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9504444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9894827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99802816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9857648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95324486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96999794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9340662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9935615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9990576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9963714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98368734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9992491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99122655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9998298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.951572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.968696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9929457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9216351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94965035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98789954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9944198], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99990815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98953104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99933964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.63724065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99920666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97182494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9551626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98839605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9589427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99105555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9681492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99106073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9664189], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96710014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9566297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9731208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96929646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99452627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99794805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95654434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99324363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99511015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95023316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99917436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9650903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99796975], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98979795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97187126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99152434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37343076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9679188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9553276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98536795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98447305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97580296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95166016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967721], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97714293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97872794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99313575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98964006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95865124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99140084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96687615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97674036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95636857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98700666], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9620865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19053827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9843834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97867125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84454226], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9686029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9990469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98800826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9485506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9991681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98408806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9863676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9859467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99986064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9838341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9951693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9672601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9958492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9605582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9847623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9804576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95723397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9642106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9949955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9900621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99507284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9949638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92268133], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98116827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96742046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96858156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97724724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95330685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99786156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99396956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9770165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99648356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98441494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99580485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9771269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99770504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.939043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96762097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9755696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97725683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98546296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93166625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973817], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99986875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99875987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99923235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9600868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91450804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9619267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9786868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95793784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9710435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.02506578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99418914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92378545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95609546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99614364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99608344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99691635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95006335], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97381616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9810786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.05379523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9738178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94649136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99429524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.963981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9712017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99770683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38186148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99799633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94297785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99515164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99079734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9692491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9516172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98524684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9713349], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97254354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98853946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96484804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99776304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98290896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9792088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9464115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96375656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9772314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99802977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98109305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.979813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.968515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95257634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5234902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93249685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96226865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99206746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9797832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9530843], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9990814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9868046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9867595], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98873174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90559906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94669837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97822136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94940096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98495734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99446815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99994063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9656251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98635596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97161925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93532896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99819183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93061566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9623588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99508214], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98313403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99419886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98799914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96412337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99043703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97194684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97075725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96458524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96561575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98880726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99585986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9617142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97301066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91816974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99647945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98914105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98910505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.27710727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9388529], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (65,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 33000, 'query_cost': 0.0, 'learning_time': 4886.151261794264})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__65.pkl


ONLINE LEARNING CYCLE 66

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 267448, frozenset({LightInCell(?x0:light, ?x1:cell)}): 33431, frozenset({LightOff(?x0:light)}): 33347, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 33431, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 268256, frozenset({LightInCell(?x0:light, ?x1:cell)}): 33532, frozenset({LightOff(?x0:light)}): 33448, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 33532, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 269064, frozenset({LightInCell(?x0:light, ?x1:cell)}): 33633, frozenset({LightOff(?x0:light)}): 33549, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 33633, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 269872, frozenset({LightInCell(?x0:light, ?x1:cell)}): 33734, frozenset({LightOff(?x0:light)}): 33650, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 33734, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 270680, frozenset({LightInCell(?x0:light, ?x1:cell)}): 33835, frozenset({LightOff(?x0:light)}): 33751, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 33835, frozenset({LightOn(?x0:light)}): 84})

Learning NSRTs on 335 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 33500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7876.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993611], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98703784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9715168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99630237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94519347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9568422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96872646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9624944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9707758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9843026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.925101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9398819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99967676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97439724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97693574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9211136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9655195], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9730516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93873316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9268381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98710215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9526593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98470914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.85644966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9644866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9696292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9590843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9175898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99401665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99555635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98879373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.06957255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98398423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99103117], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9705877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95906717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9643498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99942607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9550133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99598306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9808619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99936724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99784917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9203675], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.88378793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9652465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98375195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98646724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.87563246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9582407], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9819513], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9812915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97916245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99658424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.961132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.86797875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9808186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98189133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99333805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9415888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96170026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98973525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99520487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9682231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96985275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98939115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97097605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9493397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98486453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96511066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99439883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9699808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9603825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7036506], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99714196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99158996], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97807765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99426806], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98738194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93896055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96058744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9620946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95488393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99316853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97157216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9617666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99073744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9829443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13762628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983689], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98803556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98360986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9557298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996689], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851832], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99391943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99176806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.936856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99452454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9454777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94395286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9179394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99864805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97938544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17076674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99137014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9505221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99103373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97510695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99219877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9862242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97480994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9482956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99816155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9780024], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98596776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98876864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99426335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.978236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97822154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96313184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9829299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95272565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96045107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99656916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97300524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99235964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9594602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9516385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9560904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8932817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9658845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98670703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4349128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9587615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9505061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99126357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96398926], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96286637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9493247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99294245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94805753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9730607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99409354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97725976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99310404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99971837], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99402547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97849977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9581996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97661847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9963028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9887789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9895244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9676427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9692007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9942594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96560127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98842925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9996549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9886661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93771255], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9527835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9810375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99965477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98347795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.952322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9614693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97311777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99380326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99281096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99830616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9711149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98401815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9717887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99991405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93850285], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99241084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9805431], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9699393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99887735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99359053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98993886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9659618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8118774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99296373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9031686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99586755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9780142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14270288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.0782437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98541516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98770636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36856616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.17561822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98228467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7806696], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (66,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 33500, 'query_cost': 0.0, 'learning_time': 5019.142529466306})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__66.pkl


ONLINE LEARNING CYCLE 67

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 271488, frozenset({LightInCell(?x0:light, ?x1:cell)}): 33936, frozenset({LightOff(?x0:light)}): 33852, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 33936, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 272296, frozenset({LightInCell(?x0:light, ?x1:cell)}): 34037, frozenset({LightOff(?x0:light)}): 33953, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 34037, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 273104, frozenset({LightInCell(?x0:light, ?x1:cell)}): 34138, frozenset({LightOff(?x0:light)}): 34054, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 34138, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 273912, frozenset({LightInCell(?x0:light, ?x1:cell)}): 34239, frozenset({LightOff(?x0:light)}): 34155, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 34239, frozenset({LightOn(?x0:light)}): 84})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 274720, frozenset({LightInCell(?x0:light, ?x1:cell)}): 34340, frozenset({LightOff(?x0:light)}): 34256, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 34340, frozenset({LightOn(?x0:light)}): 84})

Learning NSRTs on 340 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 34000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00204, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12741.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98863566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9586636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99499065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.50566566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99453336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99383116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99916464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98546624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98292583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25581717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9772471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.655371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9632977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9587756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99870855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879257], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97929597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96505225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99368477], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99991167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9947211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97666985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9916936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9908032], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9365981], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.997627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9838708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9981981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9841017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.995875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9976556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9999382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9827363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99942565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99049455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9942241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9979098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94754964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99573034], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99825877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9642806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9688267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97320056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98586243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9469335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9537155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99808687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9639571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99590516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99285644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98984015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99562955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9779174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9679326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93725264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98176837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986152], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9581046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969161], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98104036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9852638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99300605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9917893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9928953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9764255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96974605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97431034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.961217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98441255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.970052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97480047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9781506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9850929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9740076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9743499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98754174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99268895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99891204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9911903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92561364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9954223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9603618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9743698], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.7556612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9581523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9971121], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9621673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99337476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9781631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97262853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99032813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98591137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9389993], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99627894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.973054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9550684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8590677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9770234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95617324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9783588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752707], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9092825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9785151], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98288226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9281461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97390693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98686224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9598941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98828447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.704246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9771229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9601339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9744934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99735904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94822544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9729895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9279827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98275244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98927367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99722266], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96014595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98645025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9667047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9454122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97312444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9712548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99874663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9819079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99103296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9757567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9644517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98857355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94449365], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60151017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98423594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96208936], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9843082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98353827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9570521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9813992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.918615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95584506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9730474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96909785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99347514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99475515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99401784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98258847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9698407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9771447], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97662055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9901103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.997001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9895482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9965653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9981271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9530156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9850657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9503759], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.7081327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98026395], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99128234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99534816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9802748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99913824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9729379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99944776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9665507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95796156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97540206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98223555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9668696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9479571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97826016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99773836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99657077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93781906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99645305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99355525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9591663], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9775325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99774253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99217236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99279255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9608561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9572894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24175592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97730017], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99518996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96140677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9942006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99166435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9976447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9856511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97514814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98965365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99162483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9977948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99387795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99983853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9295341], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (67,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 34000, 'query_cost': 0.0, 'learning_time': 5162.055516895314})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__67.pkl


ONLINE LEARNING CYCLE 68

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 275528, frozenset({LightInCell(?x0:light, ?x1:cell)}): 34441, frozenset({LightOff(?x0:light)}): 34333, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 34441, frozenset({LightOn(?x0:light)}): 108})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 276336, frozenset({LightInCell(?x0:light, ?x1:cell)}): 34542, frozenset({LightOff(?x0:light)}): 34434, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 34542, frozenset({LightOn(?x0:light)}): 108})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 277144, frozenset({LightInCell(?x0:light, ?x1:cell)}): 34643, frozenset({LightOff(?x0:light)}): 34535, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 34643, frozenset({LightOn(?x0:light)}): 108})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 277952, frozenset({LightInCell(?x0:light, ?x1:cell)}): 34744, frozenset({LightOff(?x0:light)}): 34636, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 34744, frozenset({LightOn(?x0:light)}): 108})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 278760, frozenset({LightInCell(?x0:light, ?x1:cell)}): 34845, frozenset({LightOff(?x0:light)}): 34737, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 34845, frozenset({LightOn(?x0:light)}): 108})

Learning NSRTs on 345 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 34500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00375, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11070.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9481774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99769664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5992923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9547752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99202204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97326523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98185635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9083902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9265538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9539202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99973214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98404324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97419363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97901076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96716315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.88293093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6424051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.944921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99670166], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995711], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98521346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9741529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99343616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99968296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2970977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.999955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9888051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9956296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97865313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98415047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.997703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9948551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9989074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9851765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9880586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94552547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9972097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95725834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9761031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9580764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.933392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.998986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98414683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.992585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92591155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97154266], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98714346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99094725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9810667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904401], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99974054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99890965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15065046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9573403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9573632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9755224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9654682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99995476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98527884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9310377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93859375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9812644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98329777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96913654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9616282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9736677], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97637093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99524283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99871093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98738945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97659856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98649466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99741054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99949443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99226797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98991513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9762091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98540306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99171764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96427196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9380564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.968292], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98809206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99966156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9631423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977898], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99948615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98358005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94582886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94259566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98807085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99668825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99107826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9819685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99044424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99404216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97350913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98850405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99249816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96793365], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91315466], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95976865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9676545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99716115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99807763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9598191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95957327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9587719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936504], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99128854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95130616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4914184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9692233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9784998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94205254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9703133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9709427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9550281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98806006], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9754944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962431], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9668933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9617484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9437099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98511463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99736565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93394744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98708975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97422725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99893355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9784881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98688906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9298174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97307086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9570987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98638695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9753357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15461735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847532], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98400545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97977096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99350697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99530035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795852], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9957034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99928147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94473654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9836792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9710225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98738134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96065134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98129344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9519563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98687863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9936586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99732196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99134594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9966336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9792434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9876079], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972456], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97075516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98633033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9618207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97223413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9697735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95980316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99034977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9551693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99960417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99049294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9762654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98702973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9742687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97131336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9735778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94612914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994175], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99955386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.941072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9705998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95378006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9611936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99821997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92341757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98882097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96261114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.943324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9785413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95537525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96161646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9654247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96043026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96457136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94759464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97344345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99363154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97128373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9123183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9830393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95259833], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (68,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 34500, 'query_cost': 0.0, 'learning_time': 5303.79005020234})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__68.pkl


ONLINE LEARNING CYCLE 69

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 279568, frozenset({LightInCell(?x0:light, ?x1:cell)}): 34946, frozenset({LightOff(?x0:light)}): 34838, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 34946, frozenset({LightOn(?x0:light)}): 108})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 280376, frozenset({LightInCell(?x0:light, ?x1:cell)}): 35047, frozenset({LightOff(?x0:light)}): 34939, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 35047, frozenset({LightOn(?x0:light)}): 108})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 281184, frozenset({LightInCell(?x0:light, ?x1:cell)}): 35148, frozenset({LightOff(?x0:light)}): 35040, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 35148, frozenset({LightOn(?x0:light)}): 108})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 281992, frozenset({LightInCell(?x0:light, ?x1:cell)}): 35249, frozenset({LightOff(?x0:light)}): 35141, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 35249, frozenset({LightOn(?x0:light)}): 108})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 282800, frozenset({LightInCell(?x0:light, ?x1:cell)}): 35350, frozenset({LightOff(?x0:light)}): 35242, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 35350, frozenset({LightOn(?x0:light)}): 108})

Learning NSRTs on 350 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 35000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9482.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95212555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9763741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98534125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9644409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92422426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99437803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99921733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96419483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816739], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5869193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04914126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91620845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99203223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98975825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9514065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970889], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98896366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.966624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98700696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2854723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99916553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8799919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99382275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99463654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9753303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9598236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.961437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9702776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98629224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98948467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9764823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99126005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9612167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.954261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99748564], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94529754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99602544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9262502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99046355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978014], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98088104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9701783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99225605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96514904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96762526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95855486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.888826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96050733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.933805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936611], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99084365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97044146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99896574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916739], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93371034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99491024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.33456162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9785087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96982825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98901975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9599735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9740211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95693195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98840714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6860578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9259687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98154044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9569728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99372023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96445197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99603057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98007745], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9907361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97987187], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96328735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42129496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99672055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.22681311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98673505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9814907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99995416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99101454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99827266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99565303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98791456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99208117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99044615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97877973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9837889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9225031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3837343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9535662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9609761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99367434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96414685], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9524236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.937618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95690495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9805997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931958], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.72085035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97993726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9513051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96874726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99467707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99634105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811421], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24346012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99700665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98360145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98174244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9615504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99189186], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99577636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1418015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9657776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9652031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95942456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94148135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95965886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9742732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99909824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841639], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9691132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99714977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93995005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99195683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9250934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99901724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99713165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9757366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98311675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9572929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99484295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9676536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9772953], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97213125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97850895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98981184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9670729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9780036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9715927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98995245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9713647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95176375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907189], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98343754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9679858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98042965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.44565845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.88847387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92162555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9741644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9683919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91504043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98541254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98822635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983319], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99665123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9491833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99487174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9755397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8899158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99799407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97105616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98042196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96990955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98640263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99572927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99358463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97873175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97870106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.974841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9195932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97573435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98485017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97809863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95674396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97481775], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98568654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96761304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99738634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94880545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99997413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98362637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99888283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9792043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96962655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99878937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9738705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99955446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99984837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9715839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99938744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804043], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (69,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 35000, 'query_cost': 0.0, 'learning_time': 5445.1234654653235})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__69.pkl


ONLINE LEARNING CYCLE 70

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 283608, frozenset({LightInCell(?x0:light, ?x1:cell)}): 35451, frozenset({LightOff(?x0:light)}): 35343, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 35451, frozenset({LightOn(?x0:light)}): 108})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 284416, frozenset({LightInCell(?x0:light, ?x1:cell)}): 35552, frozenset({LightOff(?x0:light)}): 35444, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 35552, frozenset({LightOn(?x0:light)}): 108})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 285224, frozenset({LightInCell(?x0:light, ?x1:cell)}): 35653, frozenset({LightOff(?x0:light)}): 35545, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 35653, frozenset({LightOn(?x0:light)}): 108})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 286032, frozenset({LightInCell(?x0:light, ?x1:cell)}): 35754, frozenset({LightOff(?x0:light)}): 35646, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 35754, frozenset({LightOn(?x0:light)}): 108})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 286840, frozenset({LightInCell(?x0:light, ?x1:cell)}): 35855, frozenset({LightOff(?x0:light)}): 35747, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 35855, frozenset({LightOn(?x0:light)}): 108})

Learning NSRTs on 355 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 35500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5181.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97640854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8093872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.974208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99489355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98946244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95398974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96167475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96149254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2638909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96529967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99778783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98551893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9587203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9788665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98521346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7123474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97452366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9417289], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98619807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9539117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9542917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909441], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981131], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99887794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.969159], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9708817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8422514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97474134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99807054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9594632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9702207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96988195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.982375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98018986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98851335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97760195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96808887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9239982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99977154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9072631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98561496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08925541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98453957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773111], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801701], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.32972342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99785656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97907645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97157454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9503626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99023235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9812738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99672824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992759], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99181765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97877324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9628623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.87603647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870721], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.982623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.921385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9744946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97849643], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96513045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9819664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99452966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99440396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99212974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9786575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98982924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96423125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99118567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99724734], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9906384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9594112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96718895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96957153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9961738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98741794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.23546185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99935967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98630905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99713343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9440851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76909184], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97877926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9741732], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97810876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99006206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99300796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7760072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9622691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99823976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99769825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9634535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99538624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9518844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99000037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99718493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98458827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99896175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99897546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99575263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97659516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98357433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893684], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98418146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9777868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94989616], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99707097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9591605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97850114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98961663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9779468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98653525], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94954944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9797399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9555412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9039794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92016983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97535783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9746842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99883807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98719686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850986], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93788797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98879904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945119], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3499724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98903286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9703467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98026896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99541837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.897786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99375445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98991835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.57025164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98099375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9743689], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96716636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99542266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98460555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99480224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818759], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99900126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9992826], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99641937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97642916], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9606496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9932506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98786384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9978217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9632583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99609226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9826644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99975336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99028766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9925785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94012177], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.63768023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98502517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94955665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97995716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.992199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9913262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9719275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98023725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9908318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95429265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99309385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.993596], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9890071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98652065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9949471], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97919655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9780086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99118775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9802145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99774224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94804394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97384584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95992535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98688877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962507], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99458104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98093605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9816742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9566592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9914184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9850524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.988814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9679484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9933448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9667384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9674163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9428515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9883706], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98461163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98936135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97746575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9713344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97537607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9810869], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9730747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96952665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.982935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867068], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9956011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9925663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9865224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9994261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9629365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9924394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99966127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.997869], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96930146], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (70,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 35500, 'query_cost': 0.0, 'learning_time': 5579.385476838332})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__70.pkl


ONLINE LEARNING CYCLE 71

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 287648, frozenset({LightInCell(?x0:light, ?x1:cell)}): 35956, frozenset({LightOff(?x0:light)}): 35848, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 35956, frozenset({LightOn(?x0:light)}): 108})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 288456, frozenset({LightInCell(?x0:light, ?x1:cell)}): 36057, frozenset({LightOff(?x0:light)}): 35949, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 36057, frozenset({LightOn(?x0:light)}): 108})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 289264, frozenset({LightInCell(?x0:light, ?x1:cell)}): 36158, frozenset({LightOff(?x0:light)}): 36050, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 36158, frozenset({LightOn(?x0:light)}): 108})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 290072, frozenset({LightInCell(?x0:light, ?x1:cell)}): 36259, frozenset({LightOff(?x0:light)}): 36151, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 36259, frozenset({LightOn(?x0:light)}): 108})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 290880, frozenset({LightInCell(?x0:light, ?x1:cell)}): 36360, frozenset({LightOff(?x0:light)}): 36252, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 36360, frozenset({LightOn(?x0:light)}): 108})

Learning NSRTs on 360 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 36000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12616.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92429405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9641201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.913831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9326635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95556295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96101683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99300194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9776895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98344487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9743828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99694365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96904844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97814393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99640554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99885315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99787635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9741763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97432894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991163], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9284425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96909285], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9824686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9917103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9792553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99297535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96786475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9966879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9832422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9891696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9835173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9992728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9742448], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99937105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99367964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9619136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92075455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99032134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14624728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99361604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.944805], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9628744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98268217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9603416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96088773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9690117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9617107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98638487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9706789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.79775405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96494067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9738926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99806416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98512596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99428016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97517115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95432514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99833804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9467451], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9587747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95911676], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9638675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9810382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96320957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.25881952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9500367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99730897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96413684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97094065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9805758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99681515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99063087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99837697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96182454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98615223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9607722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97953796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98601776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97609234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981033], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97576874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99122477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9763534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99773836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99664706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.32088393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98756224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9440294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98700565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9862624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9503147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97936964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99903864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9749022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99693274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97184384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9616946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99616605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888257], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96989226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99156725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99993026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99638957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92969203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96018964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99652356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9607233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97321504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9734503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99596393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99437046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9772437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99543417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92890924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99541056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98969716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9342178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9712778], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99969906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99991965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9712665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99144685], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9876434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95056087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9875448], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.972938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.978319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9670629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9971419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99907035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99451846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9868825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9386596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9992115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99557215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9765142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94991493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98891693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9987796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9941806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9944019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9795872], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99763113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99872696], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97004133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98010355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99286103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99937457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99788487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97041696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92242944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99844503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9663248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94273895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99849945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98915684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9715176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9087264], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9685082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99010205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99177146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9605293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99695075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95917326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9036882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9722173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98311746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.957198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99519306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99951905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93129027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94574875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99854285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9761606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9046568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99625236], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9505428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99837035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9665735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99375427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99740493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959451], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99996567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99964964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99364334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96640635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9550029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99686086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98893034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99140406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97194284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97834885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99571097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99231464], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (71,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 36000, 'query_cost': 0.0, 'learning_time': 5727.7572825173265})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__71.pkl


ONLINE LEARNING CYCLE 72

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 291688, frozenset({LightInCell(?x0:light, ?x1:cell)}): 36461, frozenset({LightOff(?x0:light)}): 36353, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 36461, frozenset({LightOn(?x0:light)}): 108})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 292496, frozenset({LightInCell(?x0:light, ?x1:cell)}): 36562, frozenset({LightOff(?x0:light)}): 36454, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 36562, frozenset({LightOn(?x0:light)}): 108})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 293304, frozenset({LightInCell(?x0:light, ?x1:cell)}): 36663, frozenset({LightOff(?x0:light)}): 36517, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 36663, frozenset({LightOn(?x0:light)}): 146})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 294112, frozenset({LightInCell(?x0:light, ?x1:cell)}): 36764, frozenset({LightOff(?x0:light)}): 36577, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 36764, frozenset({LightOn(?x0:light)}): 187})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 294920, frozenset({LightInCell(?x0:light, ?x1:cell)}): 36865, frozenset({LightOff(?x0:light)}): 36611, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 36865, frozenset({LightOn(?x0:light)}): 254})

Learning NSRTs on 365 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 36500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00005, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5311.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96895224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97362906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97359204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9738901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9819753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95543826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99274987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.970358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9440083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99493015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97709817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99711585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99091053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96464646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98762894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96459687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93814766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9771147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98373574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950689], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98108435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99864256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.979464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9546757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99349296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08659483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98907906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99713916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98889244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97053444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99303263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96857214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97466767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98997337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96253014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938751], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9250717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9792763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99545693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852272], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9446966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9636411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.30790642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9722944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92425925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95619875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99110615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9683125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97287536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9732914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96389365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9255199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97065073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97720224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99682206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9725182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93428195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904288], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9706584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97132045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98481965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9761302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99132085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94309366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99469054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98998106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99774396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99374914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99320143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99831045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99920595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99492437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9778616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99601156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921737], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9574305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9776592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9788577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9690507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9273811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95784634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98537624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9793661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90947974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9781175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.973482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99554265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99679816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94391567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98074996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9638894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95805645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9216261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811225], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99646163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98781925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95207846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908189], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99853414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98188126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9503111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9632999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99486953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99381554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98380524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9519243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99270356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9706638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98278284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9575382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9640076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.975197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993024], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99222636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99355775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9694625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97875977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9210987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99680424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9714656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9686285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98658264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9768601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9562093], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9999959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98577505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.990687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99854636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.954713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98477274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9996441], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9612046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9943723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9862193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6345753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99566936], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98675305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9758285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98588294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98883957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97629637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9762207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06573541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96404433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97660875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9486082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99994475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99777114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97605693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9793623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99414885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99255615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98790497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96585596], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91397476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99627715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95649475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96202505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9685818], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99843013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9912926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9849366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9064335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97916615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.993006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98533374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9961727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95514405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9944979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95819086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96030194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99306035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9919173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9602114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9752294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9521243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9733148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97533596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9815481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98937994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9238466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9947961], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99610287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9633159], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98775166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97985816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98370814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9770396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99452454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9695819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99248624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98790115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9736003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99976784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9777121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9610796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.956482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9656393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998633], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (72,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 36500, 'query_cost': 0.0, 'learning_time': 5866.456657325325})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__72.pkl


ONLINE LEARNING CYCLE 73

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 295728, frozenset({LightInCell(?x0:light, ?x1:cell)}): 36966, frozenset({LightOff(?x0:light)}): 36712, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 36966, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 296536, frozenset({LightInCell(?x0:light, ?x1:cell)}): 37067, frozenset({LightOff(?x0:light)}): 36813, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 37067, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 297344, frozenset({LightInCell(?x0:light, ?x1:cell)}): 37168, frozenset({LightOff(?x0:light)}): 36914, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 37168, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 298152, frozenset({LightInCell(?x0:light, ?x1:cell)}): 37269, frozenset({LightOff(?x0:light)}): 37015, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 37269, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 298960, frozenset({LightInCell(?x0:light, ?x1:cell)}): 37370, frozenset({LightOff(?x0:light)}): 37116, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 37370, frozenset({LightOn(?x0:light)}): 254})

Learning NSRTs on 370 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 37000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5330.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98826295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958204], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99006844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9712995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9865441], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9780039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9989738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99291694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97994655], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94791204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98920417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9609699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99988174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99406785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9101983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745651], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96663076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99325013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98690146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92401314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9906977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99626017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99912804], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98312294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96470755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9657632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9630725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99536145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96574605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98200965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99807465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95170736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9522219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9436143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9862167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99259776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9321987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99946684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98268706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99195486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9784823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9568793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9246973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9589694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9551223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9830936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99189955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99566776], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9707524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9676869], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93488336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9592113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98569083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99663657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99718755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9632397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24630953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97584456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97911453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98055714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9539087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97595537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9324741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99789846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99948835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99281335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9578718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99570626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03607004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7907931], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.904398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99952835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9714156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9514331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9240585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9477643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96084553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98221374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99615496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98718214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94432884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98716575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99757177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97481495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99562854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99849814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98201317], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99437475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96017796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9758761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9688766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9098733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99278396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98918724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9778128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99254024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99184823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96234775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95687777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96423805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.962838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9764735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9802995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98080504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948888], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97601247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943885], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98519546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9627308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99929374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9772015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99464095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9802648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98915577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98808944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9779178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9775224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99700624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99307436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99943703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98133713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99863636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955379], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99809813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.88922477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98211503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97628534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97521126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9813853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99076873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99623966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99669164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99257946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98215544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99322486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94795084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99785924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9530033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94108236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99775225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97741896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99551105], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99547243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9290109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93144846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98945725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97790825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97540796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97113633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9734431], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9537513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98050857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9689834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9661518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9539261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9707534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96638155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9600076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9610731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98659635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96530384], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9520691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99810386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99952835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95876265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9487088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99174523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9569822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99069625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98795897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98472947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.945381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95170957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9256395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99900955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97143126], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99975646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99873036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9843582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93670833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98517865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9359702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97146815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99471545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9743311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9495969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01223367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965565], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.998115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98504907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9852712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9970221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94457114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.89525485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9980144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9605612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99782205], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (73,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 37000, 'query_cost': 0.0, 'learning_time': 6007.348182732298})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__73.pkl


ONLINE LEARNING CYCLE 74

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 299768, frozenset({LightInCell(?x0:light, ?x1:cell)}): 37471, frozenset({LightOff(?x0:light)}): 37217, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 37471, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 300576, frozenset({LightInCell(?x0:light, ?x1:cell)}): 37572, frozenset({LightOff(?x0:light)}): 37318, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 37572, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 301384, frozenset({LightInCell(?x0:light, ?x1:cell)}): 37673, frozenset({LightOff(?x0:light)}): 37419, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 37673, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 302192, frozenset({LightInCell(?x0:light, ?x1:cell)}): 37774, frozenset({LightOff(?x0:light)}): 37520, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 37774, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 303000, frozenset({LightInCell(?x0:light, ?x1:cell)}): 37875, frozenset({LightOff(?x0:light)}): 37621, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 37875, frozenset({LightOn(?x0:light)}): 254})

Learning NSRTs on 375 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 37500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00213, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8663.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9494745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96971875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97108436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99377036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9501757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99824613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98103607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9720798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96583784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97649556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99390525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97292167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98139375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.18197049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99823445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99803305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9676517], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8712107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99409163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9641969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97071105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98716456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36940086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9629285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93485725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97285473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4035782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9676968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98906225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96128714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97744226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99686104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99351144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9658842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99075156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.21340811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.963367], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97859544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92373604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96125406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99355274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9819459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.975116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890891], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.57886153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95184386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98878455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96924293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9690723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99879247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9688901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98600554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99978495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99288607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818081], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901176], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9570657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.996564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9760013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9470527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94691145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9859295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9966245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97215194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9719676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95791346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9965265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9678079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99100816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93554443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.982929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9938598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9835534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98484546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93817765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9836245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98294955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9766702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9921929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98771346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98472905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9906847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9914033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9724062], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99335957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98216444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97068846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9732488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99726146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9698622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9389504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97686666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97362155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98695225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99914813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9290171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99169326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99193674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9643326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9677023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9205407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92618954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9728335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99442], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99185586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9388683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98267376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98680305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93637824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9717426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9776593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99904406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9653322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.975971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9533161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9666117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92845213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97101104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95373815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9608456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.87567604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94982225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99197626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98222286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932087], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99386716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99335796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34832793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9843472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99719423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.46416104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99332356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98791236], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9726773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9765302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9871965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9837276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9939546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99341905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9527424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.974809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9650481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96249354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9943024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9942838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9921454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97002995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97003955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99140704], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.976057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99201334], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96371746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99469775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97099775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04562385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98180556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97994536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11119619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9563047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9653451], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9571231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97804946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99837464], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9542303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9983449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.987048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98152786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9826145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9718975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96423894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99805546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9815682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9788637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9900875], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.33673123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9588519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9484358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96493804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98478395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99454296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8945131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99680954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9808482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9551433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98318654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99596775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9727137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99868554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98530185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98638195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99625885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98699784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97154707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9693688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99040556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98904383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99122214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98324263], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99897885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9645992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99470437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96849424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95077664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9387767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9554356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9379325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9527394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.966781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98354983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99403596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95262754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97890633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98906654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97899973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9755858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9682045], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (74,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 37500, 'query_cost': 0.0, 'learning_time': 6154.224473322276})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__74.pkl


ONLINE LEARNING CYCLE 75

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 303808, frozenset({LightInCell(?x0:light, ?x1:cell)}): 37976, frozenset({LightOff(?x0:light)}): 37722, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 37976, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 304616, frozenset({LightInCell(?x0:light, ?x1:cell)}): 38077, frozenset({LightOff(?x0:light)}): 37823, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 38077, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 305424, frozenset({LightInCell(?x0:light, ?x1:cell)}): 38178, frozenset({LightOff(?x0:light)}): 37924, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 38178, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 306232, frozenset({LightInCell(?x0:light, ?x1:cell)}): 38279, frozenset({LightOff(?x0:light)}): 38025, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 38279, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 307040, frozenset({LightInCell(?x0:light, ?x1:cell)}): 38380, frozenset({LightOff(?x0:light)}): 38126, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 38380, frozenset({LightOn(?x0:light)}): 254})

Learning NSRTs on 380 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 38000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6098.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95285577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9709948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96035933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9702811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99107844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94628996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9595188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99099714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93448097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99084383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.86868507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99337274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98849887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9781543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98692286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94338596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96388716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9691993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99990696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95421827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99121624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98373383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868944], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90608853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98274815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9594803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98468477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99985856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920811], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9474021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98997986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97544295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9676457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.8650577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9909076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9882405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.990746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99926513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9488696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9769447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99204314], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99024874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99451226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97618234], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8190483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9611445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99782914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99036264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97313654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8915648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99398553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94276834], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9586185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96180046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9621749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9388841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98489934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96590626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9748812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98839873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98385006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97319037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99130374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98299986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97065794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99482477], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97684526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98164636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9799054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9240069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13143484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98855656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.922265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98999214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99307346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98254484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98453546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98409915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95517707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98029554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98039466], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98344916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96791965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99873734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9921125], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9528261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96876705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94344914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9285354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99104095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94465214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95796394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95280737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99255615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96061015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99971694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99797344], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9608089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9780031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96965826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9627225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97051966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99182147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98223525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9379625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.970337], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99036306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6723779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.967642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95016384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9694364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98313826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9736179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9535881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9176344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12216623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99963653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9493754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.969714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9466981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98986113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97295684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9668194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99423647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.976576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9396884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925898], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98071736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9758206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9403056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9754429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.966835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9592073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926162], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9986977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9826237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9846371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98463315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98748446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96600765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99187684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9793755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9776578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9880581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9904578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.980091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9933447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9896312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9772525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98137975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99884844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9437844], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94733495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98077947], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9966423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9997826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9716434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9978642], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9999435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99368864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9746683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51484364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.989997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99708575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9797312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99377805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9713076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.994648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99053586], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99486816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9741376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9548526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96829236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97360265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9906298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98773277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9757907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9914074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.993503], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99679697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9214621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95226514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9281614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9366715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9696346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97243464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96672547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987479], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96863216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9919119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9625639], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97865754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8982359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99934465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98604435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9683084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9954376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9832817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9844116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97696024], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98789316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9771366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98788047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5859703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97110194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96456987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98389685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9750373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99614364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.33198547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99635696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9114709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96682864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9303783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988448], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9826586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93489677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98703086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97421706], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (75,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 38000, 'query_cost': 0.0, 'learning_time': 6300.10081176128})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__75.pkl


ONLINE LEARNING CYCLE 76

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 307848, frozenset({LightInCell(?x0:light, ?x1:cell)}): 38481, frozenset({LightOff(?x0:light)}): 38227, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 38481, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 308656, frozenset({LightInCell(?x0:light, ?x1:cell)}): 38582, frozenset({LightOff(?x0:light)}): 38328, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 38582, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 309464, frozenset({LightInCell(?x0:light, ?x1:cell)}): 38683, frozenset({LightOff(?x0:light)}): 38429, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 38683, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 310272, frozenset({LightInCell(?x0:light, ?x1:cell)}): 38784, frozenset({LightOff(?x0:light)}): 38530, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 38784, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 311080, frozenset({LightInCell(?x0:light, ?x1:cell)}): 38885, frozenset({LightOff(?x0:light)}): 38631, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 38885, frozenset({LightOn(?x0:light)}): 254})

Learning NSRTs on 385 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 38500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00001, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8607.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98715824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99132127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99857444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98423034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9581708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9714565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98045504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99528325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98249954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99033684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9740399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9054481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9829265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98888546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95794225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9735036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99775666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9708823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99368525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9529333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96511674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9645799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99495256], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9628143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9105796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9758614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93426806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99818856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96931577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95172006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9737935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9632635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9161924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97808725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99328905], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9940428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9921877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9793498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9176883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99958706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9794715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99929464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99602026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9860732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9634156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9599292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9869835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9926789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99310744], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9637433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9432805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.965508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96301264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99787825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99673045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97413313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.961886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97948897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98086333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98584753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98669875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939179], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97614115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9709309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9716722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96315855], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94793934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9317164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98744595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98924106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9586755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9565053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9686403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97717094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99615747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99763405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98278797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99543095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95802975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.982717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.978599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9695254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9716407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94353294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99451244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9305888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997188], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91878295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99382716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9814136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9413252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38241035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9639536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99517125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.37366137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95455885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97168607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99963015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99682695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98150873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98739845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97509754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9707169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893522], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9423144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98825854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98070174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99254286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9604254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.934577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6522233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89280045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96082807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96704495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99708456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9793174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9539224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99765295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97875226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99077445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9770352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98818016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901509], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99670804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47036174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94440436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99417025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9679706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98143697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97900635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96617675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9590994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.973725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9713316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97576284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97369766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9691357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9627534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99176186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896895], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98513603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97251743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99678355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9452686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90598613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97294784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9552586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.963149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99485415], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9685864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9998131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9739093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.979862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99440473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9963453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9866418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9964208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9775077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9800955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98696274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95531493], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97591406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96647066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97873306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99470353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9758112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994302], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97174466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98745686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9824545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9932776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96660286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99303573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9673503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9222227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.30086964], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97791713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.92814934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9967545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.987669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97299755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9712868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9863026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99949837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9706093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99627376], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97758716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99965924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98476166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.975823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99493855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98574555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94025886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99195766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96566784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98109734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95648575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9792249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99863136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97822136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99546564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99859023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99528897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99838173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.964224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98664737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99735624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9737429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9457558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99797225], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (76,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 38500, 'query_cost': 0.0, 'learning_time': 6451.891103643284})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__76.pkl


ONLINE LEARNING CYCLE 77

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 311888, frozenset({LightInCell(?x0:light, ?x1:cell)}): 38986, frozenset({LightOff(?x0:light)}): 38732, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 38986, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 312696, frozenset({LightInCell(?x0:light, ?x1:cell)}): 39087, frozenset({LightOff(?x0:light)}): 38833, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 39087, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 313504, frozenset({LightInCell(?x0:light, ?x1:cell)}): 39188, frozenset({LightOff(?x0:light)}): 38934, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 39188, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 314312, frozenset({LightInCell(?x0:light, ?x1:cell)}): 39289, frozenset({LightOff(?x0:light)}): 39035, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 39289, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 315120, frozenset({LightInCell(?x0:light, ?x1:cell)}): 39390, frozenset({LightOff(?x0:light)}): 39136, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 39390, frozenset({LightOn(?x0:light)}): 254})

Learning NSRTs on 390 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 39000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00212, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00259, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss: 0.00000, iter: 15000/100000
Loss did not improve after 5000 itrs, terminating at itr 15984.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.31391662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9607099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97544944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98532504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96254116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98896784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99571264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99896806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9768386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93241304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9764795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9262254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97833276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99787825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9441425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98846364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98958594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99382985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99912906], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92921317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91837215], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9854201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9955371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97263026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9887218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9670966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9867865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99749047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9740613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9712378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9702989], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97737634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97472596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9151331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9665712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97257215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99335915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99451363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97801244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99394405], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9750289], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97422975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9550726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9549924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9812023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99955106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9674552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99397725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98058456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98258317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19802497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98774594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99328434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9638581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9614818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991189], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99738014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98378295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94675446], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9727626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5390628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9786337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9829513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9279903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96860385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99589694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97314394], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99047744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9306349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9254028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96062195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9756872], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.57957643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9659195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9979793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9760307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94714004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9591683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8793469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9696182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9876787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97085536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9946626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9873744], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9702862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809774], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985689], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95267445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9723138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9074452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9626992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99991095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9490957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97596085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99070275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97665215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98705506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94413954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9793163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99915415], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9746586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9671872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96759313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99676424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99075896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9797923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9819273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98615366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98423225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.949722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8467262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99903715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99200046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99550575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9576058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98821056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99354404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96082914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99675924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9324132], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9783298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9692459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9813616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99612164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95638007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99968594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9657692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98381716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9775299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99404526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9520473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9682046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9475317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95762056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97206783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99210286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1356493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97087044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9592291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9761967], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9603044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95082647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9602276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95298964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98907363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99666876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99702895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9763258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9236914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96487695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9837165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98179704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99572235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9517895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98548967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99149066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99551165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9843842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9819571], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6206025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9404015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9665742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99917763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99508405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93753177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99965537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99613434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99755555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95821506], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9960049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99782085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99331397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99251986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9747341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99864465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9727494], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9923565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9670789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99944615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98353446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9560298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9888684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9665671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97037417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9906363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9999041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.89704543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9713581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9989395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96384335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9950457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9780835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99844986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99804807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93402696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9887734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9829276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98750806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97755116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9821997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9958462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97501993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9932207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99919933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9109485], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (77,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 39000, 'query_cost': 0.0, 'learning_time': 6616.646665449312})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__77.pkl


ONLINE LEARNING CYCLE 78

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 315928, frozenset({LightInCell(?x0:light, ?x1:cell)}): 39491, frozenset({LightOff(?x0:light)}): 39237, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 39491, frozenset({LightOn(?x0:light)}): 254})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 316736, frozenset({LightInCell(?x0:light, ?x1:cell)}): 39592, frozenset({LightOff(?x0:light)}): 39305, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 39592, frozenset({LightOn(?x0:light)}): 287})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 317544, frozenset({LightInCell(?x0:light, ?x1:cell)}): 39693, frozenset({LightOff(?x0:light)}): 39406, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 39693, frozenset({LightOn(?x0:light)}): 287})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 318352, frozenset({LightInCell(?x0:light, ?x1:cell)}): 39794, frozenset({LightOff(?x0:light)}): 39507, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 39794, frozenset({LightOn(?x0:light)}): 287})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 319160, frozenset({LightInCell(?x0:light, ?x1:cell)}): 39895, frozenset({LightOff(?x0:light)}): 39608, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 39895, frozenset({LightOn(?x0:light)}): 287})

Learning NSRTs on 395 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 39500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00333, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6860.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9409405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5849032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99039394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99527335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96248716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97756046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9633288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98629636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99730456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99895185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98089886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99890566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9324661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99847037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9673915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9649655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95599484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99760526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9662046], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9712728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9645146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99571586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.53886443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99586344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99843615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.70497537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98881465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25139344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97674346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99418104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99116987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9453994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99878144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96747917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9187262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99701816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97964406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9770613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789445], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96885246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9651538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96777034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99254066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99140227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9739464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97925335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99195576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00735121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9722657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931813], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94825566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99317586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98796886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99083537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97380614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96796805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98540026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886321], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.31445846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.976152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992977], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9671764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96965367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.976217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9710968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99062455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9760121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97777927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98877543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97843033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98908514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98614615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97178096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6918648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99482095], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.997952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9803198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99128973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9771457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99928856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96446216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94373834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9948261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9699881], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9360341], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.47412464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9786868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99717706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97687536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98974556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9736836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99756825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9758646], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93854266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9521993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99167913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99139285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98152244], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99471873], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97854066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942727], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9784099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99491525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98779804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9771308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9764604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99640316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8112404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99452204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9689705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98888975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.03909905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97113836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9792451], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98104936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96735567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7180113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99306715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9780585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99836195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97874737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95856506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99965847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876298], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.944723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9765163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9829792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98355037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99581385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99845207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99155205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97955006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99676317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98481417], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9782717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9740686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97269493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9974421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9827309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92501086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9977932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97306305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9529482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9921286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92803395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9715736], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98410183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9762616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98751706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93753886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.979738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99726874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9678449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9733306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97689676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9779145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4668497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98649246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9771028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97350353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9367146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97359705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94329536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98943925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99819136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99892324], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98838276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94666153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98753405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9214932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97276765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91306454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03379553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99373233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7469117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98341656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9590675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95605457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97287005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97564435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95813805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8105486], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99738973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95746195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96525013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99953955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98675406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95330995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95513856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98225087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97148776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13397898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98579055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95339733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97653466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9677436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8387977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9543101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9776316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99960834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94130903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99594504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9712918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99913794], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (78,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 39500, 'query_cost': 0.0, 'learning_time': 6769.9626887133345})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__78.pkl


ONLINE LEARNING CYCLE 79

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 319968, frozenset({LightInCell(?x0:light, ?x1:cell)}): 39996, frozenset({LightOff(?x0:light)}): 39709, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 39996, frozenset({LightOn(?x0:light)}): 287})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 320776, frozenset({LightInCell(?x0:light, ?x1:cell)}): 40097, frozenset({LightOff(?x0:light)}): 39810, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 40097, frozenset({LightOn(?x0:light)}): 287})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 321584, frozenset({LightInCell(?x0:light, ?x1:cell)}): 40198, frozenset({LightOff(?x0:light)}): 39911, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 40198, frozenset({LightOn(?x0:light)}): 287})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 322392, frozenset({LightInCell(?x0:light, ?x1:cell)}): 40299, frozenset({LightOff(?x0:light)}): 40012, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 40299, frozenset({LightOn(?x0:light)}): 287})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 323200, frozenset({LightInCell(?x0:light, ?x1:cell)}): 40400, frozenset({LightOff(?x0:light)}): 40113, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 40400, frozenset({LightOn(?x0:light)}): 287})

Learning NSRTs on 400 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 40000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00455, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00177, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11189.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99555266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98924994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99431163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98936564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98166955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95486736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96800435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97479075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9677826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96290964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93405575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98585945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9659719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97392195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99625766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96801883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99131805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99761206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99577594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98147625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98570436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.974261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9645762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827799], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99133456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.973322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9746404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98226357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99946404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9563316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9749279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9173149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97832286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98428047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9755087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99033576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98141396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9698219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99321127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9693046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99336916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9754468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989906], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.982728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99266064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99993384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96317685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9123192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97607064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9409247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99717957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99516714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99858654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98553026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9690633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92499006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98842514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99450135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99459594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99376774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97667146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98437494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99282527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99243224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.41722608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9395101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99919003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99046165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97004676], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787435], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9591906], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9915546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98005116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9986262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9991602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9655931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9874007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9408834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92995054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95188224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9822399], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99817866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94356114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97363806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9723965], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99341524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99966097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95313764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9902378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98553944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9943933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98773503], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95251113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84602135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97528106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8645789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92581445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9626834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9327776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99421275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96192855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97553486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98458487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9837829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9812516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99548775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9472782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97894824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99826527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99980694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89119077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98418444], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.940909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9735958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95275396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99491554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99746263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9693002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99769217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92816794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9205979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97105086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9728209], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99116963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99746126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9783128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9628101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.902815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98350346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9532162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9340871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99307865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9713383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958761], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99049366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9589156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97780293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97835296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98587614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98034495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98194987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9541234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.969101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99839485], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98852956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99436724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9956181], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97776204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9619769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9783222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99031323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97794414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99501646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99196976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9344279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9557527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92150867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.964683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9768727], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9813982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99339825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98404014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9755798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960401], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.973782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9761552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95502895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97376376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9772269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9770651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99674124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99737924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9699075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99491763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9663752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941175], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.38811642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.38670224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97881633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97368795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9712465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96851206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99857914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9628516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9819178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9624014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12738979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99205774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96590763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9646334], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9932477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99267834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99785143], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99855596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97147006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99423933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.88166773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9763154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9788086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9764264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92286223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97462815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942141], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98990923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3143502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9777983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95816547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99420506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.961111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9808456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9685979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96832174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.901307], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (79,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 40000, 'query_cost': 0.0, 'learning_time': 6931.669979487313})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__79.pkl


ONLINE LEARNING CYCLE 80

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 324008, frozenset({LightInCell(?x0:light, ?x1:cell)}): 40501, frozenset({LightOff(?x0:light)}): 40214, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 40501, frozenset({LightOn(?x0:light)}): 287})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 324816, frozenset({LightInCell(?x0:light, ?x1:cell)}): 40602, frozenset({LightOff(?x0:light)}): 40315, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 40602, frozenset({LightOn(?x0:light)}): 287})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 325624, frozenset({LightInCell(?x0:light, ?x1:cell)}): 40703, frozenset({LightOff(?x0:light)}): 40416, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 40703, frozenset({LightOn(?x0:light)}): 287})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 326432, frozenset({LightInCell(?x0:light, ?x1:cell)}): 40804, frozenset({LightOff(?x0:light)}): 40517, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 40804, frozenset({LightOn(?x0:light)}): 287})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 327240, frozenset({LightInCell(?x0:light, ?x1:cell)}): 40905, frozenset({LightOff(?x0:light)}): 40618, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 40905, frozenset({LightOn(?x0:light)}): 287})

Learning NSRTs on 405 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 40500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00002, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss did not improve after 5000 itrs, terminating at itr 14497.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95563704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99365973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98760146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9724204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98708725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99732304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98948944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95945746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98737544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98305684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9656116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91758865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99565095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96569943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98282343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97756237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9394079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92458594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98479784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9765509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97839254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831867], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9459164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9689521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9695972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99876136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99548995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97005844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97847134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9771635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8987809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98857355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9482534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9694676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.18166585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98712826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9591152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99547863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.971208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99312705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.42325667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9784837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99735737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972804], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900562], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90718883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99951094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99220145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93880486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99846053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.968729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99515235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96613747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99032915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9799086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9610374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95396715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9743304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92413086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98279285], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98058337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9392276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98789495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99642676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97188854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99615264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98080474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856708], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9835171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.996872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9433488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96758235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9844791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9760719], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3695378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98028684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9937019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97893906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96634674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98361856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9245513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99493325], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98988295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97118443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99929273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9683764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9422811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98035437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.974131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94320065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9203606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99733347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9299485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98207796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94664145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95066303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99359554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9579707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97172576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95305365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9685642], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9394176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94502676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98439425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95503634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97684854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95561856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95018613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97447354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91544586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98877007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98802906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98192614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99138117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.961591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98759645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99149543], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99998593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99251103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9400264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9163663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9769215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96491414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9721073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99862695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97775936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99859685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9534237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95860463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95108265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97234076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99279296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9707671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98743397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13431999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9580563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971188], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9348732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96658397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9120223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.941989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99726695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.952411], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12731431], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99340975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9701014], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9908614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97792464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9929426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98570985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.994689], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9957154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96639353], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98519355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9591473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885178], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99417776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98242825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9808618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99253017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91680896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97961605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9603981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99838895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9726609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97418857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9802446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99349535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.35804293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98350936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96399796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9701785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99856174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99603665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990299], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7631695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9805345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36405513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98526937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97328776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.970651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9683785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834727], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99462044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95305544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99532783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96484715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99253416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99005705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99660355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6621866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9405488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99659604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97899973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96926177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96897453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96305287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99149764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99182177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97059953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90290433], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (80,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 40500, 'query_cost': 0.0, 'learning_time': 7099.4655896362965})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__80.pkl


ONLINE LEARNING CYCLE 81

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 328048, frozenset({LightInCell(?x0:light, ?x1:cell)}): 41006, frozenset({LightOff(?x0:light)}): 40719, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 41006, frozenset({LightOn(?x0:light)}): 287})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 328856, frozenset({LightInCell(?x0:light, ?x1:cell)}): 41107, frozenset({LightOff(?x0:light)}): 40820, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 41107, frozenset({LightOn(?x0:light)}): 287})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 329664, frozenset({LightInCell(?x0:light, ?x1:cell)}): 41208, frozenset({LightOff(?x0:light)}): 40921, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 41208, frozenset({LightOn(?x0:light)}): 287})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 330472, frozenset({LightInCell(?x0:light, ?x1:cell)}): 41309, frozenset({LightOff(?x0:light)}): 41022, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 41309, frozenset({LightOn(?x0:light)}): 287})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 331280, frozenset({LightInCell(?x0:light, ?x1:cell)}): 41410, frozenset({LightOff(?x0:light)}): 41096, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 41410, frozenset({LightOn(?x0:light)}): 314})

Learning NSRTs on 410 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 41000 datapoints
Loss: 0.00186, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00157, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12070.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99598414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98288584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9607999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.965723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9684262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98298013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9306284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97518337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96343285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90072113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9771519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9730571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9625977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97722274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99241036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99556303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96978545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9536253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9619077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99887973], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98761463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.31868684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9320455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94434625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9775312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98908246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98448986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95013577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98406833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99086684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99523246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9700163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94800687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973836], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95255226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9662074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9946024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99215794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9777044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99459463], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98973024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98885745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99685687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96482605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99827534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98465776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94541526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97174215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8798825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9830381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98942685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92072964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9565576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902141], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98087984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99022347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99385923], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99909055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98200876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95289433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97799075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98453707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9283169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.934088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92003596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9630858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97285223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99792606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.973205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9862739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838299], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9832425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99273056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9806013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99538976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9647824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9603383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9749703], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99463433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9481519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9186592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8545821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96538734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9733703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9743727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99414176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9727478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96156377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99778616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99861825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99480295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99651015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9760142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9754022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93853295], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98438454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9639407], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9802121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98969203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95652217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9674452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97645766], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98790234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99579483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99073714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9829581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99112767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9384185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99515045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97615075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9862968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9734398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9618319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99109083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.52580196], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98485947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98181677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99143624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9583479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98583215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9648608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95822287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9726261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9670117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9685766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9718739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9698529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99648964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9615368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95807177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9762314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99102783], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96218526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3430941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9912248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9853989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9823182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9851936], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98318225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9775262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9748748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98684883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847631], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.33219996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97608143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89357305], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9929746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9804649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9663758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9470306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9986979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9783756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9951564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9903651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9996773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94707334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98969954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98277885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99998385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9991145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9712825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99582654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9959269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9877849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9700204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.8387493], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9608046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9634449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871724], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9975708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.997467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99163103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98894596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9760138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99646676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.979253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93877935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9769364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.24020225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96105677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99882555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9998214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.312541], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98160344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98226345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9955908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94433075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98428184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98174137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9878603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99053043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96846586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97743773], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9805832], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96249956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9618835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9928983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96727216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9648977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9896885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98775935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99164146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98931265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98729503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99377126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99740183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95892847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9986711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9861211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99919677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99478686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97146225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98365873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9805344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99983287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9803024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9370209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99537235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99480516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9588083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97433317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9989846], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (81,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 41000, 'query_cost': 0.0, 'learning_time': 7265.864916545339})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__81.pkl


ONLINE LEARNING CYCLE 82

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 332088, frozenset({LightInCell(?x0:light, ?x1:cell)}): 41511, frozenset({LightOff(?x0:light)}): 41197, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 41511, frozenset({LightOn(?x0:light)}): 314})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 332896, frozenset({LightInCell(?x0:light, ?x1:cell)}): 41612, frozenset({LightOff(?x0:light)}): 41298, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 41612, frozenset({LightOn(?x0:light)}): 314})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 333704, frozenset({LightInCell(?x0:light, ?x1:cell)}): 41713, frozenset({LightOff(?x0:light)}): 41399, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 41713, frozenset({LightOn(?x0:light)}): 314})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 334512, frozenset({LightInCell(?x0:light, ?x1:cell)}): 41814, frozenset({LightOff(?x0:light)}): 41500, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 41814, frozenset({LightOn(?x0:light)}): 314})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 335320, frozenset({LightInCell(?x0:light, ?x1:cell)}): 41915, frozenset({LightOff(?x0:light)}): 41601, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 41915, frozenset({LightOn(?x0:light)}): 314})

Learning NSRTs on 415 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 41500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8462.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94860804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95812345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97405773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950451], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9654302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9729663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99428034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9346887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99883735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95015574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96958995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98111546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9547363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9749027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98580194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99018484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99786246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.964243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9599999], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9749335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94381464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9711655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98821265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96540296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98956215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99909323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98384935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98509645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9742517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9740802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97101164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97195816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99899745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96285206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97047615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.959126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99551356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98092866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9718327], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9122089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97440356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98659676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98193896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96601844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99557763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99329704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97397476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99880725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94930047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96163386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9708939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95799434], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97385085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96940327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99014753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97216165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989752], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9802147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97486943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97435707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.973793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99676174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97481406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96430486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98101795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96030205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9575038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98979807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97587204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99072033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9712494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99713194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97932935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98912275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9597194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9763532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9677073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9095292], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99622256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99961334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98627955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9677575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9494078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9731219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97650677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94831836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95457375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9709062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99573606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99062943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95922273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98686457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99488616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98080355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97860277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98556674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9794307], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99546987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94369876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99654055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90837777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9788849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98748636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99610865], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29278585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99357957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9638336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98673546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9585112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97651076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95885795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9394571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96636736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950725], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861431], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6309416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99907535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9340178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96261334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98412955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94229114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99886674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93993294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99882084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9698241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99483675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92995715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98972553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9794186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9681551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99991566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95232576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98684895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97132194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9799492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96942925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883686], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96735525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.86992127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99860835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9316065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9716416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9829111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9479286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99288535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99654716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99826616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9633042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9812804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95173603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96762055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98260707], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99759656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99326634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94814235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98245716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97091013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.973846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99942344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98801434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98224133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9717254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9654041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9475184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99118674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9562406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99305403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99978006], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9977788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9889615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17515124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.23220648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97110933], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9772923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97907513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96518016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99842566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9481817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98486185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9744512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94968826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96103686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9730977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91595536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95479757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9728219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97662145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97811115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99388665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97353363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98627645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9729399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98839027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9727358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985968], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40693516], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (82,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 41500, 'query_cost': 0.0, 'learning_time': 7427.962728923303})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__82.pkl


ONLINE LEARNING CYCLE 83

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 336128, frozenset({LightInCell(?x0:light, ?x1:cell)}): 42016, frozenset({LightOff(?x0:light)}): 41621, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 42016, frozenset({LightOn(?x0:light)}): 395})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 336936, frozenset({LightInCell(?x0:light, ?x1:cell)}): 42117, frozenset({LightOff(?x0:light)}): 41722, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 42117, frozenset({LightOn(?x0:light)}): 395})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 337744, frozenset({LightInCell(?x0:light, ?x1:cell)}): 42218, frozenset({LightOff(?x0:light)}): 41823, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 42218, frozenset({LightOn(?x0:light)}): 395})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 338552, frozenset({LightInCell(?x0:light, ?x1:cell)}): 42319, frozenset({LightOff(?x0:light)}): 41898, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 42319, frozenset({LightOn(?x0:light)}): 421})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 339360, frozenset({LightInCell(?x0:light, ?x1:cell)}): 42420, frozenset({LightOff(?x0:light)}): 41999, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 42420, frozenset({LightOn(?x0:light)}): 421})

Learning NSRTs on 420 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 42000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8492.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6783049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98898184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9587205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98727137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9293469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99703395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.90208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9538082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9622888], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99527895], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98112786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9832286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9821805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98053336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9861938], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98930126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98687756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99041545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96953106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9725961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99266034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97921675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.994985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9702433], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99043113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9388302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9740455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97311795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9261042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99217355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96538806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9578803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98134243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95775735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96002245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9490705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99901617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99909395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95961624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98776287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9663916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9829008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99700755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98658276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98247993], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98841614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97751904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9661261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99759346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98944265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93128717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98656464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98619133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99889743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.963877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9213859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99437284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97401214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9744386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94976544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.42184493], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98293954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99539465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9596509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99578875], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97110665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98459905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95602554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9804809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93963766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9968247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98920804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9674522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98785853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9881041], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.936357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99334294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98417133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98941034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24195212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96729314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9742399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99334824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999971], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99410146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96038264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93582886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97599876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9607513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9698593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9662311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94087094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99988717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991608], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96755564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99752426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99615824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99435204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99706084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99092627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9646244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896694], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9403459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99682355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99977154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98525524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98301226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98294437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99151415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.31087336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96471834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98030233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98035645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99046654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99465054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93773204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98154885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99401283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9029526], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.940524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99688363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98741835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.77122164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99649864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9448218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795159], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9793205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99017817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99566704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.942989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97481877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99597365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97602415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9725015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98136866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98745465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99501854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98624974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99528044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97140247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99591094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809026], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99095947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99429977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.963199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97925526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95552874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94902605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9755916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9664288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9727361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94808674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.973647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90574604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9737785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9648562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98407173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99233586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96982235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98289174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97053623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99704427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9679144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97257787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977039], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.964453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96558577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9179913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94607204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97194487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98228705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94744027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9732779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96409893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97791195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98361385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99379903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99361837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98680264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99098295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97479457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99735016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99816465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97572833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9771055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98055243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9717712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97626525], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98626727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99210465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99703145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900866], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97566086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9988291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9823108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9876307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9718817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9363238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9661074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9577153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9910967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9975271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9894171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.998855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9489756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9922136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98301494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98675054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97668207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99202067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99911517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9850237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9828869], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9980471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9995569], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (83,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 42000, 'query_cost': 0.0, 'learning_time': 7591.985667366302})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__83.pkl


ONLINE LEARNING CYCLE 84

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 340168, frozenset({LightInCell(?x0:light, ?x1:cell)}): 42521, frozenset({LightOff(?x0:light)}): 42100, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 42521, frozenset({LightOn(?x0:light)}): 421})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 340976, frozenset({LightInCell(?x0:light, ?x1:cell)}): 42622, frozenset({LightOff(?x0:light)}): 42201, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 42622, frozenset({LightOn(?x0:light)}): 421})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 341784, frozenset({LightInCell(?x0:light, ?x1:cell)}): 42723, frozenset({LightOff(?x0:light)}): 42302, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 42723, frozenset({LightOn(?x0:light)}): 421})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 342592, frozenset({LightInCell(?x0:light, ?x1:cell)}): 42824, frozenset({LightOff(?x0:light)}): 42403, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 42824, frozenset({LightOn(?x0:light)}): 421})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 343400, frozenset({LightInCell(?x0:light, ?x1:cell)}): 42925, frozenset({LightOff(?x0:light)}): 42504, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 42925, frozenset({LightOn(?x0:light)}): 421})

Learning NSRTs on 425 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 42500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00149, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00210, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9947.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98814565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9669209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99684083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99688464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96986616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93601567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9128454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99031866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96801853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99179506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9784654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9351459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97761494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9739781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98620266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9740253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999286], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99027294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9672968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98749727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.351104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96644294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94752014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99481386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9393062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98541254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99990267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9465863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99208045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9757673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9662651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9603029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.975651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964788], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96357614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95693487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9744879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98837596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99069095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9418146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9727191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94562685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98973036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98547155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94390756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9364282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9585733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98583186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98996806], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.53604573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9526913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91703576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998751], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99711466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891363], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98123413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9949294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98631376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98033774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93352026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99614596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98059946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9882019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94709486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9393203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9849316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99684834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9652804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9663568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9861561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99560887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98274326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95184505], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9743606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93588096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96581787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9285824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9738981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98208666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97793907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9780486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99287015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9669458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98834324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.935696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9649132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99483085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97755456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841521], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9639108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9711624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9711779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97803223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9699389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9647414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98798734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98610145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99865025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99914014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99403363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96675086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9643586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95631325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97373587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9675359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9554411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9434097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937643], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.945203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9626772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96315783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98606306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98804504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1099873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9802268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9637103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98954415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99699104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99669194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9621636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9724348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99097496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99860525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99895257], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97248614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9771854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98443234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97976595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98504907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9456676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99173295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9681653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98448294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9829924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9733974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97321945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98739773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9465496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.80150044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9732269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98256564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9465097], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97116214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98551816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98805547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9485165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9581499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98984087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99392974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9723314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97310185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99849844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9649212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96211725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.22131196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97420275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9708075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93849605], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9810663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9472545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.961488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98670304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99045444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96622986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98864144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96789634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.954609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9635953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95478153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99344987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9746854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98463994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9733774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9224671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99617475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99835294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99246913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9810522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9790058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98325855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9793555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9611516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94700307], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (84,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 42500, 'query_cost': 0.0, 'learning_time': 7760.691172243329})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__84.pkl


ONLINE LEARNING CYCLE 85

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 344208, frozenset({LightInCell(?x0:light, ?x1:cell)}): 43026, frozenset({LightOff(?x0:light)}): 42605, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 43026, frozenset({LightOn(?x0:light)}): 421})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 345016, frozenset({LightInCell(?x0:light, ?x1:cell)}): 43127, frozenset({LightOff(?x0:light)}): 42706, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 43127, frozenset({LightOn(?x0:light)}): 421})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 345824, frozenset({LightInCell(?x0:light, ?x1:cell)}): 43228, frozenset({LightOff(?x0:light)}): 42807, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 43228, frozenset({LightOn(?x0:light)}): 421})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 346632, frozenset({LightInCell(?x0:light, ?x1:cell)}): 43329, frozenset({LightOff(?x0:light)}): 42908, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 43329, frozenset({LightOn(?x0:light)}): 421})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 347440, frozenset({LightInCell(?x0:light, ?x1:cell)}): 43430, frozenset({LightOff(?x0:light)}): 43009, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 43430, frozenset({LightOn(?x0:light)}): 421})

Learning NSRTs on 430 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 43000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00001, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6398.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9792503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96851015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97417223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97969127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99607533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98785853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9663988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99588007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96907926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.977645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98834383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98571306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9689197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99791586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94784415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98604786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97131616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98589206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936318], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98759097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9510553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97573346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96498215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99948364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9596407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9770324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99512714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99836385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98689944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99272937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99808425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.05178566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98806286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99454087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97603226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98706585], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98582226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99431974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99237585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9543294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9788657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98143184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99383944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9606328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99205863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93792886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93059635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98901415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98660463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99872684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9788582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.973631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99930066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9723412], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97893196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99999094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99337643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99990994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97123253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.34031904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97836673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98667735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40744096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98737466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.62024117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94696593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94712824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98468196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9652061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99707425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928337], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99889857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9933345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96151483], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9307822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96259826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9503577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98417044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9720923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98453027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9379107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.64208865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.970246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9584853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98676664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99898976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99142504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99648416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9729263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.971373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01309465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853901], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9762334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9221308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9740961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9703901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9740174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9711766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99318546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99852633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99546176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9757906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9786322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98492676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9753108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97887415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98557186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98603815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9474174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95657575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9777326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98880786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850916], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9584954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98392165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9457361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9331606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97132367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.891818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9670057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9793812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9698175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.925501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89677113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98397696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96415377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97395927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76168317], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98908323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9308999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99802655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99513143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38496506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9438527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99789006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99923813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97330034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9667826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98501354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4609034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9586938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99935794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.970462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99286383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955517], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99934787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9702934], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.62859035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9642137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99943703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98058605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9461694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984141], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6256318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98163646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9764099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96345454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97790796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94793797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9712734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9744349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99917996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95790803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96872663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95162654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98326313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96874386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99604064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99622273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99937254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98889333], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98383135], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9859579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9628915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9902724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9860531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9871889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9493081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9547774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98176515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9965961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9691033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9615604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99692726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9995609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96346635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9730723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99258167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9280147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9970581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97985417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98975754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.989684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9765762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97753936], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (85,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 43000, 'query_cost': 0.0, 'learning_time': 7923.499911455321})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__85.pkl


ONLINE LEARNING CYCLE 86

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 348248, frozenset({LightInCell(?x0:light, ?x1:cell)}): 43531, frozenset({LightOff(?x0:light)}): 43104, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 43531, frozenset({LightOn(?x0:light)}): 427})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 349056, frozenset({LightInCell(?x0:light, ?x1:cell)}): 43632, frozenset({LightOff(?x0:light)}): 43205, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 43632, frozenset({LightOn(?x0:light)}): 427})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 349864, frozenset({LightInCell(?x0:light, ?x1:cell)}): 43733, frozenset({LightOff(?x0:light)}): 43306, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 43733, frozenset({LightOn(?x0:light)}): 427})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 350672, frozenset({LightInCell(?x0:light, ?x1:cell)}): 43834, frozenset({LightOff(?x0:light)}): 43407, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 43834, frozenset({LightOn(?x0:light)}): 427})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 351480, frozenset({LightInCell(?x0:light, ?x1:cell)}): 43935, frozenset({LightOff(?x0:light)}): 43508, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 43935, frozenset({LightOn(?x0:light)}): 427})

Learning NSRTs on 435 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 43500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00088, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9784121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99418175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826078], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99401426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97879416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98349416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9972576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9788473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9684996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9438775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99717635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97354054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98510915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97871524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9169736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9961659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9705009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97088104], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9662968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9293058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96905917], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.87787485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9763697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92883027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99215025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9409428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99963033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99334604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93718565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99818563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96756226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9781525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9585482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99975026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.982136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921087], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95694315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99647343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9886287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99775803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9574957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9720651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99442124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98675877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9068488], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99902743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99012035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9837485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99376947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99123305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98876125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.62524146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96565753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99996495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99342173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97120357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.959396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9783145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9710989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9545579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97838426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99374324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99634755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99681276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9601308], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9785846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9409674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99643326], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9900958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9709125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9661642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94726485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98361576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93924123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9907239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98497075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9540261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98899066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99973726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9732001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9642055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99115914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99051356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9279787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9736418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9915033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9873276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98932636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99780494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96118855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11385995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9229499], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0366572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99404377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97212994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9862193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99666953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99536407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99898905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.970115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99978083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9780158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99364585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94997877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97649753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98705363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98430884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.87576306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96355873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99897504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99892163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99942917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9491579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982583], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95227206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95452154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98443043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98021454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96003103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99379206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.80131304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.970768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99666446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95324975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9729659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.07653999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98006886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9762305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98925465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99621326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9783224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94157326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835022], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97636324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98814857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99447435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98365283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9524938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.979851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96146315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99780387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.959466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98173773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.42566413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8979663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92451465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96296376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99794763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99718803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98770005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97887594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99732196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99142057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942513], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94261575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97403294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9518648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99593663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973341], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9877894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99648577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9711374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97656757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98569167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9771572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99693555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9908357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98535866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99870706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99985504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9989035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9900572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9911825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9977985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9705773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99554354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9993666], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98339635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99345416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98507345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9650272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9720929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9138808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9577789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97107553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94157696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98895365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99355984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.953557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9575199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99018437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99821794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9387756], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98293865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97602534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9551825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93798697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95650667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97899693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9772704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9261707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5268437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9751454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9757763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99155575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97711766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98880184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98421484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9709584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99778664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9232445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993021], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (86,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 43500, 'query_cost': 0.0, 'learning_time': 8086.215345671284})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__86.pkl


ONLINE LEARNING CYCLE 87

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 352288, frozenset({LightInCell(?x0:light, ?x1:cell)}): 44036, frozenset({LightOff(?x0:light)}): 43609, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 44036, frozenset({LightOn(?x0:light)}): 427})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 353096, frozenset({LightInCell(?x0:light, ?x1:cell)}): 44137, frozenset({LightOff(?x0:light)}): 43710, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 44137, frozenset({LightOn(?x0:light)}): 427})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 353904, frozenset({LightInCell(?x0:light, ?x1:cell)}): 44238, frozenset({LightOff(?x0:light)}): 43811, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 44238, frozenset({LightOn(?x0:light)}): 427})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 354712, frozenset({LightInCell(?x0:light, ?x1:cell)}): 44339, frozenset({LightOff(?x0:light)}): 43912, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 44339, frozenset({LightOn(?x0:light)}): 427})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 355520, frozenset({LightInCell(?x0:light, ?x1:cell)}): 44440, frozenset({LightOff(?x0:light)}): 44013, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 44440, frozenset({LightOn(?x0:light)}): 427})

Learning NSRTs on 440 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 44000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9707865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99361587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99150294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99554425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9743718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97503644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9568347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93995386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96101075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9594064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9728665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96587557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9727989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98172796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99357826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99518174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99956113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98967284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841451], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9404406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916747], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98608863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95258653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99502045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9742889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11104321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9698581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9280607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97166336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97578394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96071386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99928755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91703653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99616504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9739206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96876544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9810215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99851596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9624233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98150325], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885181], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9862255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9799252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99571645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96907294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93339497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99818563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95580745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9753921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99705684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98955995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9724911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97374904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99639827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9783263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9758542], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9674361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796689], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9421866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9748763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99674594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97355366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.964298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98107547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43764916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99215615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9681465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97169197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99735874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95261097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95547265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97201777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99272406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9718954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9458561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.23577313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976878], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9750831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.978577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9639596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9579919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99863523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99464417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99978745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99205077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9810448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99858546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7850708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9565284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9663252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9720178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9751232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98604375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9608734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99530756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99705535], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9579546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99930507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9516271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99928194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95795447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98981726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9548757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.73874533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99017364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97956604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9820302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9503337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99871343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95283055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99791956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968405], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96945405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9636578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99570036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9661979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98824686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9797237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9338884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9639858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9622309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9454331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99249166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97070616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99944824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98274046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9758786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9837706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99844724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9637957], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9528457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98242354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99774843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9416534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9814276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94849217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.88105094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99234235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.83384055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.87942797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97470975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98056716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98015076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9013797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9684611], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9588536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99107504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9138468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968375], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9943786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9717914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9917626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9891281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98747593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98582345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9949478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9935961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9653764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9970051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9844863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9858731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99657524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9359219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9965225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9941741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9543463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.970952], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99778545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99737257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99868494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9944095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9878985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7902179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9784992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9889463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.981315], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9671505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93234694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.32638034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98652536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97408044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98551863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9707101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97574216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9830535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9668096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.680259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9788177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99651325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99646425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9794591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9641591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98190004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98411727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94170594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96796596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99810076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969283], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (87,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 44000, 'query_cost': 0.0, 'learning_time': 8250.29390758829})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__87.pkl


ONLINE LEARNING CYCLE 88

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 356328, frozenset({LightInCell(?x0:light, ?x1:cell)}): 44541, frozenset({LightOff(?x0:light)}): 44114, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 44541, frozenset({LightOn(?x0:light)}): 427})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 357136, frozenset({LightInCell(?x0:light, ?x1:cell)}): 44642, frozenset({LightOff(?x0:light)}): 44215, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 44642, frozenset({LightOn(?x0:light)}): 427})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 357944, frozenset({LightInCell(?x0:light, ?x1:cell)}): 44743, frozenset({LightOff(?x0:light)}): 44316, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 44743, frozenset({LightOn(?x0:light)}): 427})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 358752, frozenset({LightInCell(?x0:light, ?x1:cell)}): 44844, frozenset({LightOff(?x0:light)}): 44417, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 44844, frozenset({LightOn(?x0:light)}): 427})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 359560, frozenset({LightInCell(?x0:light, ?x1:cell)}): 44945, frozenset({LightOff(?x0:light)}): 44518, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 44945, frozenset({LightOn(?x0:light)}): 427})

Learning NSRTs on 445 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 44500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00400, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9266.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99966437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99388933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9742494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9415643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9638474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99520737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97024524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9077569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9676994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99819493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98477256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01251812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9546291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9737758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99040127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9743847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.896301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99228406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9419313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13196118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773669], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7312731], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.947491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94704866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9749072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99928886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9674968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99966776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98348063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99164236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99080706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98794603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98862314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98564535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98662543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9785105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97978204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98473173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97067815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92588955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53685814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99307334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946924], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97711265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97834325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9365824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99183714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91898555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99782586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97398317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99283576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9722284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9503563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9631309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9701036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99507964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9544105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9799327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958827], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9601877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9620561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9607954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9538819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99651986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9631236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9531773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97456473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9760791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98537856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96490484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99440825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9584712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99330074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.969376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99313325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94653934], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.70628834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9721391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95421296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98371506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9724191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9754299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99426574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98233813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99433166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9630998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9757547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99467677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97391105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96936655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99431235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99931085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9627324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99948066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.960136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964196], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98259765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9671816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99387276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9705608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99217224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9517219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964159], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93781275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9683116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97546196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98796165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99851507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9684138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96744025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9682374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935289], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941436], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9741296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98602074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9698793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9584135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97952634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95379686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99994564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97719765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97266597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98602533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9729309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9843083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97733396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98780024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99529994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98116606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99599147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9783695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96861243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94703645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99241805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9765121], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97462314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96839654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96294755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98185223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99500006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9449074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9559819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9689543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.21964796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9830908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99270546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98207206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99833554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99986476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98326874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97197443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9729392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94992346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9583737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99313337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98631793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9781905], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98749405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4450713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99837625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.966212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99949837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9829409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9611848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98492247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99877965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99688315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99503493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99204767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.86713886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6707201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9504931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95986474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99164253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95868355], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95544165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99299735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97309387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9395729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98396105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99226254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914721], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9701015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94962436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98867893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97608566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.979488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9648609], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (88,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 44500, 'query_cost': 0.0, 'learning_time': 8424.456831970252})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__88.pkl


ONLINE LEARNING CYCLE 89

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 360368, frozenset({LightInCell(?x0:light, ?x1:cell)}): 45046, frozenset({LightOff(?x0:light)}): 44619, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 45046, frozenset({LightOn(?x0:light)}): 427})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 361176, frozenset({LightInCell(?x0:light, ?x1:cell)}): 45147, frozenset({LightOff(?x0:light)}): 44720, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 45147, frozenset({LightOn(?x0:light)}): 427})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 361984, frozenset({LightInCell(?x0:light, ?x1:cell)}): 45248, frozenset({LightOff(?x0:light)}): 44821, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 45248, frozenset({LightOn(?x0:light)}): 427})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 362792, frozenset({LightInCell(?x0:light, ?x1:cell)}): 45349, frozenset({LightOff(?x0:light)}): 44922, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 45349, frozenset({LightOn(?x0:light)}): 427})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 363600, frozenset({LightInCell(?x0:light, ?x1:cell)}): 45450, frozenset({LightOff(?x0:light)}): 45023, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 45450, frozenset({LightOn(?x0:light)}): 427})

Learning NSRTs on 450 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 45000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00168, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98997414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40171272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99972516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99566907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99727076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96709585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97965574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98688596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.961243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93468386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9432671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9718632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9673253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.20253873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98518294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99388325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97269547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766895], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99278593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96467346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99003494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97705805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99858594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99642783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9486339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95517904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9473929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954551], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9868123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9959851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.995917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98058784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95188665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93611735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9919847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9957649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9951764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9862957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9910043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95561665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9065716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9967041], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98994476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9770034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97437227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8953858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99254864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98598737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9565171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99335045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99437076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99125206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99702036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36437684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99428666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97459793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98819447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9633749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9645705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98342055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99726087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9843229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98699886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886941], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.971902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9241384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99085075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9637059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70726615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99372184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99602973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9761199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9736803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.87334377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98693335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99840415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95561594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9740865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97546494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839437], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99831355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9412757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99107426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91984916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97827375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99796313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898278], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13065948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93310875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99354494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9484992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.977973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98603684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.36462307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99877566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8921942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9461921], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97275543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9582693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97577095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9473469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9733438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9698114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9715194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99527246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987171], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970639], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.87234247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99515027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99231535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9665874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98939013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94061875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99649787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98663485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8625162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908925], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99640495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98913735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97653216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99534345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99675506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97316706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97643846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9660277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98612255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99544734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99236435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99300814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9843597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860162], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96051437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98883486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99197763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9625829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99104214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98409206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95346075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99295837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9819128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.979962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99134403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99825567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9730489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9710087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99649286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94467056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968464], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97256374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9711817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97845393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9779539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99691945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9575509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99058867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9483623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.982638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9365774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97031194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97228426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9710951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96013856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99304885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99877995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98666084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9423541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5148306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99700177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99966913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99432844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99654907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.976465], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.45535335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99548376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98056203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9646534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.881308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95036006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9753887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9772107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9775172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99693835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98839813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99979323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996401], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.969625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99020225], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9737866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9653543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98316264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.17323771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9767597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98464173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9833619], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (89,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 45000, 'query_cost': 0.0, 'learning_time': 8593.413674074225})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__89.pkl


ONLINE LEARNING CYCLE 90

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 364408, frozenset({LightInCell(?x0:light, ?x1:cell)}): 45551, frozenset({LightOff(?x0:light)}): 45105, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 45551, frozenset({LightOn(?x0:light)}): 446})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 365216, frozenset({LightInCell(?x0:light, ?x1:cell)}): 45652, frozenset({LightOff(?x0:light)}): 45206, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 45652, frozenset({LightOn(?x0:light)}): 446})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 366024, frozenset({LightInCell(?x0:light, ?x1:cell)}): 45753, frozenset({LightOff(?x0:light)}): 45307, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 45753, frozenset({LightOn(?x0:light)}): 446})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 366832, frozenset({LightInCell(?x0:light, ?x1:cell)}): 45854, frozenset({LightOff(?x0:light)}): 45408, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 45854, frozenset({LightOn(?x0:light)}): 446})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 367640, frozenset({LightInCell(?x0:light, ?x1:cell)}): 45955, frozenset({LightOff(?x0:light)}): 45509, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 45955, frozenset({LightOn(?x0:light)}): 446})

Learning NSRTs on 455 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 45500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92841417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9684604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9646389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97475284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98681164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98335993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9625344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9808167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.853982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97378415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97170305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99970645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9683181], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99545914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98984617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9461367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99917805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99387366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9743381], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99458075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9899126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9936658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98842764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97533613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9946844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9712354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99729055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9883243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9904482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9648978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9931426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2953728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99500316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.991158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99524814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99036884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94807804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9833476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9984199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99844766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.989389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9778466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9862219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99345905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9825912], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.988009], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97957075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9435624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9440083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98185724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99538225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99089694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99951077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99386704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96926886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99434364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9761989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98859614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99209535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9235272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9737521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93923163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99341094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97234184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99734396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97920156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96325755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98804635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96485704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924156], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99796396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98918545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8773388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99308944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9778169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9410798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9223043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9197163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9748188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9398486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96053594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9354745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.952274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.960175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9808881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94093424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99886304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9571428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99857384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94764245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982191], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99412894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.957056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99352545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99798864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9555124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5980802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9658099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7958163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97773457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99715227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96630067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99304867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9673647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9300495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99299735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.968659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96942425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9621964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9639232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993454], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98305243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9669251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9589095], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94091845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98278004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94970834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93620694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99579227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99945885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98868275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9540953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9808186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9655501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9775059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99414736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.963498], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99211425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95723706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99534065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98917246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9684843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9786216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94869435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97166026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99794734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94474363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5993005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9769676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9777372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98665804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99156445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5968631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96769863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9936037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97963333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9713846], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900141], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97731006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96563196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99111336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99883705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99611104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99613893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9720933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9356304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9651549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99926734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99931747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94194555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97955537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97849506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9342362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89864886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97505385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99096787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.978589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946986], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98240614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96480304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96236813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9663201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99164045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9710044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98488224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98934495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9761658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97998637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97279465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99500775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9722391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9739844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9702735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967451], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99869984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99505955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879461], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99956244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92538327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99239695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99066836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97153735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99523836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9783844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9744091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9436128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98308665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99881786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97057456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9587223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99364716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998929], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (90,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 45500, 'query_cost': 0.0, 'learning_time': 8762.927709634183})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__90.pkl


ONLINE LEARNING CYCLE 91

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 368448, frozenset({LightInCell(?x0:light, ?x1:cell)}): 46056, frozenset({LightOff(?x0:light)}): 45610, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 46056, frozenset({LightOn(?x0:light)}): 446})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 369256, frozenset({LightInCell(?x0:light, ?x1:cell)}): 46157, frozenset({LightOff(?x0:light)}): 45711, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 46157, frozenset({LightOn(?x0:light)}): 446})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 370064, frozenset({LightInCell(?x0:light, ?x1:cell)}): 46258, frozenset({LightOff(?x0:light)}): 45812, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 46258, frozenset({LightOn(?x0:light)}): 446})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 370872, frozenset({LightInCell(?x0:light, ?x1:cell)}): 46359, frozenset({LightOff(?x0:light)}): 45913, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 46359, frozenset({LightOn(?x0:light)}): 446})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 371680, frozenset({LightInCell(?x0:light, ?x1:cell)}): 46460, frozenset({LightOff(?x0:light)}): 46014, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 46460, frozenset({LightOn(?x0:light)}): 446})

Learning NSRTs on 460 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 46000 datapoints
Loss: 0.00206, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6493.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99056655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94086474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.72587156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99189436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99446815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96160156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9694904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98085034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99291897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.92234135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98726577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9329714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11195967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97867864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9776354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98416257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99328524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99801594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9679045], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99328727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99189836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9928997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98316246], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9761573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9515292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9369505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9697255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94718885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99001986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99988085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97585946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99882096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97532463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9470169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96988195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99696934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9646525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931713], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99711496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9693781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98505217], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99117744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99749595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99806297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99658394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9820018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96883136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97725874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9713134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99603987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9448556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98313427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9646375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96006113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97675174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95146716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9705983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98804706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99078846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89613473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.974779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.975278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971171], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9784452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94553995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97810507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06978337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9363068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98102266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4718737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99224144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.358228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98487663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9458358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10412332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.974398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96918494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883187], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99439144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99474084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97075903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99497813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99363554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95428336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99809134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9564838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99369043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29849958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9805463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97009075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97940266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98339516], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99434114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99643886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9672501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9593872], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94514364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94429207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96690154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9722604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9670656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9201489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9030896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98867244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95193917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99931085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99172205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98174906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9496419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9274758], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98750496], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98736656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.977773], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99258417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9998187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99210876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95658106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98466223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99281454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.35765448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98893106], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9650454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98642623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95567435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99120474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9613305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99718046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99834245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96996427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98696125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99703175], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2354106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97757316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99496794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99896914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99599326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9812321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98899335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98608685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03243519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99119353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99097466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.970905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98415154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9716384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9663262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.974693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97253036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99560434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99285895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93381006], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99682915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99079835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98185986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99959505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99876803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99561965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95251065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99500585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96902835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98382276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99937534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98491913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9518677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99853945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.967146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98492223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96303594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.978122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99974537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847061], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99982816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95624614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96491355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96895105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99746925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9640629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98244166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93501776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9521272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9802348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97433555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99769586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98154867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97602904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98317176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9681548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9536555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9718103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96084964], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (91,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 46000, 'query_cost': 0.0, 'learning_time': 8937.93896131817})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__91.pkl


ONLINE LEARNING CYCLE 92

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 372488, frozenset({LightInCell(?x0:light, ?x1:cell)}): 46561, frozenset({LightOff(?x0:light)}): 46115, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 46561, frozenset({LightOn(?x0:light)}): 446})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 373296, frozenset({LightInCell(?x0:light, ?x1:cell)}): 46662, frozenset({LightOff(?x0:light)}): 46164, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 46662, frozenset({LightOn(?x0:light)}): 498})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 374104, frozenset({LightInCell(?x0:light, ?x1:cell)}): 46763, frozenset({LightOff(?x0:light)}): 46265, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 46763, frozenset({LightOn(?x0:light)}): 498})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 374912, frozenset({LightInCell(?x0:light, ?x1:cell)}): 46864, frozenset({LightOff(?x0:light)}): 46335, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 46864, frozenset({LightOn(?x0:light)}): 529})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 375720, frozenset({LightInCell(?x0:light, ?x1:cell)}): 46965, frozenset({LightOff(?x0:light)}): 46436, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 46965, frozenset({LightOn(?x0:light)}): 529})

Learning NSRTs on 465 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 46500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98858297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95771587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97683525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9737508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97649294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98648226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9778895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9760364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9708645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9474864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99042624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9559121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9740495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96574795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9725856], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9550678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99377704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.957503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9847655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.990242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96475774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99893934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9347368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98808825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98980683], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98153085], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96974754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.93674713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96771276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9009661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9287871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99009895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99913317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9940954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9915796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99274665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95730335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9244432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9897946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9993726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9699741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9957647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.47280726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9945701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.976164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9830856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9815817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9856069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9979948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99967295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9901327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9818985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9964957], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98292327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96990335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99124664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960592], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98277223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98575276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97385216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99752223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94915986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99879605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98836815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9707776], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9587122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99730855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931348], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99234474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98363394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99192405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96919507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9506415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95201504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9615737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98447716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98822516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96460265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98876935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95477295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9725415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97542125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98284924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9730219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97789097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98420906], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95342946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9694733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95058477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99465513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98006445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99552745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98997813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99968815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9686754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93669134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9462004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99495137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9680208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95188415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97048557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9679962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98791707], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99952793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96046376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.46058503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96475554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99193007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9609555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9700692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9707543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98879147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99010634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99166423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99326926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9338297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.05990411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9493416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97482425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94753486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9327971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897007], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98809296], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9600922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97394294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9923631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.976725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9647647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9997109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9994965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98787695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9884925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9888604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9944405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2434523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99874765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97500694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97401184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93651426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9894304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97584414], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94763213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94624436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95841396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9867401], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99871004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9782599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9869482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9990228], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9839273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99876523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99694204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99880767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95944417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99040633], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9420667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98427033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9893269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99702066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9864899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98707604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97824824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9934393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97551954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9886862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9927515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9706957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9726867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97696954], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9491484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934778], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99127007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2622789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9456546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9540444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99313366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9550303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99609804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98920774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99931604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97685796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99501216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38661388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9542451], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98322207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99086887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9685928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99971193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927415], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922889], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9715896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95907646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9887075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97926193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9960845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9826187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9897041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9837924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9501119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9491759], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9718106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98407394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9757912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.962043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99661666], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7144326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97562855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98152274], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (92,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 46500, 'query_cost': 0.0, 'learning_time': 9110.82595629117})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__92.pkl


ONLINE LEARNING CYCLE 93

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 376528, frozenset({LightInCell(?x0:light, ?x1:cell)}): 47066, frozenset({LightOff(?x0:light)}): 46533, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 47066, frozenset({LightOn(?x0:light)}): 533})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 377336, frozenset({LightInCell(?x0:light, ?x1:cell)}): 47167, frozenset({LightOff(?x0:light)}): 46634, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 47167, frozenset({LightOn(?x0:light)}): 533})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 378144, frozenset({LightInCell(?x0:light, ?x1:cell)}): 47268, frozenset({LightOff(?x0:light)}): 46725, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 47268, frozenset({LightOn(?x0:light)}): 543})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 378952, frozenset({LightInCell(?x0:light, ?x1:cell)}): 47369, frozenset({LightOff(?x0:light)}): 46826, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 47369, frozenset({LightOn(?x0:light)}): 543})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 379760, frozenset({LightInCell(?x0:light, ?x1:cell)}): 47470, frozenset({LightOff(?x0:light)}): 46927, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 47470, frozenset({LightOn(?x0:light)}): 543})

Learning NSRTs on 470 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 47000 datapoints
Loss: 0.00118, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00273, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00001, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10533.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9587573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9696174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92327595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99307203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9572304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9619449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9249174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9675892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98715127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98465925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9653429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96544915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9764253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97753674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.72868836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99041265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9695578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98443663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9559708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98653084], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98399836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96558124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91775376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9768313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96655434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98839563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9634034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99988544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99558663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99919844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9753395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9731157], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99297416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.07247368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9689643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9942667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9216622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9876131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9559088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99979526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97546947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9943302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9943322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9750795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9941065], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.954837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9714515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99904615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97877276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98828286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98453146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9100958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848186], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94632787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9648017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95160013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9714459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99298495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9830223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97190577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96303815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99931586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94809735], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99272835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.88532084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9139512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98455185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97198427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.48143196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9387779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96543676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99169457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93748575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9723192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9327509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97481227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9819938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99016833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98851705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01758203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99042434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96043366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9694891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97684205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9685287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99944514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993819], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9580613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.26260507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9810108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98625916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99775976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94301456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99319446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97051305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9724033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99366945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95901984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981689], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14968137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9661572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99649704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97718745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17508537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99594855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9685465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972964], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99639565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787081], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.77248806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9830194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99021775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9659784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9612117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9619762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97807485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979689], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99495065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99548906], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9560372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99352807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98606133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36810797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99556845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99026287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99478155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9685977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99480945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9197496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98608565], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9110961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95604324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97418106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99627006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99708617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9697082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98166436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9127762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9389603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98565835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98504627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99399364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98263997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9697809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98421884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2214661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97450644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99655515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99997634], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96168196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99736285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97232145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98242563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99245656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99283344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.944994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4255332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95327014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9686743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96961343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.984015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99014515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.711358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98836935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98600316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97509134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95535415], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99671865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9872846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9565712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9134804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9692732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91806304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99372226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97247475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96873015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99409866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9511848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9673663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95958364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.93995124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99672675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97862643], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99726707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97778374], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98186976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9680413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95701367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9891728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99232596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99468833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9960811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9852336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99939156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9869052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9950665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96168435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99518967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9739805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9785239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9798677], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9754644], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9640553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9963482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98569375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9828228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95971537], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (93,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 47000, 'query_cost': 0.0, 'learning_time': 9295.701325878152})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__93.pkl


ONLINE LEARNING CYCLE 94

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 380568, frozenset({LightInCell(?x0:light, ?x1:cell)}): 47571, frozenset({LightOff(?x0:light)}): 47028, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 47571, frozenset({LightOn(?x0:light)}): 543})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 381376, frozenset({LightInCell(?x0:light, ?x1:cell)}): 47672, frozenset({LightOff(?x0:light)}): 47129, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 47672, frozenset({LightOn(?x0:light)}): 543})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 382184, frozenset({LightInCell(?x0:light, ?x1:cell)}): 47773, frozenset({LightOff(?x0:light)}): 47198, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 47773, frozenset({LightOn(?x0:light)}): 575})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 382992, frozenset({LightInCell(?x0:light, ?x1:cell)}): 47874, frozenset({LightOff(?x0:light)}): 47282, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 47874, frozenset({LightOn(?x0:light)}): 592})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 383800, frozenset({LightInCell(?x0:light, ?x1:cell)}): 47975, frozenset({LightOff(?x0:light)}): 47383, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 47975, frozenset({LightOn(?x0:light)}): 592})

Learning NSRTs on 475 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 47500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97632366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99995977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99776495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99996674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99768984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97871536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97011566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9591986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93313336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99437064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99623424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98270434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92801154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99100494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9588799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99794734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9779669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9697154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9621769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.979317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94581664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9760491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96319103], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9689874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9778105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98618853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9600578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99420613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9631635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98931175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99749047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98489964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9634216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96002984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96887636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97923625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.927509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9477205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9626007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943611], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99658453], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99932164], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9615586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9758217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97793347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96946484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95722735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9758976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9767085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9726484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5831764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9737648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98716915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99261093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95831776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99646896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99683166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97806275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97815233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9247478], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97043085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98878264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99931765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95957285], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9427132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.966447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9985323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99015534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9782765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9963131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9756563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94630677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.71833795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98657936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9768146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99872434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9791812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9832994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9672813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98907244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99727446], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.35922843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99747473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9914773], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20415227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970669], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48787186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9058691], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937318], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.59623086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99299955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99900836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9220224], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93470263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9680803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9720419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96737146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99808115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97637826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9638674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94147784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.982368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97020745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9578823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96738666], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98333985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99331784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99578846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.963582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99152285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98156124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8969742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99179834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9616294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990092], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97748196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99001396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98490745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99642545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99547154], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97089136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98236156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98095286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9533029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97976226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93810534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98733073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9728916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9624168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98641205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99268895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99597573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8635829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99747014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98603785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97980946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9624083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99348795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9647068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9746755], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99170333], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9540289], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98495847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9903224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94602025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99434125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.998375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9738315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9819903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99837506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96371543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9987965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9858152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9504748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99497366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9855672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9987795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9500925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9861565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97421074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99913245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9634708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9958535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9835542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98513764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46716586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9966945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9358128], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94421977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95764846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98879886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94184726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99941754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98063105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99395764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9684057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96185523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97069347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9625877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9523503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99951273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98610926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5395616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9510966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99957347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98982286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99049264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9703467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824275], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19257984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9727944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9421386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98300195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99779236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97679365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99626094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99667794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98563987], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.62545663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9992919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9647456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.989571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9791304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97669464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9622543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9583059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94770527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9853862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99610704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9831511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9745931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9296183], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (94,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 47500, 'query_cost': 0.0, 'learning_time': 9473.181880503136})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__94.pkl


ONLINE LEARNING CYCLE 95

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 384608, frozenset({LightInCell(?x0:light, ?x1:cell)}): 48076, frozenset({LightOff(?x0:light)}): 47484, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 48076, frozenset({LightOn(?x0:light)}): 592})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 385416, frozenset({LightInCell(?x0:light, ?x1:cell)}): 48177, frozenset({LightOff(?x0:light)}): 47585, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 48177, frozenset({LightOn(?x0:light)}): 592})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 386224, frozenset({LightInCell(?x0:light, ?x1:cell)}): 48278, frozenset({LightOff(?x0:light)}): 47635, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 48278, frozenset({LightOn(?x0:light)}): 643})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 387032, frozenset({LightInCell(?x0:light, ?x1:cell)}): 48379, frozenset({LightOff(?x0:light)}): 47736, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 48379, frozenset({LightOn(?x0:light)}): 643})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 387840, frozenset({LightInCell(?x0:light, ?x1:cell)}): 48480, frozenset({LightOff(?x0:light)}): 47837, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 48480, frozenset({LightOn(?x0:light)}): 643})

Learning NSRTs on 480 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 48000 datapoints
Loss: 0.00310, iter: 0/100000
Loss: 0.00213, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6979.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97867125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98689777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96760637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9820198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98228914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877092], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98975116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9946979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8791353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9708486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98945796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98526204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99579746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98603237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97530323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98743194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9667309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.15892719], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03457945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98533744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9091824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99188215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98823047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9647043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9651618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99758995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99074817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07678733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9294955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99274725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99067706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9619929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9631157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9508312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9562477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99721396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9862839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99980575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96649146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97355986], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9385596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99447197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969804], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9741818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9601119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99482673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99524194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93997914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9655884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9686152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98588884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99072146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98989356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9226966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98954237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89667326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9699212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98426217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9812881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9614034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9492461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26425484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994198], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.82015646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9429915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96404654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98228866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99609333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9423401], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9733802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95925313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96043825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99478334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99348676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99914956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98381954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99421793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98070544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9518756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9435138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9735696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9310903], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98689955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96363664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9658041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97513634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96485126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98851204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.969035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91252774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9115137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99892914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99783885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9687228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9361838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97362757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99834746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98439157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926413], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98797107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92035866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880758], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.92949164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94676906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99200153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98300004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9690423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98358786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99953353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97236204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99775934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9575034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96979934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98902994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97556084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9528609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94487244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9862928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9673714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98304796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965737], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98722416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99458665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98211837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9684486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9720712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98987985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9769792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99872565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99818844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95214856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99944484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99631554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9594155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9726542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9761581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99914986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883637], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97671676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98181903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9702512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9675824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94990146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98781383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99872345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9939512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9195663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99132764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9819146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96765625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9638686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9803678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99728954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98768044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99694717], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94735676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9682704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9473782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95922935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98313564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98395354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960401], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99484104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9661997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95678914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96609485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98566324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96437657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97573733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9401225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99215066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97824246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99554944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99536705], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99982995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9790764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9453703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98330176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96241474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9577181], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99663395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98556733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98913693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97130036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9661995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9713151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9268669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96722436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99871975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96809924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9415877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99618155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9648958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98859936], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (95,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 48000, 'query_cost': 0.0, 'learning_time': 9654.760240040137})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__95.pkl


ONLINE LEARNING CYCLE 96

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 388648, frozenset({LightInCell(?x0:light, ?x1:cell)}): 48581, frozenset({LightOff(?x0:light)}): 47938, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 48581, frozenset({LightOn(?x0:light)}): 643})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 389456, frozenset({LightInCell(?x0:light, ?x1:cell)}): 48682, frozenset({LightOff(?x0:light)}): 48039, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 48682, frozenset({LightOn(?x0:light)}): 643})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 390264, frozenset({LightInCell(?x0:light, ?x1:cell)}): 48783, frozenset({LightOff(?x0:light)}): 48140, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 48783, frozenset({LightOn(?x0:light)}): 643})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 391072, frozenset({LightInCell(?x0:light, ?x1:cell)}): 48884, frozenset({LightOff(?x0:light)}): 48190, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 48884, frozenset({LightOn(?x0:light)}): 694})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 391880, frozenset({LightInCell(?x0:light, ?x1:cell)}): 48985, frozenset({LightOff(?x0:light)}): 48291, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 48985, frozenset({LightOn(?x0:light)}): 694})

Learning NSRTs on 485 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 48500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.962819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9447262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99485165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95748425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99782455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99256086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3565801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96334493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9682947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6773198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98320943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98934996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94648445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93390214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98259217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9727194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9642693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9574561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94514686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9538704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96397835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99748814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9777114], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98809874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9032945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95081836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98593694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99316317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3111771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9348739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930969], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48851445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9769063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9751873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9555215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9654113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9727359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.976829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97616863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99480075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99735796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96614105], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99639887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9150447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9675166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9715486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98694456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9609508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9776947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9717744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97624874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9735454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98270005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98095137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99028134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9636647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8973373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99559516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99137324], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98803604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951414], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98461807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9810936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.978722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99947995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9627647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99797297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94370043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9723424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99485636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89783746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9725852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98470414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9527982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98855704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11912602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98997957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9647419], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14986588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992952], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99764425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99048793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97038573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99281025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14261119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98264086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.10281184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96452206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5718734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9927759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99253815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98531395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99807936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99720895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97733676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9502466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5512917], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888619], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97591156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99351865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935431], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9716921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97296554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96651524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97741157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9726646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99412286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9770094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98461753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91933167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99197954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9705457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98923486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9746345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97816676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9937455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98298424], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.967526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97952634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97297275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98753995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9532173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98605615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9619439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96779966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96293825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.961493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9245601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9333946], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9818917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9978916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9191562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99438524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97905046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9927027], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99653304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95758796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7315797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99723107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9408262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98186487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.976233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94607544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9693662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99609935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99343455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98338014], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9844371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9952226], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99822146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98353803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.976745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99667996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995016], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9564305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98509896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99874955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9355531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9293389], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98929334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9716019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9807107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97398293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9708433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9084346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9985157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9728763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99383944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97939235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9778293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98324436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96764636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99786866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9952396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97941554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97292215], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99762565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9731356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98747295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9579815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99587005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99944764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98264474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97702646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99210453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93612975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9802384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98361546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9705578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99245316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98667246], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (96,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 48500, 'query_cost': 0.0, 'learning_time': 9836.234822127153})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__96.pkl


ONLINE LEARNING CYCLE 97

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 392688, frozenset({LightInCell(?x0:light, ?x1:cell)}): 49086, frozenset({LightOff(?x0:light)}): 48392, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 49086, frozenset({LightOn(?x0:light)}): 694})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 393496, frozenset({LightInCell(?x0:light, ?x1:cell)}): 49187, frozenset({LightOff(?x0:light)}): 48493, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 49187, frozenset({LightOn(?x0:light)}): 694})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 394304, frozenset({LightInCell(?x0:light, ?x1:cell)}): 49288, frozenset({LightOff(?x0:light)}): 48594, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 49288, frozenset({LightOn(?x0:light)}): 694})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 395112, frozenset({LightInCell(?x0:light, ?x1:cell)}): 49389, frozenset({LightOff(?x0:light)}): 48695, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 49389, frozenset({LightOn(?x0:light)}): 694})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 395920, frozenset({LightInCell(?x0:light, ?x1:cell)}): 49490, frozenset({LightOff(?x0:light)}): 48796, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 49490, frozenset({LightOn(?x0:light)}): 694})

Learning NSRTs on 490 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 49000 datapoints
Loss: 0.00420, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8643.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97977287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99868774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9691332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9302209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99584913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95044154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99308634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981786], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9897054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93926543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9852076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99099016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9832761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9978761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9995043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9941897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98962826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9962782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8918166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9944801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9772035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9980614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9949998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93107903], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99527884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99815845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99994206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98247534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9564447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99239254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95546794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9717299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98119754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97917944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9674551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99396294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98718673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94434184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9488786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98500353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9762938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867864], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9601241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99710256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99827653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98582244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99104863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97984296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99823415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97172606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99545175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8341628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99288064], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25817657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99952936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99392486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99866444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99153817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9409569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97633624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95544463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92084825], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9695255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97512573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9731195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95111424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98489076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99884605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98291475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97067684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98208195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98563623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99558085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96916085], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98953164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98174506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.963415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9844965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99358284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9814968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98013705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96869004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97617984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99581385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99020505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.997156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9998568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9979833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9818907], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9739807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99337006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9808572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9435185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9703613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98208004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89472985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99951583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97072566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99720955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98919713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99827695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99603647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99928975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9491508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773974], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99755013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99579275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7149241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983441], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26784238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9812767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9684891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98139733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9596276], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9633366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98397386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98518133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9522188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9749302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98144436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99203604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98721045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99312305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98674476], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99492306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9535952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99471503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98111105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96083254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98953295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9579259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9415673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99912477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97135735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99050385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949189], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99995303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99709475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97025806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9669597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97729313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04720416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95710886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90942323], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9404205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99656963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98461795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7989267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97990686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98459595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99322313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99521774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99728364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97971994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96236956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92336476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9542941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99850905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99869514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99130243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.954648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9444037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9519716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99032354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864877], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9388111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9729445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891729], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.75498116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92921036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99813634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9814592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94823784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92025596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99017876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9469715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98957586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9650794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9496376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9810622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98413116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99412805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9659292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93408257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98110753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.931475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99456596], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97743815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9799657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98992944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99237776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97140515], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9700307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9854193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98381037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9883571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96615946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9748488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99863267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9984547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95944154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96926486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98575515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95889896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99992764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99616426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9779073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99570215], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99087554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9908827], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (97,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 49000, 'query_cost': 0.0, 'learning_time': 10024.133244160155})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__97.pkl


ONLINE LEARNING CYCLE 98

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 396728, frozenset({LightInCell(?x0:light, ?x1:cell)}): 49591, frozenset({LightOff(?x0:light)}): 48897, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 49591, frozenset({LightOn(?x0:light)}): 694})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 397536, frozenset({LightInCell(?x0:light, ?x1:cell)}): 49692, frozenset({LightOff(?x0:light)}): 48998, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 49692, frozenset({LightOn(?x0:light)}): 694})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 398344, frozenset({LightInCell(?x0:light, ?x1:cell)}): 49793, frozenset({LightOff(?x0:light)}): 49099, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 49793, frozenset({LightOn(?x0:light)}): 694})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 399152, frozenset({LightInCell(?x0:light, ?x1:cell)}): 49894, frozenset({LightOff(?x0:light)}): 49200, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 49894, frozenset({LightOn(?x0:light)}): 694})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 399960, frozenset({LightInCell(?x0:light, ?x1:cell)}): 49995, frozenset({LightOff(?x0:light)}): 49301, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 49995, frozenset({LightOn(?x0:light)}): 694})

Learning NSRTs on 495 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 49500 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00310, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00003, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6498947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97499776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99422204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98450005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9805997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9438812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9634728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98265564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.956691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99689513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99879587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06007809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9566684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99863654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99710137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967465], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.960355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9749018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99000084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9471344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9682976], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99332076], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9925073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9954549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96693504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96758276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9819207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9859645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99755466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98986393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99751866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96825445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9818119], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3882862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99072784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9991971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9923203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.966767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9774446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9936348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9970031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9844997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9841548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9789259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9901028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99630904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9908973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99349016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.910688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9721697], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99082434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9353471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9826741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98350596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7442615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98472965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94420516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92689055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9732665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9694388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9460635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96080726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98190784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.959952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97485507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95252615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917871], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97696286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8758498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99757504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98984116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24009839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98873526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99506015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98636985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99805665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.962919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99928945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99754804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3158376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921654], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95343304], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9388294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806958], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5032814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9622061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98387706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97109556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98732525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98805976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9694274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9358056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97485393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9424249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994401], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96698016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95332086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9635747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9730941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9372383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6515254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98766047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99876165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99673885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988242], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95036936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.971698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9766013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98289984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96861047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36107886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9732483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98814434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97422266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98244995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97777295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98578405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9778178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99602306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98996645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.968642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8326991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96131605], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9895938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98306143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96657515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9724513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94703335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97451687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99683803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.982524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98773235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98396635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99519175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98527426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97475094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97959656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99235827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95419025], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97055686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9472407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9302512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95595825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97024137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99718887], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98166424], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9386984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96712404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9746494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97672445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9101785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99706113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97939926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98809826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.979994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96681243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9754605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97956866], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9783921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9353241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97559774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9239767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97800803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94251996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95872796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97218895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9636106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9776586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97998875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9718885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9656639], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97223383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9949578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98972595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97192824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9712657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9728197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99355704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98658437], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99754137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98379457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9374705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99561816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99314153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98420566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98508793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9540335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97355944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96145326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9457508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99682343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96861196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98918355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99167955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98950624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99743986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98516035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94816005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98914796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94693035], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (98,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 49500, 'query_cost': 0.0, 'learning_time': 10208.114301953116})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__98.pkl


ONLINE LEARNING CYCLE 99

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[Base Explorer] terminating due to max steps
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 400768, frozenset({LightInCell(?x0:light, ?x1:cell)}): 50096, frozenset({LightOff(?x0:light)}): 49402, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 50096, frozenset({LightOn(?x0:light)}): 694})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 401576, frozenset({LightInCell(?x0:light, ?x1:cell)}): 50197, frozenset({LightOff(?x0:light)}): 49503, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 50197, frozenset({LightOn(?x0:light)}): 694})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 402384, frozenset({LightInCell(?x0:light, ?x1:cell)}): 50298, frozenset({LightOff(?x0:light)}): 49604, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 50298, frozenset({LightOn(?x0:light)}): 694})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 403192, frozenset({LightInCell(?x0:light, ?x1:cell)}): 50399, frozenset({LightOff(?x0:light)}): 49705, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 50399, frozenset({LightOn(?x0:light)}): 694})
Novelty counts: defaultdict(<class 'int'>, {frozenset({Adjacent(?x0:cell, ?x1:cell)}): 404000, frozenset({LightInCell(?x0:light, ?x1:cell)}): 50500, frozenset({LightOff(?x0:light)}): 49806, frozenset({RobotInCell(?x0:robot, ?x1:cell)}): 50500, frozenset({LightOn(?x0:light)}): 694})

Learning NSRTs on 500 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 50000 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00002, iter: 2000/100000
Loss: 0.00351, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97235674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99501854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97517866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98841816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99723953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99335736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94848514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9633682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98752546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97420734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99784046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9862778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6606958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9720817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9786808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9569717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9595699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97411525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99786776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98746324], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98358786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96053183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9801364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99735445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9130677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9926466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99906737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.939999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.986376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9845553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99065024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95946157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95469356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99557334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9714986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99807346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9752445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.961746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943433], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9682972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99552685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9903847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99846166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99708664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9550788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96112216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9517742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9712525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99555355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9809802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98460203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95712245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9763238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99829483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97975564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891822], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9691995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9399616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9601006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98345876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99857354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99196523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9749546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9558323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99788696], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9433808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9896945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9660568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8769958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99024206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9559582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9926336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9732885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99588555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.991984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9878993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99962354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98975664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9941398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9836546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96776074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99311], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97657424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95647234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98395365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9679258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99256164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96448123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95755464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9272218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96135956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9759766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9340152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96682835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98613596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96792686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98709726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99989724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9438641], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.09363277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98924625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9162441], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.977085], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9779941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9656738], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.87801796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951423], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99567574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98857594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99604404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.972438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9797926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98600286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94227487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99734336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99820524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98369515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99231076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99773926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.25698152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97626466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99190193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98231953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9695926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908596], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99550533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98328143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97611755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9524999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99407285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9775475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02214666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9837882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9621011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98858136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98676574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.964386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9920196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91485584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9391048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9674383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99916464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98618215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9512188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99922913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94599617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963092], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6914805], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9764845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98303235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9533277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98367906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.630867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97780377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95134914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9091736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9751407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99821204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841092], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9813798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99350876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99955386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99378115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99329746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94285995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9964927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97507197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9688004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9931768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95062876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99913067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798036], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99186045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9699717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99783456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9741939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98493165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9721556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9643367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99924153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96804833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9833097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99356496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9800386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96015924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01974116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.47591895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9829605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9596931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48544934], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99122965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.979165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9864663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93970376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96047527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99557364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9879863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99247396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99508667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99903333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98575604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9746137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98199004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04686147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9770893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9652691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9958185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9868211], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/njk/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/njk/GitHub/research/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (99,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 50000, 'query_cost': 0.0, 'learning_time': 10393.51782019611})
Wrote out test results to results/grid_row_door__maple_q__3______RLBRIDGE_gridrowdoor-rl_rwd_shape__99.pkl
SMOOTH REWARDS[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]


Main script terminated in 16675.55162 seconds
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
WE GOT REWARDS:  0
SMOOTH REWARDS [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
