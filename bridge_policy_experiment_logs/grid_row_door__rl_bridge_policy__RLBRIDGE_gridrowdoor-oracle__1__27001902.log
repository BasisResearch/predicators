pybullet build time: Nov 28 2023 23:52:03
Running command: python predicators/main.py --env grid_row_door --approach rl_bridge_policy --experiment_id RLBRIDGE_gridrowdoor-oracle --debug --max_initial_demos 0 --sampler_learner oracle --strips_learner oracle --num_online_learning_cycles 100 --num_test_tasks 10 --num_train_tasks 1 --interactive_num_requests_per_cycle 5 --online_nsrt_learning_requests_per_cycle 5 --max_num_steps_interaction_request 100 --timeout 1000 --active_sampler_learning_num_samples 100 --same_levels True --explorer maple_q --bilevel_plan_without_sim True --mlp_regressor_max_itr 100000 --segmenter oracle --demonstrator oracle --sesame_max_skeletons_optimized 50 --use_obj_centric True --seed 1
Full config:
namespace(num_train_tasks=1, num_test_tasks=10, num_online_learning_cycles=100, online_learning_max_transitions=inf, max_initial_demos=0, allow_interaction_in_demo_tasks=True, max_num_steps_interaction_request=100, pretty_print_when_loading=False, test_env_seed_offset=10000, test_task_json_dir=None, segmenter='oracle', demonstrator='oracle', render_state_dpi=150, approach_wrapper=None, allow_exclude_goal_predicates=False, allow_state_allclose_comparison_despite_simulator_state=False, cover_multistep_action_limits=[-inf, inf], cover_multistep_degenerate_oracle_samplers=False, cover_multistep_max_tb_placements=100, cover_multistep_max_hr_placements=100, cover_multistep_thr_percent=0.4, cover_multistep_bhr_percent=0.4, cover_multistep_bimodal_goal=False, cover_multistep_goal_conditioned_sampling=False, bumpy_cover_num_bumps=2, bumpy_cover_spaces_per_bump=1, bumpy_cover_right_targets=False, bumpy_cover_bumpy_region_start=0.8, bumpy_cover_init_bumpy_prob=0.25, regional_bumpy_cover_include_impossible_nsrt=False, blocks_num_blocks_train=[3, 4], blocks_num_blocks_test=[5, 6], blocks_holding_goals=False, blocks_block_size=0.045, playroom_num_blocks_train=[3], playroom_num_blocks_test=[3], cluttered_table_num_cans_train=5, cluttered_table_num_cans_test=10, cluttered_table_can_radius=0.01, cluttered_table_collision_angle_thresh=0.7853981633974483, cluttered_table_place_goal_conditioned_sampling=True, repeated_nextto_num_dots=15, repeated_nextto_nextto_thresh=0.5, painting_initial_holding_prob=0.5, painting_lid_open_prob=0.3, painting_num_objs_train=[2, 3], painting_num_objs_test=[3, 4], painting_max_objs_in_goal=inf, painting_goal_receptacles='box_and_shelf', painting_raise_environment_failure=True, rnt_painting_num_objs_train=[8, 9, 10], rnt_painting_num_objs_test=[11, 12, 13], rnt_painting_max_objs_in_goal=2, tools_num_items_train=[2], tools_num_items_test=[2, 3], tools_num_contraptions_train=[2], tools_num_contraptions_test=[3], sandwich_ingredients_train={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, sandwich_ingredients_test={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, pybullet_draw_debug=False, pybullet_camera_width=335, pybullet_camera_height=180, pybullet_sim_steps_per_action=20, pybullet_max_ik_iters=100, pybullet_ik_tol=0.001, pybullet_robot='fetch', pybullet_birrt_num_attempts=10, pybullet_birrt_num_iters=100, pybullet_birrt_smooth_amt=50, pybullet_birrt_extend_num_interp=10, pybullet_control_mode='position', pybullet_max_vel_norm=0.05, pybullet_robot_ee_orns=defaultdict(<function GlobalSettings.<lambda> at 0x7faed07f35e0>, {'pybullet_blocks': {'fetch': (0.7071, 0.0, -0.7071, 0.0), 'panda': (0.7071, 0.7071, 0.0, 0.0)}}), ikfast_max_time=0.05, ikfast_max_candidates=100, ikfast_max_attempts=inf, ikfast_max_distance=inf, ikfast_norm=inf, pddl_blocks_procedural_train_min_num_blocks=3, pddl_blocks_procedural_train_max_num_blocks=4, pddl_blocks_procedural_train_min_num_blocks_goal=2, pddl_blocks_procedural_train_max_num_blocks_goal=3, pddl_blocks_procedural_test_min_num_blocks=5, pddl_blocks_procedural_test_max_num_blocks=6, pddl_blocks_procedural_test_min_num_blocks_goal=2, pddl_blocks_procedural_test_max_num_blocks_goal=5, pddl_blocks_procedural_new_pile_prob=0.5, pddl_blocks_fixed_train_indices=[1, 2, 3, 4, 5], pddl_blocks_fixed_test_indices=[6, 7, 8, 9, 10], pddl_delivery_procedural_train_min_num_locs=5, pddl_delivery_procedural_train_max_num_locs=10, pddl_delivery_procedural_train_min_want_locs=2, pddl_delivery_procedural_train_max_want_locs=4, pddl_delivery_procedural_train_min_extra_newspapers=0, pddl_delivery_procedural_train_max_extra_newspapers=1, pddl_delivery_procedural_test_min_num_locs=31, pddl_delivery_procedural_test_max_num_locs=40, pddl_delivery_procedural_test_min_want_locs=20, pddl_delivery_procedural_test_max_want_locs=30, pddl_delivery_procedural_test_min_extra_newspapers=0, pddl_delivery_procedural_test_max_extra_newspapers=10, pddl_easy_delivery_procedural_train_min_num_locs=3, pddl_easy_delivery_procedural_train_max_num_locs=5, pddl_easy_delivery_procedural_train_min_want_locs=1, pddl_easy_delivery_procedural_train_max_want_locs=2, pddl_easy_delivery_procedural_train_min_extra_newspapers=0, pddl_easy_delivery_procedural_train_max_extra_newspapers=1, pddl_easy_delivery_procedural_test_min_num_locs=4, pddl_easy_delivery_procedural_test_max_num_locs=6, pddl_easy_delivery_procedural_test_min_want_locs=2, pddl_easy_delivery_procedural_test_max_want_locs=3, pddl_easy_delivery_procedural_test_min_extra_newspapers=0, pddl_easy_delivery_procedural_test_max_extra_newspapers=1, pddl_spanner_procedural_train_min_nuts=1, pddl_spanner_procedural_train_max_nuts=3, pddl_spanner_procedural_train_min_extra_spanners=0, pddl_spanner_procedural_train_max_extra_spanners=2, pddl_spanner_procedural_train_min_locs=2, pddl_spanner_procedural_train_max_locs=4, pddl_spanner_procedural_test_min_nuts=10, pddl_spanner_procedural_test_max_nuts=20, pddl_spanner_procedural_test_min_extra_spanners=0, pddl_spanner_procedural_test_max_extra_spanners=10, pddl_spanner_procedural_test_min_locs=20, pddl_spanner_procedural_test_max_locs=30, pddl_forest_procedural_train_min_size=8, pddl_forest_procedural_train_max_size=10, pddl_forest_procedural_test_min_size=10, pddl_forest_procedural_test_max_size=12, pddl_gripper_procedural_train_min_num_rooms=3, pddl_gripper_procedural_train_max_num_rooms=5, pddl_gripper_procedural_train_min_num_balls=1, pddl_gripper_procedural_train_max_num_balls=2, pddl_gripper_procedural_test_min_num_rooms=3, pddl_gripper_procedural_test_max_num_rooms=5, pddl_gripper_procedural_test_min_num_balls=1, pddl_gripper_procedural_test_max_num_balls=2, pddl_ferry_procedural_train_min_num_locs=3, pddl_ferry_procedural_train_max_num_locs=5, pddl_ferry_procedural_train_min_num_cars=1, pddl_ferry_procedural_train_max_num_cars=2, pddl_ferry_procedural_test_min_num_locs=3, pddl_ferry_procedural_test_max_num_locs=5, pddl_ferry_procedural_test_min_num_cars=1, pddl_ferry_procedural_test_max_num_cars=2, pddl_miconic_procedural_train_min_buildings=1, pddl_miconic_procedural_train_max_buildings=2, pddl_miconic_procedural_train_min_floors=3, pddl_miconic_procedural_train_max_floors=5, pddl_miconic_procedural_train_min_passengers=1, pddl_miconic_procedural_train_max_passengers=2, pddl_miconic_procedural_test_min_buildings=1, pddl_miconic_procedural_test_max_buildings=2, pddl_miconic_procedural_test_min_floors=3, pddl_miconic_procedural_test_max_floors=5, pddl_miconic_procedural_test_min_passengers=1, pddl_miconic_procedural_test_max_passengers=2, stick_button_num_buttons_train=[1, 2], stick_button_num_buttons_test=[3, 4], stick_button_disable_angles=True, stick_button_holder_scale=0.1, screws_num_screws_train=[15, 20], screws_num_screws_test=[25, 30], doors_room_map_size=2, test_doors_room_map_size=5, doors_min_obstacles_per_room=0, doors_max_obstacles_per_room=3, doors_min_room_exists_frac=0.25, doors_max_room_exists_frac=0.75, doors_birrt_num_attempts=10, doors_birrt_num_iters=100, doors_birrt_smooth_amt=50, doors_draw_debug=False, timeout=1000.0, doorknobs_target_value=0.75, narrow_passage_open_door_refine_penalty=0, narrow_passage_door_width_padding_lb=0.0001, narrow_passage_door_width_padding_ub=0.015, narrow_passage_passage_width_padding_lb=0.0005, narrow_passage_passage_width_padding_ub=0.02, narrow_passage_birrt_num_attempts=10, narrow_passage_birrt_num_iters=100, narrow_passage_birrt_smooth_amt=50, exit_garage_clear_refine_penalty=0, exit_garage_min_num_obstacles=2, exit_garage_max_num_obstacles=3, exit_garage_rrt_extend_fn_threshold=0.001, exit_garage_rrt_num_control_samples=100, exit_garage_rrt_num_attempts=3, exit_garage_rrt_num_iters=100, exit_garage_rrt_sample_goal_eps=0.1, exit_garage_motion_planning_ignore_obstacles=False, exit_garage_raise_environment_failure=False, coffee_num_cups_train=[1], coffee_num_cups_test=[4], coffee_jug_init_rot_amt=2.0943951023931953, satellites_num_sat_train=[2, 3], satellites_num_obj_train=[3, 4], satellites_num_sat_test=[3, 4], satellites_num_obj_test=[4, 5], sokoban_gym_name='Sokoban-v0', kitchen_use_perfect_samplers=False, kitchen_goals='all', kitchen_render_set_of_marks=False, kitchen_use_combo_move_nsrts=False, kitchen_randomize_init_state=False, sticky_table_num_tables=5, sticky_table_place_smooth_fall_prob=0.6, sticky_table_place_sticky_fall_prob=0.0, sticky_table_pick_success_prob=1.0, sticky_table_tricky_floor_place_sticky_fall_prob=0.5, sticky_table_place_ball_fall_prob=1.0, sticky_table_num_sticky_tables=1, grid_row_num_cells=5, test_grid_row_num_cells=10, num_doors=2, gridworld_num_rows=4, gridworld_num_cols=4, random_options_max_tries=100, option_model_terminate_on_repeat=True, option_model_use_gui=False, gnn_num_message_passing=3, gnn_layer_size=16, gnn_learning_rate=0.001, gnn_weight_decay=0, gnn_num_epochs=25000, gnn_batch_size=128, gnn_do_normalization=False, gnn_use_validation_set=True, gnn_option_policy_solve_with_shooting=True, gnn_option_policy_shooting_variance=0.1, gnn_option_policy_shooting_max_samples=100, metacontroller_max_samples=100, pg3_heuristic='policy_guided', pg3_search_method='hill_climbing', pg3_task_planning_heuristic='lmcut', pg3_gbfs_max_expansions=100, pg3_hc_enforced_depth=0, pg3_max_policy_guided_rollout=50, pg3_plan_compare_inapplicable_cost=0.99, pg3_add_condition_allow_new_vars=True, pg3_max_analogies=5, pg3_init_policy=None, pg3_init_base_env=None, nsrt_rl_reward_epsilon=0.01, nsrt_rl_pos_reward=0, nsrt_rl_neg_reward=-1, nsrt_rl_option_learner='dummy_rl', nsrt_rl_valid_reward_steps_threshold=10, pretrained_model_prompt_cache_dir='pretrained_model_cache', llm_openai_max_response_tokens=700, llm_use_cache_only=False, llm_model_name='text-curie-001', llm_temperature=0.5, llm_num_completions=1, vlm_model_name='gemini-pro-vision', sesame_task_planner='astar', sesame_task_planning_heuristic='lmcut', sesame_allow_noops=True, sesame_check_expected_atoms=True, sesame_use_necessary_atoms=True, sesame_use_visited_state_set=False, sesame_grounder='naive', sesame_check_static_object_changes=False, sesame_static_object_change_tol=0.001, bilevel_plan_without_sim=True, log_dir='logs', results_dir='results', eval_trajectories_dir='eval_trajectories', approach_dir='saved_approaches', data_dir='saved_datasets', video_dir='videos', image_dir='images', video_fps=2, failure_video_mode='longest_only', offline_data_planning_timeout=-1, offline_data_task_planning_heuristic='default', offline_data_max_skeletons_optimized=-1, offline_data_num_replays=500, offline_data_bilevel_plan_without_sim=None, teacher_dataset_num_examples=1, min_data_for_nsrt=0, min_perc_data_for_nsrt=0, data_orderings_to_search=1, strips_learner='oracle', disable_harmlessness_check=False, enable_harmless_op_pruning=False, backchaining_check_intermediate_harmlessness=False, pnad_search_without_del=False, pnad_search_timeout=10.0, compute_sidelining_objective_value=False, clustering_learner_true_pos_weight=10, clustering_learner_false_pos_weight=1, cluster_and_intersect_prederror_max_groundings=10, cluster_and_search_inner_search_max_expansions=2500, cluster_and_search_inner_search_timeout=30, cluster_and_search_score_func_max_groundings=10000, cluster_and_search_var_count_weight=0.1, cluster_and_search_precon_size_weight=0.01, cluster_and_intersect_prune_low_data_pnads=False, cluster_and_intersect_min_datastore_fraction=0.0, use_torch_gpu=False, learning_rate=0.001, weight_decay=0, mlp_regressor_max_itr=100000, mlp_regressor_hid_sizes=[32, 32], mlp_regressor_clip_gradients=True, mlp_regressor_gradient_clip_value=5, mlp_classifier_hid_sizes=[32, 32], mlp_classifier_balance_data=True, cnn_regressor_max_itr=500, cnn_regressor_conv_channel_nums=[3, 3], cnn_regressor_conv_kernel_sizes=[5, 3], cnn_regressor_linear_hid_sizes=[32, 8], cnn_regressor_clip_gradients=True, cnn_regressor_gradient_clip_value=5, neural_gaus_regressor_hid_sizes=[32, 32], neural_gaus_regressor_max_itr=1000, mlp_classifier_n_iter_no_change=5000, implicit_mlp_regressor_max_itr=10000, implicit_mlp_regressor_num_negative_data_per_input=5, implicit_mlp_regressor_num_samples_per_inference=100, implicit_mlp_regressor_temperature=1.0, implicit_mlp_regressor_inference_method='derivative_free', implicit_mlp_regressor_derivative_free_num_iters=3, implicit_mlp_regressor_derivative_free_sigma_init=0.33, implicit_mlp_regressor_derivative_free_shrink_scale=0.5, implicit_mlp_regressor_grid_num_ticks_per_dim=100, pytorch_train_print_every=1000, sampler_learner='oracle', max_rejection_sampling_tries=100, sampler_mlp_classifier_max_itr=10000, sampler_mlp_classifier_n_reinitialize_tries=1, sampler_learning_use_goals=False, sampler_disable_classifier=False, sampler_learning_regressor_model='neural_gaussian', sampler_learning_max_negative_data=100000, option_learning_action_converter='identity', interactive_num_ensemble_members=10, interactive_query_policy='threshold', interactive_score_function='entropy', interactive_score_threshold=0.05, interactive_random_query_prob=0.5, interactive_num_requests_per_cycle=5, predicate_classifier_model='mlp', predicate_mlp_classifier_max_itr=100000, predicate_mlp_classifier_n_reinitialize_tries=1, predicate_mlp_classifier_init='default', predicate_knn_classifier_n_neighbors=1, online_nsrt_learning_requests_per_cycle=5, online_learning_max_novelty_count=0, active_sampler_learning_model='myopic_classifier_mlp', active_sampler_learning_feature_selection='all', active_sampler_learning_knn_neighbors=3, active_sampler_learning_use_teacher=True, active_sampler_learning_score_gamma=0.5, active_sampler_learning_fitted_q_iters=5, active_sampler_learning_explore_pursue_goal_interval=5, active_sampler_learning_object_specific_samplers=False, active_sampler_learning_n_iter_no_change=5000, active_sampler_learning_num_lookahead_samples=5, active_sampler_learning_explore_length_base=2, active_sampler_learning_num_ensemble_members=10, active_sampler_learning_exploration_sample_strategy='epsilon_greedy', active_sampler_learning_exploration_epsilon=1.0, active_sampler_learning_replay_buffer_size=1000000, active_sampler_learning_batch_size=64, use_epsilon_annealing=True, min_epsilon=0.05, polyak_tau=0.0025, same_levels=True, polyak_true=True, use_old_exploration=False, use_callplanner=True, random_bridge=False, use_obj_centric=True, rl_rwd_shape=False, skill_competence_model='optimistic', skill_competence_model_num_em_iters=3, skill_competence_model_max_train_iters=1000, skill_competence_model_learning_rate=0.01, skill_competence_model_lookahead=1, skill_competence_model_optimistic_window_size=5, skill_competence_model_optimistic_recency_size=5, skill_competence_default_alpha_beta=(10.0, 1.0), skill_competence_initial_prediction_bonus=0.5, refinement_estimator='oracle', refinement_estimation_num_skeletons_generated=8, refinement_data_num_skeletons=8, refinement_data_skeleton_generator_timeout=20, refinement_data_low_level_search_timeout=5, refinement_data_failed_refinement_penalty=5, refinement_data_include_execution_cost=True, refinement_data_low_level_execution_cost=0.05, cnn_refinement_estimator_crop=False, cnn_refinement_estimator_crop_bounds=(320, 400, 100, 650), cnn_refinement_estimator_downsample=2, bridge_policy='learned_ldl', glib_min_goal_size=1, glib_max_goal_size=1, glib_num_babbles=10, greedy_lookahead_max_num_trajectories=100, greedy_lookahead_max_traj_length=2, greedy_lookahead_max_num_resamples=10, active_sampler_explore_use_ucb_bonus=True, active_sampler_explore_bonus=0.1, active_sampler_explore_task_strategy='planning_progress', active_sampler_explorer_replan_frequency=100, active_sampler_explorer_planning_progress_max_tasks=10, active_sampler_explorer_planning_progress_max_replan_tasks=5, active_sampler_explorer_skip_perfect=True, active_sampler_learning_init_cycles_to_pursue_goal=1, grammar_search_grammar_includes_givens=True, grammar_search_grammar_includes_foralls=True, grammar_search_grammar_use_diff_features=False, grammar_search_grammar_use_euclidean_dist=False, grammar_search_use_handcoded_debug_grammar=False, grammar_search_pred_selection_approach='score_optimization', grammar_search_pred_clusterer='oracle', grammar_search_true_pos_weight=10, grammar_search_false_pos_weight=1, grammar_search_bf_weight=1, grammar_search_operator_complexity_weight=0.0, grammar_search_pred_complexity_weight=0.0001, grammar_search_max_predicates=200, grammar_search_predicate_cost_upper_bound=6, grammar_search_prune_redundant_preds=True, grammar_search_score_function='expected_nodes_created', grammar_search_heuristic_based_weight=10.0, grammar_search_max_demos=inf, grammar_search_max_nondemos=50, grammar_search_energy_based_temperature=10.0, grammar_search_task_planning_timeout=1.0, grammar_search_search_algorithm='hill_climbing', grammar_search_hill_climbing_depth=0, grammar_search_parallelize_hill_climbing=False, grammar_search_gbfs_num_evals=1000, grammar_search_off_demo_count_penalty=1.0, grammar_search_on_demo_count_penalty=10.0, grammar_search_suspicious_state_penalty=10.0, grammar_search_expected_nodes_upper_bound=100000.0, grammar_search_expected_nodes_optimal_demo_prob=0.99999, grammar_search_expected_nodes_backtracking_cost=1000.0, grammar_search_expected_nodes_allow_noops=True, grammar_search_classifier_pretty_str_names=['?x', '?y', '?z'], grammar_search_vlm_atom_proposal_prompt_type='options_labels_whole_traj', grammar_search_vlm_atom_label_prompt_type='per_scene_naive', grammar_search_vlm_atom_proposal_use_debug=False, grammar_search_clustering_gmm_num_components=10, handmade_demo_filename='', vlm_trajs_folder_name='', get_arg_specific_settings=<classmethod object at 0x7faed07e8b20>, perceiver='trivial', horizon=30, active_sampler_learning_num_samples=100, max_num_steps_option_rollout=1000, sesame_propagate_failures='immediately', offline_data_method='demo', option_model_name='oracle', sesame_max_skeletons_optimized=50, sesame_max_samples_per_step=10, grammar_search_expected_nodes_max_skeletons=-1, grammar_search_diff_features_const_multiplier=1e-06, grammar_search_euclidean_feature_names=[('x', 'y', 'x', 'y')], grammar_search_euclidean_const_multiplier=1e-06, cover_num_blocks=2, cover_num_targets=2, cover_block_widths=[0.1, 0.07], cover_target_widths=[0.05, 0.03], cover_initial_holding_prob=0.75, env='grid_row_door', approach='rl_bridge_policy', excluded_predicates='', included_options='', seed=1, option_learner='no_learning', explorer='maple_q', execution_monitor='trivial', make_test_videos=False, make_failure_videos=False, make_interaction_videos=False, make_demo_videos=False, make_demo_images=False, make_cogman_videos=False, load_approach=False, restart_learning=False, load_data=False, load_atoms=False, save_atoms=False, skip_until_cycle=-1, experiment_id='RLBRIDGE_gridrowdoor-oracle', load_experiment_id='', log_file='', use_gui=False, loglevel=10, crash_on_failure=False)
Git commit hash: b884c40ed028ad57848b984e8cb6e73a1308ed73
/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: [33mWARN: Box bound precision lowered by casting to float32[0m
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")


CREATED 0 DEMONSTRATIONS
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.71168077], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35583064], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.67778134], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.86337596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.09911793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6054423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5879502], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8333057], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6534547], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.80511814], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.74759066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.17495984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.06106421], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9464957], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.75034827], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04158114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.33576083], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96801174], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.68832934], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.05126155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35158107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5548021], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.4905236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6944308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3614405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2837099], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1774893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.06084849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.74476403], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.74105775], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37214765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.02475725], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.6862524], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0176393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.03215954], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00799785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.12466547], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.22037458], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0954706], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67477685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.36251846], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.19477443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00505909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7118779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.21273826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18707676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6122899], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4176214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.04234722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8860134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4558883], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97097206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7187768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3040082], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53107274], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.31786746], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6467526], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.82496405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20847818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4575034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.24726489], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.20029403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9994192], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98852634], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04154932], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.7561966], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4032777], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.03131383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7077402], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.6496242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00128484], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37070158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8320212], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6543947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9593392], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.69049156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.02773174], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.68170255], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13886298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70211136], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.86661315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.43066773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1015203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.747483], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72188157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5537156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.27438375], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.5535484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.980403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8874029], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.80423903], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.47780317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7004801], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.45736718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.589045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7856572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9365357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.36982632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8621749], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7994673], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81095266], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26219717], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8127351], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.42732316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99920064], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8052327], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.38488406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4871698], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.050613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9260521], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14295645], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9660559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49232465], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42987886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.19237483], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20699407], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5790169], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7772902], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20485348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.05551341], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.61709696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.82544905], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3709879], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5107509], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 0, 'query_cost': 0.0, 'learning_time': 5.095003871247172e-06})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__None.pkl


ONLINE LEARNING CYCLE 0

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 5 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 410 datapoints
Loss: 0.00195, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss: 0.00000, iter: 15000/100000
Loss: 0.00000, iter: 16000/100000
Loss: 0.00000, iter: 17000/100000
Loss: 0.00000, iter: 18000/100000
Loss: 0.00000, iter: 19000/100000
Loss: 0.00000, iter: 20000/100000
Loss: 0.00000, iter: 21000/100000
Loss: 0.00000, iter: 22000/100000
Loss: 0.00000, iter: 23000/100000
Loss: 0.00000, iter: 24000/100000
Loss: 0.00000, iter: 25000/100000
Loss: 0.00000, iter: 26000/100000
Loss: 0.00000, iter: 27000/100000
Loss: 0.00000, iter: 28000/100000
Loss: 0.00000, iter: 29000/100000
Loss did not improve after 5000 itrs, terminating at itr 29269.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98280734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9957192], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9399529], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99454194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9873238], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98825353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9924352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.96025604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9614431], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98666716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.937094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99516875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99839044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9952383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.94201964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98650193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9713143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9686555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9798811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.95195454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98601675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98361284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9979795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9853301], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9625973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9963848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98128784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99326944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98067135], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98471373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9833112], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9991961], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9905708], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9939508], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.97214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9875904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9993011], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9951935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98584616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9956539], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9794968], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9763039], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98771167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.96655285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99317294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9965824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9877832], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9867607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9884693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.94295174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9961123], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99841875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9971242], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98899263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98247653], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9981406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98111445], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99727607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9726509], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9830318], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99794036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9304622], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9795191], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9975575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.97748053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99316925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.97197956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9840221], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98434895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9944592], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98864675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9830222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99544066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9817701], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9919208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.96005064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99618185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9470326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99641526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.93732643], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98787034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98413396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.973005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98931295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9883527], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.95437455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9849069], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.98166466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99875015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9273425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9539125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.959903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9750803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99430585], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9449028], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9869498], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.98886675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99881923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9940004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.96151716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.89611596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9914354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9957717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9822919], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.97133714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9711733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9916413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.98755306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9919034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9829771], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9618271], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.993649], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97212636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.949904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.978003], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9776066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99974746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9963745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99950564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.96647614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99716216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99004406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9886553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9561259], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.992302], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99230164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9951932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98258847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9993672], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.995506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9634067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99014115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99906653], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9750331], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97209054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9553834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9609842], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9695247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98403794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9436041], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99686307], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9845048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.89669305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9794392], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99518085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9985286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9846075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99913424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.96861196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.8932269], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.993506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9610149], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99678224], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9443406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9941201], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9916295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.93985116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99914664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99066144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9976861], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99504197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9948195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9690129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9814175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9861064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.98000205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9919215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9950175], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98708546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98737216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.97361976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99697316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9929719], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9853396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9999307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99392176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99645144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.96562266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99219674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9677491], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9931349], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9982994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9758893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99698865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.980238], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9809392], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.95250475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.997666], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.95207536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9962846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99398017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98830736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9609567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.93856275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.93049437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9791025], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9516576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.8870798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9957095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9978018], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9946175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.99848735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.99549216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.99780715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9979197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.95952505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9859033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.98922116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.99380106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.970885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9957313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.97003436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.99786925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9495917], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9936712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.95406705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9719575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9875644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9764705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9881053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.99403125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9943257], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.979467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99911946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98799604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98527354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.96105516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9800137], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99434924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9349889], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.989849], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99670905], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9850033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98036224], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9897942], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9777317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9475483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99999845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.94331276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.96706825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9876606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99695015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9167211], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9845938], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98391926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9481293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9865133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9964927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.979519], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9236064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98681545], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9934411], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9623681], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9978611], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.96328515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9897186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9751185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9347587], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9805189], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9978261], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9897315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9627156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9947576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9693345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97985196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9994146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99819213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9799869], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9871327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.997852], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99377465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.998316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9773624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9987163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9877101], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97104806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97365445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9974176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98952734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.998901], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (0,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0][1][0.0][0.0]
[0.0][1][0.0][0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 505, 'query_cost': 0.0, 'learning_time': 50.5980292520253})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__0.pkl


ONLINE LEARNING CYCLE 1

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 10 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 744 datapoints
Loss: 0.00003, iter: 0/100000
Loss: 0.00003, iter: 1000/100000
Loss: 0.00005, iter: 2000/100000
Loss: 0.00674, iter: 3000/100000
Loss: 0.00007, iter: 4000/100000
Loss: 0.00007, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5013.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9824948], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97186166], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9691288], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869508], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9986071], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933997], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9781129], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919512], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99552435], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8694829], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98687124], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97262865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9893829], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9985004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9764965], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9874779], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99222267], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.970001], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9780886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98354656], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98755485], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9741048], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.996683], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9631158], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9920053], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9972221], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.962699], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9598427], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.985686], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9930107], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9893195], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9950387], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9932824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99894476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9905443], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.941453], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.96790403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9996363], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9757967], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.988786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98391443], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97121376], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95860606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9967634], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9619903], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96575034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98767185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96949387], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97398835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.97441655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9916097], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99881303], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.92961836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.95747036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9945645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9754699], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9433658], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.992995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99345976], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98855793], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9801844], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9902138], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97637427], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.993649], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.93093187], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93102026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9876353], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9922555], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9076798], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.89922637], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.99837613], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99526566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9921074], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9997842], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9993141], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9999121], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.97134346], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9658813], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.970923], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9895814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9923122], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9703223], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98819363], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99657685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99144703], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99130607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.93655723], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93409675], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9723153], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99205357], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96267515], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9805159], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.996094], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960652], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9933975], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916568], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (1,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0][1, 2][0.0, 0.0][0.0, 0.0]
[0.0, 0.0][1, 2][0.0, 0.0][0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 934, 'query_cost': 0.0, 'learning_time': 62.113745257025585})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__1.pkl


ONLINE LEARNING CYCLE 2

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 15 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 1122 datapoints
Loss: 0.00011, iter: 0/100000
Loss: 0.00016, iter: 1000/100000
Loss: 0.00015, iter: 2000/100000
Loss: 0.00021, iter: 3000/100000
Loss: 0.00003, iter: 4000/100000
Loss: 0.00034, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5002.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9822511], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92834705], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9813685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959223], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92794454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8718673], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96059716], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95000225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95848376], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95258695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9798102], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9304973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9311351], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9441172], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98284215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9560718], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99223167], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9493603], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99344975], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95167863], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9651718], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9156027], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9800725], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95483667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9527537], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.85942614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9626877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.970487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.95850354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93449605], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9989762], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95572925], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99175507], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9463791], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9976252], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9704321], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9945304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9530769], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9739698], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9987251], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.953873], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99892324], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747892], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9984679], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9399101], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9373335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9389413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9722456], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97405463], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9170911], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8463101], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.97026324], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98010236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99807954], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9620485], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.985127], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95975167], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.95701706], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9843737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9307367], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9810177], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9638491], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98911905], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9534885], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.93732035], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.933526], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9618128], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9581314], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.93764645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.88180923], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.99849623], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9566716], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9974184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9441396], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.97013175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9526668], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9837691], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99626493], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95582515], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9765728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9534584], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99570405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95659596], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9747865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9501183], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.958858], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9602032], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97725356], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91219413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9918859], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96010715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99249965], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95237845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99312323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9507496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97132564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94905394], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (2,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0][1, 2, 3][0.0, 0.0, 0.0][0.0, 0.0, 0.0]
[0.0, 0.0, 0.0][1, 2, 3][0.0, 0.0, 0.0][0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1412, 'query_cost': 0.0, 'learning_time': 74.97429629103863})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__2.pkl


ONLINE LEARNING CYCLE 3

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 20 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 1416 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00101, iter: 1000/100000
Loss: 0.00017, iter: 2000/100000
Loss: 0.00592, iter: 3000/100000
Loss: 0.00112, iter: 4000/100000
Loss: 0.00015, iter: 5000/100000
Loss: 0.00003, iter: 6000/100000
Loss: 0.00002, iter: 7000/100000
Loss: 0.00012, iter: 8000/100000
Loss: 0.00011, iter: 9000/100000
Loss: 0.00007, iter: 10000/100000
Loss: 0.00006, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11647.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9992564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9804296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9116363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9211648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9225752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.93851376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9405167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9289729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.937769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9198152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9202309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.93904024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9183263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9244867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92913496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92495984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9238698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9101018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.93353194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9281527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9606704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92405504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9710349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.938934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9373418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9612464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9210938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9628581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9227095], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98436904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9580605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.89544964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9123931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.90463734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9077032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9083632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.92637205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.90694624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9072959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.90536064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.92090535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.91857004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8931309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9000926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.92201835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99246854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.92430997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.90272874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9204474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.91615576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.89728445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.91908157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9298684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.90140384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.912937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9056016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.915872], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9659173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9650716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8596622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9225667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9129234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9044101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8843789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.90380806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8975522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.90984476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.88731706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9036202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8968718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8897785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.88800323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8839783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8920901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.90834224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.887656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.88962317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.894098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.88725764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.87143135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8887638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.89157486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.89613986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8783595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8831783], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99432546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.98294634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9018698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9597154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9067128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9401499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9078642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.92152894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.92068326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.94041324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.93964845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9458288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9342345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9275772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9235865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.94783384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9122447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9122797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9136297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9759158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9265771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9187746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.92250675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9267225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.917459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.92041504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.92281055], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96759903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9814052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8676461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9007093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.90253323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8760672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8932375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8949784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8840384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.90334857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8889412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.89689], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9041397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92055917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8827592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.90153515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8929321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.89741695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.88994664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91255724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8922231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8898408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.87794006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.88239574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.89209443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9134893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8904925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8888857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8915523], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9976448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9917929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.90805376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9052285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9480152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.920238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.93155116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.93878984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9286224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.92351526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9364789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9399242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9265706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.91330034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.91737527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9230351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.92063755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.92047673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9466993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.93996507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9261601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.95908415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9326076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9089202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9339087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9191526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.92872673], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9462102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9318611], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8171456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.87348855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8701577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8892941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8687736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.92028916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.87412953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8763435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.89490867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.90758073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.863172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.89695936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.86548674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8646575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.867762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8708126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8922149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8897119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8902176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8693443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8719193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.87255836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.86976135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8600581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8752516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.89501387], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9580703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.97786015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.87026566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.887516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8947318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.90151244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8822539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8769059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.89639646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8961292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8833119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.88547117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8804858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.88620573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8956306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9135847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.90711033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8977551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.87838954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.87789524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.88841516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9112906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8816173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8741735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9118456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.90838706], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9950492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97184825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.89026713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9167238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9221199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9260579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9235206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.90965056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91585565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94519955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9353838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96357834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.93358815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92873293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91178185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9364244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9251798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92690635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9236747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9378009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9098803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9192344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9260124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9226668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.90193397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9111279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91349983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91818154], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9484136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9352753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.82664585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8725134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.87240624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8757142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9137679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8903366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.87241834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9030124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8824917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.88018316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.88676023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.88495725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8691797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.86292046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8663842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8829147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.87382257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.86619025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.87309164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8829105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8776477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.87211585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91100806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.89640445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.89081573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.86845684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.89617276], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (3,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0][1, 2, 3, 4][0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0][1, 2, 3, 4][0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1793, 'query_cost': 0.0, 'learning_time': 99.79401536402293})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__3.pkl


ONLINE LEARNING CYCLE 4

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 25 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 1825 datapoints
Loss: 0.00036, iter: 0/100000
Loss: 0.00159, iter: 1000/100000
Loss: 0.00041, iter: 2000/100000
Loss: 0.00105, iter: 3000/100000
Loss: 0.00218, iter: 4000/100000
Loss: 0.00137, iter: 5000/100000
Loss: 0.00180, iter: 6000/100000
Loss: 0.00037, iter: 7000/100000
Loss: 0.00045, iter: 8000/100000
Loss: 0.00057, iter: 9000/100000
Loss: 0.00078, iter: 10000/100000
Loss: 0.00015, iter: 11000/100000
Loss: 0.00131, iter: 12000/100000
Loss: 0.00101, iter: 13000/100000
Loss: 0.00090, iter: 14000/100000
Loss: 0.00066, iter: 15000/100000
Loss: 0.00043, iter: 16000/100000
Loss: 0.00138, iter: 17000/100000
Loss did not improve after 5000 itrs, terminating at itr 17421.
Loaded best model with loss: 0.00007
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.12124525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14046663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15104777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13186216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14267744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13068888], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13210759], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14644286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13351798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15847711], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14935948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13329038], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13797201], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1334084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14693296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1555485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15822248], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.16342896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13021813], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13596536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14184971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1362635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13837102], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13523749], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19265532], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1362814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13604657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13552926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13258117], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13074252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.15929146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13987753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1308078], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13602465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13933107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14209677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13287783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1431384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14207053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14279513], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.16933908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.12360365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.15047449], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.16398972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.16312395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14079732], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.15191461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13613671], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.16989623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13087991], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.12632258], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.15676579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1628414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14206983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13282101], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.12734896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13296343], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1457192], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14305235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13108562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.18309617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1547121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1327202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14579171], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1434422], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13818158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13680203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.17555037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14248873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.17896713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14835119], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14789957], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13082594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.16640645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.11680023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.18861085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14141355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14426723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13771923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13042526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.10244513], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13565712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13728173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13440491], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13176675], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.14047955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13304588], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.15840143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.16053164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.1491506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.12446202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13390061], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.16627192], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.15525973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13117251], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.1574946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.1365695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13352275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13568176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13203228], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13543282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13700226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13904719], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.12699376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.1212733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.14627133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13247308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.14220558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13320614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.14068295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13351035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.11594511], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.11902577], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.146725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17587966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13469015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14602531], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.10692547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14071934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1423609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14854395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15789025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15415041], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15410712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.12760012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.145774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1436246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13477343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14057948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1443708], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13762209], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.11930458], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13856435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1365848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1349044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.12671635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14223681], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14929657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17592564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13095516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14294584], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.1469926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.1623159], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.152822], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.1336019], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.1387211], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.14046142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.1354129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.14020197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.15178828], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.17520304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.14354278], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.16672654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.15079403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13525726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.1620611], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.14817822], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13804016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13693382], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.14511284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.14943834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13215657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13152467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13474865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.10573095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13543658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.15459897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.14791739], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.15099408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1440789], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.17097956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.15988524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13949913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.17595708], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14624341], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13222061], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14101799], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.15152448], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.12500063], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14689583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1398313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14852796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1421427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14658555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.16817077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1292469], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1450157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.17428651], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1613876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13256209], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14691252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13499324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14770678], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.15659752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13660935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13614798], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.13097243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.14008164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.15240753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.13245663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.14331304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.1324236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.13429806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.1386044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.1419486], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.13674395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.14301768], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.14161472], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.14676031], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.13707511], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.13637522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.13566943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.12929559], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.1350589], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.13601507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.14257741], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.13057005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.14513467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.16577278], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.13724785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.16174297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.12223433], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14504674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13129705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.12620823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15467867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.12746786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13163485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13918257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.10683435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13607045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13123134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17118554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13399805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15580736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17428204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1654189], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1529234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13693053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1275508], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13307297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13440362], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14404011], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18854792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13074914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.16644739], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.12637247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15010902], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13565667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1292647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13901913], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13518742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1379958], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13239197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13824114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.11915206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1320496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14631277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17291805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.16500905], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1394618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13847902], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13391328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1543485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1312841], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14112882], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1363499], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13585477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13663626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.12760347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15267214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13497446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.11273385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1448412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15301727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.158863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14146778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1319765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1580665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15275928], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (4,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5][0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5][0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2298, 'query_cost': 0.0, 'learning_time': 135.8824727680185})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__4.pkl


ONLINE LEARNING CYCLE 5

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 30 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 2142 datapoints
Loss: 0.00201, iter: 0/100000
Loss: 0.00060, iter: 1000/100000
Loss: 0.00106, iter: 2000/100000
Loss: 0.00049, iter: 3000/100000
Loss: 0.00093, iter: 4000/100000
Loss: 0.01402, iter: 5000/100000
Loss: 0.00109, iter: 6000/100000
Loss: 0.01437, iter: 7000/100000
Loss: 0.00044, iter: 8000/100000
Loss: 0.00087, iter: 9000/100000
Loss: 0.01499, iter: 10000/100000
Loss: 0.00259, iter: 11000/100000
Loss: 0.00242, iter: 12000/100000
Loss: 0.00048, iter: 13000/100000
Loss: 0.00214, iter: 14000/100000
Loss: 0.01566, iter: 15000/100000
Loss: 0.00290, iter: 16000/100000
Loss: 0.00148, iter: 17000/100000
Loss did not improve after 5000 itrs, terminating at itr 17308.
Loaded best model with loss: 0.00016
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.65130574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70209825], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.02311806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01981224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.014692], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.02075404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01868455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01166185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0048898], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.02201441], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00224033], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6417833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6964331], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.05931607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.01224225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.03109749], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.03508734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.02579548], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.03416117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.01635051], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00259495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6127325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7127444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00590747], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.01621961], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.02108232], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00748779], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.02729675], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.02351698], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.00522467], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.02178004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6406535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7117522], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.02058081], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.01618649], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.00382067], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00571718], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.03085115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.0357212], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00586529], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.03587336], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.64652616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6993881], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01012636], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.05268406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.04106157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01227438], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0037542], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0487646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.04991969], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01075469], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01084376], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.62744313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7037044], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.05822673], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.01353417], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.02706255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00262016], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.00598185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00841578], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.02251619], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.00785413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6111269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7099884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.03311134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00254354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.01455307], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.00182761], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.05335462], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.05684191], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00114313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00249096], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6368988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71831083], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.00372391], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.0749074], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.04339301], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.02737858], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.03184908], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.02579868], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.00318615], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.00331395], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.62908524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71883655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01746255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00945472], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00661261], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00562442], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00485011], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00018721], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00180282], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04381922], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.05902723], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6425695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7025631], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04861924], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.02235433], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00613006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01553449], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.02353079], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00889475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01787045], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.02216231], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00388773], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (5,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6][0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6][0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2715, 'query_cost': 0.0, 'learning_time': 172.7618204120372})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__5.pkl


ONLINE LEARNING CYCLE 6

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 35 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 2449 datapoints
Loss: 0.00673, iter: 0/100000
Loss: 0.01025, iter: 1000/100000
Loss: 0.00405, iter: 2000/100000
Loss: 0.00129, iter: 3000/100000
Loss: 0.00584, iter: 4000/100000
Loss: 0.00227, iter: 5000/100000
Loss: 0.00147, iter: 6000/100000
Loss: 0.00128, iter: 7000/100000
Loss: 0.00129, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8783.
Loaded best model with loss: 0.00032
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6340454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74958134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.02191729], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-2.4041337e-05], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01628957], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01578124], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01686816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00169828], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01444471], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00224384], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0357542], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.65866065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7393646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.16054781], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6479757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7370446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.04173923], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.01624098], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.00282709], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00602463], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.02917918], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.01432628], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.64452267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78127694], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.00217348], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00867115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.01184073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00023509], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.01188835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00563452], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.01130761], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.00095594], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.63363415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7404631], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.03109473], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00719579], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.00049117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.00999607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.03873765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.04488167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.06803932], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.08547115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.09034687], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6264741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7430903], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.03505816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01533606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00049761], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.02321618], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.0451358], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00223732], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01012153], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.03908936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01043228], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.64780486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7463148], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.02959642], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.00196638], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.04829172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.03972312], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00382981], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.03263723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.03790735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.00170178], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.00434012], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6581947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73952], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14464869], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.65069056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73226273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.03721155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.01097372], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.03851631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.03640701], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00288798], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.00303376], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6467358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7700322], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.01703347], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.02654647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.03926091], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.00209285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.0037229], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.00188343], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.00373588], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.0183138], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6466932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74898994], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.02119065], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01458211], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.0196028], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.02194684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.03634579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.04389471], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00091986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00778031], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00813169], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.64889437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7326468], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.16822895], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6344201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72772354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.04430538], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.02230671], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.0200347], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.0001976], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.00188719], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (6,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3100, 'query_cost': 0.0, 'learning_time': 196.80690899904585})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__6.pkl


ONLINE LEARNING CYCLE 7

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 40 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 2743 datapoints
Loss: 0.00194, iter: 0/100000
Loss: 0.00299, iter: 1000/100000
Loss: 0.00436, iter: 2000/100000
Loss: 0.00117, iter: 3000/100000
Loss: 0.00285, iter: 4000/100000
Loss: 0.00353, iter: 5000/100000
Loss: 0.00410, iter: 6000/100000
Loss: 0.00429, iter: 7000/100000
Loss: 0.00164, iter: 8000/100000
Loss: 0.00187, iter: 9000/100000
Loss: 0.00772, iter: 10000/100000
Loss: 0.00503, iter: 11000/100000
Loss: 0.00261, iter: 12000/100000
Loss: 0.00300, iter: 13000/100000
Loss: 0.00540, iter: 14000/100000
Loss: 0.01003, iter: 15000/100000
Loss did not improve after 5000 itrs, terminating at itr 15160.
Loaded best model with loss: 0.00071
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5981026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7410796], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.57362354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71151125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5841454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72836226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5729408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7339414], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.568607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7243928], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.59464496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7282979], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5929187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7325151], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5705491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.715769], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5278096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8280455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5737116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74157727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.55792266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7215864], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.55447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74722165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5737769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7265265], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.603535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7595754], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.12973638], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5720045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7334015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5775108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.75666225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5803391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7541718], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.55049056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77290714], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5829916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72546375], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5880987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.75745755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5667805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74121565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.56892693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.72502255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.57774055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72456884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.57353854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72686386], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.59333706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73038936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.58428484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7412169], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5702451], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73965394], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.58035254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75270855], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.58439445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7309676], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.57606447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71749085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.57187486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7539], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.58282524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74757963], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5552466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7365807], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5900715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7861722], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5844146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7426799], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5792871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7458198], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.58799106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7344385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5559426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73591787], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.60246694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7439397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.15622135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.58143646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7348934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (7,)
CUMULATIVE NUM SOLVED: 8.0
CUMULATIVE NUM SOLVED: 8.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0]
Tasks solved: 8 / 10
Average time for successes: 1.50466 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 8, 'num_total': 10, 'avg_suc_time': 1.5046581893584516, 'avg_ref_cost': 1.875, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3463, 'query_cost': 0.0, 'learning_time': 232.2697536770429})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__7.pkl


ONLINE LEARNING CYCLE 8

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 45 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 2855 datapoints
Loss: 0.00639, iter: 0/100000
Loss: 0.01043, iter: 1000/100000
Loss: 0.00240, iter: 2000/100000
Loss: 0.03027, iter: 3000/100000
Loss: 0.00849, iter: 4000/100000
Loss: 0.02006, iter: 5000/100000
Loss: 0.00296, iter: 6000/100000
Loss: 0.00316, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7700.
Loaded best model with loss: 0.00067
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47314286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79644525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.465916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7923505], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46818352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7951669], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47273117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.773761], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4663083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7887615], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48090112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77789676], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4637064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7966169], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49064445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7718714], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45902336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7899233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4641375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8136355], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4744396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8359362], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46793234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.82038426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47378665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80317867], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49311677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7663214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4945654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7691306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49796066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.76798254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4685918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81656736], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47368613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8034029], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46486753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7967547], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47892293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.789972], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46761724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79424524], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48124713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7879132], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4821681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76957893], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46938005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8485171], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46611524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78774226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48981518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78133285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48721978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7972757], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46926123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8312387], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4734027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7892383], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4652591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79852265], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48045796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7601239], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47164637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8118989], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4695145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77809864], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4968339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77507204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46895868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7870041], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46472782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81854755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48559672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7783038], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47167212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8179476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52516323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7675237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46673304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8073381], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (8,)
CUMULATIVE NUM SOLVED: 18.0
CUMULATIVE NUM SOLVED: 18.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0]
Tasks solved: 10 / 10
Average time for successes: 1.46863 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4686338594037807, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3623, 'query_cost': 0.0, 'learning_time': 256.07763153803535})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__8.pkl


ONLINE LEARNING CYCLE 9

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 50 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3107 datapoints
Loss: 0.01175, iter: 0/100000
Loss: 0.01878, iter: 1000/100000
Loss: 0.01590, iter: 2000/100000
Loss: 0.00278, iter: 3000/100000
Loss: 0.00622, iter: 4000/100000
Loss: 0.02018, iter: 5000/100000
Loss: 0.00467, iter: 6000/100000
Loss: 0.02144, iter: 7000/100000
Loss: 0.01878, iter: 8000/100000
Loss: 0.00248, iter: 9000/100000
Loss: 0.00977, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10586.
Loaded best model with loss: 0.00120
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.56956375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73709136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52768844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75296515], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5626258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72567713], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5710627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74699765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5418878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7617365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5326792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7654054], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.56877136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7385846], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54490036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7456266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5576995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7365098], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5464958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74484843], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5276571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7373211], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54573977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75350565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5494762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74299216], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5591793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7348742], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5375114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7428469], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5668295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7548987], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5700746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7434254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5789389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7506303], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52924716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.73249483], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5520731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7434728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5440524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75623536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.58139676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7228614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5424167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7366985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.54819655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7409224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5439042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.72822875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5558602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7335726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.56677186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7591764], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.55500644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7814876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5420613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7308313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5819737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74412555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5492248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7364204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.578681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7414081], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5653534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7420639], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5664761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7348891], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54734075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73965245], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5400194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74238163], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5625776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.752184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5803553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7550604], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5387943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.74424547], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54869634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.769495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (9,)
CUMULATIVE NUM SOLVED: 28.0
CUMULATIVE NUM SOLVED: 28.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0]
Tasks solved: 10 / 10
Average time for successes: 1.50306 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5030551237287, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3949, 'query_cost': 0.0, 'learning_time': 285.3040883070498})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__9.pkl


ONLINE LEARNING CYCLE 10

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 55 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3385 datapoints
Loss: 0.00459, iter: 0/100000
Loss: 0.00404, iter: 1000/100000
Loss: 0.00818, iter: 2000/100000
Loss: 0.00491, iter: 3000/100000
Loss: 0.00411, iter: 4000/100000
Loss: 0.00843, iter: 5000/100000
Loss: 0.01591, iter: 6000/100000
Loss: 0.00288, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7223.
Loaded best model with loss: 0.00121
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.58793676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7317427], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.603245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7302344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.12786214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.577684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72408634], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.57564205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7256672], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.61241287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.731026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13734658], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.59919816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73619974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.61686385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7501833], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.11621621], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.60893804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7580226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.13334848], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.55898184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74080664], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5896311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7659595], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5912612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7288476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5977769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74462974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.61442715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73792267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13881026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5989439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.73181087], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6113823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.732845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.11684436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.6135086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7355097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.14263605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5982777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7575252], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.60716295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74195516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.10610759], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.61158293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7349367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.13480625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.59769255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.73041457], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.60580844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7513103], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.12198643], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5277254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.72137684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.60186166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7363341], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.11311395], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.59665775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73326015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.59547865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7385427], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.61007166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7363608], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.13235073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6054763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73519653], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.137279], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.6156828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7357301], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([-0.13853395], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5933778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7368498], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.60898894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7574111], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.1433966], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.61381304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.74797493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.11915907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.6175571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75291336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([-0.11855864], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6081859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73547435], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1389583], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5769718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73661333], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5979547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7308194], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.576048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7142989], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.59441257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74936086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6013143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7516035], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.09837451], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.6072997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7390297], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.13624732], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5965599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.75378114], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (10,)
CUMULATIVE NUM SOLVED: 29.0
CUMULATIVE NUM SOLVED: 29.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0]
Tasks solved: 1 / 10
Average time for successes: 1.82814 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 1.8281361139088403, 'avg_ref_cost': 15.0, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4302, 'query_cost': 0.0, 'learning_time': 310.37973714104737})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__10.pkl


ONLINE LEARNING CYCLE 11

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 60 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3582 datapoints
Loss: 0.00800, iter: 0/100000
Loss: 0.00387, iter: 1000/100000
Loss: 0.00505, iter: 2000/100000
Loss: 0.00251, iter: 3000/100000
Loss: 0.00617, iter: 4000/100000
Loss: 0.01202, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5550.
Loaded best model with loss: 0.00145
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53430796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7101104], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52647805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70715725], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4837828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8941131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.16308437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.57904303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71992505], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5381371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6985699], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53496385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6922457], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51834595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7175463], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53266186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7028516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.504323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7348015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52480364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.696141], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53001636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68645495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5455804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74214053], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.531216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7018709], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5242101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72722954], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5321775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71945167], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5585024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6990885], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52271134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70648795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5454056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70646966], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5116915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7111483], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54911417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6892754], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54173225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6940626], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50576603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.72505087], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5417512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7295275], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5399648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72097594], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.54170066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70158494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54512256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7206545], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53342867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69506454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53753996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6865773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.55543554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70185256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53504926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7459808], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.525246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7097318], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5111995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7104008], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5245419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69690365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5374625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69651496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.537763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68148977], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5382682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69367814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5578575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7209633], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5399672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6962942], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5087933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49782816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8245367], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (11,)
CUMULATIVE NUM SOLVED: 38.0
CUMULATIVE NUM SOLVED: 38.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0]
Tasks solved: 9 / 10
Average time for successes: 1.46504 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.465044370031036, 'avg_ref_cost': 1.6666666666666667, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4561, 'query_cost': 0.0, 'learning_time': 332.95683703306713})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__11.pkl


ONLINE LEARNING CYCLE 12

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 65 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3689 datapoints
Loss: 0.01671, iter: 0/100000
Loss: 0.00388, iter: 1000/100000
Loss: 0.00411, iter: 2000/100000
Loss: 0.01400, iter: 3000/100000
Loss: 0.00834, iter: 4000/100000
Loss: 0.00967, iter: 5000/100000
Loss: 0.00427, iter: 6000/100000
Loss: 0.00360, iter: 7000/100000
Loss: 0.01259, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8337.
Loaded best model with loss: 0.00147
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5204101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72403014], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54741645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68703824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51423305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.77800494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51350456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7931367], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51659936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7784005], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5245224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7016829], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5056333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7931299], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50236845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7801635], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5457549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70226496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53058124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6932888], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5056633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71010166], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52470136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7320626], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4984581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7399095], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5194048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7388957], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51893574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7115296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5260221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69119096], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49809533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7869695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52200884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70572877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5243892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6995506], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5215457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7109781], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53547215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68053186], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50293887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7871792], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5085237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79323024], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5149269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7973552], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5258254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6962394], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53223276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74180204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54910755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7000106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5115771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78460467], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5189579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7526454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5360051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6959642], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5264123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6955048], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52661264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6776627], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52154344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72490793], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52876306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6801859], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5215333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7181806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5036255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77129036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52313316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68595797], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5338877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68812716], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5143547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.79180104], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5154083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7492422], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (12,)
CUMULATIVE NUM SOLVED: 48.0
CUMULATIVE NUM SOLVED: 48.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0]
Tasks solved: 10 / 10
Average time for successes: 1.49861 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4986148823081749, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4718, 'query_cost': 0.0, 'learning_time': 360.4534750530729})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__12.pkl


ONLINE LEARNING CYCLE 13

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 70 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3782 datapoints
Loss: 0.00971, iter: 0/100000
Loss: 0.01998, iter: 1000/100000
Loss: 0.00726, iter: 2000/100000
Loss: 0.02277, iter: 3000/100000
Loss: 0.00385, iter: 4000/100000
Loss: 0.02814, iter: 5000/100000
Loss: 0.01552, iter: 6000/100000
Loss: 0.00689, iter: 7000/100000
Loss: 0.02100, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8780.
Loaded best model with loss: 0.00020
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6363839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7359356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.16920896], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.56397736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73031235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.55781406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7109066], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5631781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7183988], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.55894697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71365196], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5879537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77184147], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.55304486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7198306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.56005013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7254705], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5573096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7738002], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.56823903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71286213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.563342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7128095], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5571298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74630743], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5667745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7237719], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5745973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7471845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.561172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6893856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.605166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.72599816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.09971774], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5897019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7212242], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6208261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7494539], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.12315999], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.56113744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7121656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.56679755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.717412], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.563299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6998472], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5666065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7427651], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5708044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.84909904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.553016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70973134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.56956244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7065981], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5509028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71063447], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.56035966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7127302], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5676328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72663724], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5687696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72533315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.60508364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7925478], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.14417703], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.55200726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.72104126], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.56186414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69638973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.58972335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7113318], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.566601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71723795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5662886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7264424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5707416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73940045], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5649214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71665674], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5536247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7196526], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5611562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7273151], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.57587904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7176842], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (13,)
CUMULATIVE NUM SOLVED: 54.0
CUMULATIVE NUM SOLVED: 54.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0]
Tasks solved: 6 / 10
Average time for successes: 1.46924 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 6, 'num_total': 10, 'avg_suc_time': 1.4692352156562265, 'avg_ref_cost': 2.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4869, 'query_cost': 0.0, 'learning_time': 389.5744464850577})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__13.pkl


ONLINE LEARNING CYCLE 14

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 75 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3885 datapoints
Loss: 0.00832, iter: 0/100000
Loss: 0.00704, iter: 1000/100000
Loss: 0.00601, iter: 2000/100000
Loss: 0.00461, iter: 3000/100000
Loss: 0.00273, iter: 4000/100000
Loss: 0.00510, iter: 5000/100000
Loss: 0.00724, iter: 6000/100000
Loss: 0.01207, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7296.
Loaded best model with loss: 0.00174
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5678258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7344104], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54598796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7634638], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.57533276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7834134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.56252736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75750643], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.54122066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.718897], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.569991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74671507], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.56026614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.74707663], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.58503735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7567959], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5480198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71860546], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.57807785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76054496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5657132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.74497825], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5704434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7439449], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5714073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74178255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5232512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7547609], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.56447047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74579906], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.55886036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.73081064], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5654333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.742644], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5546736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73940957], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.55391055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7488026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5714063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7453666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5680197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7478341], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.57239246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7517762], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.55815846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77735615], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.57492477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7465715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5697221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7591187], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5678303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73507994], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5761006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7374325], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5676967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7332499], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5692823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7611627], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5567171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7400785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5770353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.73780125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.56591994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.734236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.56541365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7678191], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5685812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74378926], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.57129997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.736817], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5728064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7418167], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5675969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7362125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.56633687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7378522], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5718006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7687232], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5599603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.73148966], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (14,)
CUMULATIVE NUM SOLVED: 64.0
CUMULATIVE NUM SOLVED: 64.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0]
Tasks solved: 10 / 10
Average time for successes: 1.54556 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5455637649341951, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5027, 'query_cost': 0.0, 'learning_time': 416.18741497804876})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__14.pkl


ONLINE LEARNING CYCLE 15

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 80 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4038 datapoints
Loss: 0.00650, iter: 0/100000
Loss: 0.00548, iter: 1000/100000
Loss: 0.00961, iter: 2000/100000
Loss: 0.01059, iter: 3000/100000
Loss: 0.01930, iter: 4000/100000
Loss: 0.00644, iter: 5000/100000
Loss: 0.01716, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6600.
Loaded best model with loss: 0.00040
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5100309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7248493], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5222578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7119758], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5134794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7150061], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4954197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7408776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51703274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71718454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51613545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7300162], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49536353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.725812], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50593716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72343814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.512112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70589304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51339006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71478015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5227643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70770925], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5099893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72246027], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5104765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70971376], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4712004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.80721337], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5107976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7087758], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50875723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70704496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.518114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7625241], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5127459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70492214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5082821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7390918], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7099846], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4901416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76287085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5261119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70463383], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52466255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70635647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49829772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7072025], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5128607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7171854], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5066871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71365404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49883592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74307257], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52087736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7582521], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50404733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7488065], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5148619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70649683], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51655537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70632136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49726507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7297854], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5245975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70600384], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.505838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72383267], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51422673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69943434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49819618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7547449], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4978965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7276935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5086847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7316055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5100904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7082031], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5293576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7452291], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (15,)
CUMULATIVE NUM SOLVED: 74.0
CUMULATIVE NUM SOLVED: 74.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0]
Tasks solved: 10 / 10
Average time for successes: 1.54720 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5471962666837498, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5236, 'query_cost': 0.0, 'learning_time': 442.3137185240339})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__15.pkl


ONLINE LEARNING CYCLE 16

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 85 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4159 datapoints
Loss: 0.00560, iter: 0/100000
Loss: 0.01190, iter: 1000/100000
Loss: 0.00488, iter: 2000/100000
Loss: 0.01881, iter: 3000/100000
Loss: 0.00482, iter: 4000/100000
Loss: 0.00936, iter: 5000/100000
Loss: 0.00725, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6696.
Loaded best model with loss: 0.00202
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52111804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69799554], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5398279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7014569], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.54741627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7159713], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5513679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72014296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52156496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71615684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53984463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7288638], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.55196977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.74106836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5509076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74868053], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5482794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7151554], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53716743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7137276], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.54402876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.74336374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5539381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7229384], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54561645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72541285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5290243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71225274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5610179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77235246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53444517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7472845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.55354315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7115818], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5652142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75737506], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5526647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7151406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.551086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7021005], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5459283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72607535], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5476974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.72026587], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5360279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7254211], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53945744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6978111], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53343415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71047616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5431281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71526563], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5382957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7097216], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.557313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7144888], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5523435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71881145], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5365151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71417534], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53297615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7085173], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5283687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.71565586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54649454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7245628], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5581899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7251713], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5263746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7042514], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5070589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76277995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5410245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71159625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5423457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7114673], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5455891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72094786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54819185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7224641], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (16,)
CUMULATIVE NUM SOLVED: 84.0
CUMULATIVE NUM SOLVED: 84.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0]
Tasks solved: 10 / 10
Average time for successes: 1.55300 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5530043904785997, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5412, 'query_cost': 0.0, 'learning_time': 469.0444868920313})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__16.pkl


ONLINE LEARNING CYCLE 17

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 90 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4311 datapoints
Loss: 0.00537, iter: 0/100000
Loss: 0.01423, iter: 1000/100000
Loss: 0.00665, iter: 2000/100000
Loss: 0.00834, iter: 3000/100000
Loss: 0.00791, iter: 4000/100000
Loss: 0.00761, iter: 5000/100000
Loss: 0.01199, iter: 6000/100000
Loss: 0.01967, iter: 7000/100000
Loss: 0.00278, iter: 8000/100000
Loss: 0.00861, iter: 9000/100000
Loss: 0.01483, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10012.
Loaded best model with loss: 0.00148
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49213323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7237409], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48530886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68871325], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51803243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69802547], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50567454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6852425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48862782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6935977], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5142507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7054151], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4965147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7022203], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5358788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7018853], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48905274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7003029], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49691653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68095124], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48468578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6907726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49917948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.695373], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52643144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6908704], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53218734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6987087], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5059662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7004495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48885494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68648696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49377963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69972426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5002644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.72860914], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50345343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.708872], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48792124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68520486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49641967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69626856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48158798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6969582], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5249631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68934774], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5091926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.68842], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48457527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68674284], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5020846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7143835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.488838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7004067], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4921096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6975565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49132326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6893918], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48142415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69821244], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5050309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68737835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47887042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69359136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4935415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70878434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50961494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6966383], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48932636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7233372], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49583024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6914722], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49581277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7249995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.493654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7271406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5011073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.706267], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49250132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6891525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (17,)
CUMULATIVE NUM SOLVED: 94.0
CUMULATIVE NUM SOLVED: 94.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0]
Tasks solved: 10 / 10
Average time for successes: 1.60381 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.6038142529549078, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5632, 'query_cost': 0.0, 'learning_time': 501.7988318510179})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__17.pkl


ONLINE LEARNING CYCLE 18

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 95 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4427 datapoints
Loss: 0.00824, iter: 0/100000
Loss: 0.02496, iter: 1000/100000
Loss: 0.01071, iter: 2000/100000
Loss: 0.00709, iter: 3000/100000
Loss: 0.01305, iter: 4000/100000
Loss: 0.00502, iter: 5000/100000
Loss: 0.01240, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6750.
Loaded best model with loss: 0.00088
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5181162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70125645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52468336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6901286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49773243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7111274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5112991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70928836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52567244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7227952], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51212734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68476486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5207439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7045822], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5150947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6921737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52415824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66676205], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5175039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6884938], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4895423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70469505], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5177966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68780285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5150069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6703793], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5122041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70401967], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5205326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68704635], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47941166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6938382], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50755113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7098308], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45841986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7298897], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50954145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6914727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54125875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70111823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5037984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69687414], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52385396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7253889], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51536524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7088709], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5255984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69690603], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52163625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6760038], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5178184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6836889], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49585018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69074833], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51240605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69956297], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5069975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68949854], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49654016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69860435], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5237175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.72007865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.522086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6961549], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5276629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70899415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49995977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7020625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5102945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6757624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5013543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6856338], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5179328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7239423], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4923044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69381446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5132536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.682522], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5272007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69673723], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (18,)
CUMULATIVE NUM SOLVED: 104.0
CUMULATIVE NUM SOLVED: 104.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0]
Tasks solved: 10 / 10
Average time for successes: 1.59935 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5993493179266807, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5803, 'query_cost': 0.0, 'learning_time': 529.4916451440076})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__18.pkl


ONLINE LEARNING CYCLE 19

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 100 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4521 datapoints
Loss: 0.00691, iter: 0/100000
Loss: 0.00386, iter: 1000/100000
Loss: 0.01486, iter: 2000/100000
Loss: 0.01473, iter: 3000/100000
Loss: 0.00502, iter: 4000/100000
Loss: 0.00628, iter: 5000/100000
Loss: 0.01189, iter: 6000/100000
Loss: 0.01641, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7163.
Loaded best model with loss: 0.00201
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5004126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6979674], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50575846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7112898], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5055647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7023415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50307477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7013978], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51623666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71269125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.528569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7009411], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48643354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6934121], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5153299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7017815], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5230089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70334184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5159803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69114876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5069907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6994404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5051214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69183385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52559984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7278372], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.58966374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7687532], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49817112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7022291], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5121094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70892084], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5405778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7057453], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51341593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69157785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48974887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7005932], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50574267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7008512], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51251805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7453263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5067953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6973403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5410757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7217051], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50408566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6994868], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5020251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7336218], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5026827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.715589], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5185495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.699212], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52434134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.708978], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.509482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70648754], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5086882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7113132], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.55487007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.72829556], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49224687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.705211], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48582006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70007366], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48999712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7065584], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50875115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.705006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5074064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.714996], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50215185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68489987], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51341224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7042081], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.54299164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70890385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7094071], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (19,)
CUMULATIVE NUM SOLVED: 114.0
CUMULATIVE NUM SOLVED: 114.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0]
Tasks solved: 10 / 10
Average time for successes: 1.60519 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.6051937223877757, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5944, 'query_cost': 0.0, 'learning_time': 558.2119599340076})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__19.pkl


ONLINE LEARNING CYCLE 20

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 105 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4659 datapoints
Loss: 0.01370, iter: 0/100000
Loss: 0.01013, iter: 1000/100000
Loss: 0.00401, iter: 2000/100000
Loss: 0.01029, iter: 3000/100000
Loss: 0.01615, iter: 4000/100000
Loss: 0.02035, iter: 5000/100000
Loss: 0.00452, iter: 6000/100000
Loss: 0.02756, iter: 7000/100000
Loss: 0.00472, iter: 8000/100000
Loss: 0.01341, iter: 9000/100000
Loss: 0.01003, iter: 10000/100000
Loss: 0.00777, iter: 11000/100000
Loss: 0.00566, iter: 12000/100000
Loss: 0.03535, iter: 13000/100000
Loss: 0.01503, iter: 14000/100000
Loss: 0.01449, iter: 15000/100000
Loss: 0.01008, iter: 16000/100000
Loss: 0.01736, iter: 17000/100000
Loss did not improve after 5000 itrs, terminating at itr 17601.
Loaded best model with loss: 0.00153
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.529242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7249907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5046974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73038954], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.493896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7135603], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49069706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7180404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49606082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.72228485], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4996899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7139798], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4803012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7242568], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54949665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7387566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49744925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.72089875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4843516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7215267], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48905513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.73997134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.507091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.733598], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49827752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71700627], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4984221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71606225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48886085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7066623], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48967743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7214908], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.509307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74038744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49008438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7234212], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4663413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71029526], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.525929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.72697365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.493572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70565873], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49831435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7061707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4882378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74364877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4890618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72710407], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51226294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71202224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48978016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71424896], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50319284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7274809], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50041896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7111261], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49543902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7185209], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49440348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7283708], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48566276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.71349657], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5037993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.71843934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51521224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7348494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49729854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7133485], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50353193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72267103], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.484502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7069517], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49853528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74413866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4945469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7256116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50739515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7122771], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54174167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.72033644], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (20,)
CUMULATIVE NUM SOLVED: 124.0
CUMULATIVE NUM SOLVED: 124.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0]
Tasks solved: 10 / 10
Average time for successes: 1.46191 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4619076798000605, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6149, 'query_cost': 0.0, 'learning_time': 604.687758871034})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__20.pkl


ONLINE LEARNING CYCLE 21

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 110 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4748 datapoints
Loss: 0.01698, iter: 0/100000
Loss: 0.01075, iter: 1000/100000
Loss: 0.02356, iter: 2000/100000
Loss: 0.00420, iter: 3000/100000
Loss: 0.01789, iter: 4000/100000
Loss: 0.01499, iter: 5000/100000
Loss: 0.01041, iter: 6000/100000
Loss: 0.01767, iter: 7000/100000
Loss: 0.01648, iter: 8000/100000
Loss: 0.01117, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9725.
Loaded best model with loss: 0.00093
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5267783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6671767], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54197085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6710461], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5269799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68624747], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49947044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6827429], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5490513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6737483], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5189468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67566425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.55101305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68141633], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52437896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6622201], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5464037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6846836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5620628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68247145], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5360072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7058753], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5245369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6688692], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5258934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67188376], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50880325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6708913], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5339965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68146527], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5125589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6677283], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5342901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6819707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5466066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6863888], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51262337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66275156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54767174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67314357], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52401394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67899764], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5179041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7268425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5265934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.66979396], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5268372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6656451], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5390125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7235216], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5248167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6672817], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5276126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66300505], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.530659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6864443], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53385323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.673903], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52970994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6691222], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52071124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6852829], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5406896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6824822], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5825069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68986726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52913535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6915412], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5116672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66694576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5233782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6746971], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53141886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69087076], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.524852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6880557], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53623605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6694013], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5260573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68287647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (21,)
CUMULATIVE NUM SOLVED: 134.0
CUMULATIVE NUM SOLVED: 134.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0]
Tasks solved: 10 / 10
Average time for successes: 1.46284 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4628426641924306, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6288, 'query_cost': 0.0, 'learning_time': 638.9920309640293})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__21.pkl


ONLINE LEARNING CYCLE 22

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 115 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4849 datapoints
Loss: 0.00679, iter: 0/100000
Loss: 0.01310, iter: 1000/100000
Loss: 0.01109, iter: 2000/100000
Loss: 0.00786, iter: 3000/100000
Loss: 0.01440, iter: 4000/100000
Loss: 0.01397, iter: 5000/100000
Loss: 0.00513, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6877.
Loaded best model with loss: 0.00232
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5211192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.680429], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53165156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68375903], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50317675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.678269], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5253451], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71465266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.56885976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69623446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5277126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7007536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52018636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7016885], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5022213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7016145], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5216798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6797927], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5306454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70130455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5368696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71730995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5223089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6964193], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5256791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68595576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53504556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7045775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51365507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7039714], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5158291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68406624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5398474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70113], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5320472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6910665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52173495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.702691], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5212706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6866159], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5655796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6958033], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.533048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7182813], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7015062], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5348903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73444027], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51636934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68964285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5218907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68659604], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5331862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68613607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.54139346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6752666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51813394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6784778], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5276656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76479286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5263165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6837396], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51774234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7165235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5416519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67564404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52161366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7093834], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52568394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70644015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.513295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6893503], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5317327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69047654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5149038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71295816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52491665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69138175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5440638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7014051], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (22,)
CUMULATIVE NUM SOLVED: 144.0
CUMULATIVE NUM SOLVED: 144.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0]
Tasks solved: 10 / 10
Average time for successes: 1.62313 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.6231321320927237, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6439, 'query_cost': 0.0, 'learning_time': 668.5287586670311})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__22.pkl


ONLINE LEARNING CYCLE 23

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 120 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4970 datapoints
Loss: 0.00627, iter: 0/100000
Loss: 0.00854, iter: 1000/100000
Loss: 0.04515, iter: 2000/100000
Loss: 0.00988, iter: 3000/100000
Loss: 0.00960, iter: 4000/100000
Loss: 0.01749, iter: 5000/100000
Loss: 0.00934, iter: 6000/100000
Loss: 0.00929, iter: 7000/100000
Loss: 0.00791, iter: 8000/100000
Loss: 0.00846, iter: 9000/100000
Loss: 0.00829, iter: 10000/100000
Loss: 0.01423, iter: 11000/100000
Loss: 0.00999, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12836.
Loaded best model with loss: 0.00193
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53933513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70891696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5121746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6688655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5030867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70239776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5177303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.66771954], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51714575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.72250813], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49873713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6907493], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5013359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7475672], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48409978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6791903], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5457413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7302856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4973434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6857964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51068664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6854241], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50874376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67829484], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5035178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6727153], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49387428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70787466], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6896823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50947607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67124474], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5192692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6934484], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5110849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6772148], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5108026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69313693], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49944803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69541204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5333143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71707284], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51662993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6928078], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5129277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6806078], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5403713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7039794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5409624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6973408], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51574117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68272185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4994116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68424654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5082158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6865202], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.500631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7151887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51610446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6763415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50227207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67914796], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5049854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70158803], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5029528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6821237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50628275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66931], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5032481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7057055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51287806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6931703], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50424707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70099753], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51932997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7150551], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5080749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6822559], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5367108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69075334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (23,)
CUMULATIVE NUM SOLVED: 154.0
CUMULATIVE NUM SOLVED: 154.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0]
Tasks solved: 10 / 10
Average time for successes: 1.51967 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5196742983855074, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6616, 'query_cost': 0.0, 'learning_time': 708.3674628670269})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__23.pkl


ONLINE LEARNING CYCLE 24

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 125 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5092 datapoints
Loss: 0.00835, iter: 0/100000
Loss: 0.00443, iter: 1000/100000
Loss: 0.00725, iter: 2000/100000
Loss: 0.00774, iter: 3000/100000
Loss: 0.00503, iter: 4000/100000
Loss: 0.00941, iter: 5000/100000
Loss: 0.00542, iter: 6000/100000
Loss: 0.01299, iter: 7000/100000
Loss: 0.02135, iter: 8000/100000
Loss: 0.01160, iter: 9000/100000
Loss: 0.00539, iter: 10000/100000
Loss: 0.00882, iter: 11000/100000
Loss: 0.00787, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12574.
Loaded best model with loss: 0.00212
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4938596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6791177], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49855322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6730057], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48729777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6824144], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4885446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6956079], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48331353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66498184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5157936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67007184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48831844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68135774], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51762825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67555946], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.496196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6754965], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4547618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6580791], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49425945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69138265], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5091705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6687845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4934775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67825997], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47726983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6539179], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48060456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65608984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49294063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7183379], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5084935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66924554], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5068861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6860624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49942532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6714593], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51564634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68712866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4942689], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67211527], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49217194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68727946], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5129496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7036587], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51511115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67599887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50201684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6888395], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48222885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68059105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49819663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6631624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48781273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.66305476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4874815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67483735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4974831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6655886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5334744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6949261], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48562583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6673808], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49303076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66107625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49556172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6448221], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.05520566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48320976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.673433], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5267221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69146246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47621208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6741351], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48535195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6635674], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5021929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6886692], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4973328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6733777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (24,)
CUMULATIVE NUM SOLVED: 163.0
CUMULATIVE NUM SOLVED: 163.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0]
Tasks solved: 9 / 10
Average time for successes: 1.59276 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.5927615855438892, 'avg_ref_cost': 1.6666666666666667, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6792, 'query_cost': 0.0, 'learning_time': 748.0944166420377})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__24.pkl


ONLINE LEARNING CYCLE 25

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 130 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5178 datapoints
Loss: 0.01714, iter: 0/100000
Loss: 0.00453, iter: 1000/100000
Loss: 0.01268, iter: 2000/100000
Loss: 0.00505, iter: 3000/100000
Loss: 0.00490, iter: 4000/100000
Loss: 0.00948, iter: 5000/100000
Loss: 0.01802, iter: 6000/100000
Loss: 0.00933, iter: 7000/100000
Loss: 0.01406, iter: 8000/100000
Loss: 0.01210, iter: 9000/100000
Loss: 0.02550, iter: 10000/100000
Loss: 0.00998, iter: 11000/100000
Loss: 0.00732, iter: 12000/100000
Loss: 0.01690, iter: 13000/100000
Loss: 0.00442, iter: 14000/100000
Loss: 0.00531, iter: 15000/100000
Loss did not improve after 5000 itrs, terminating at itr 15065.
Loaded best model with loss: 0.00239
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52710676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7082917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53568894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7083189], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5371482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7026902], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52824086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7077885], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53386563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69779736], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50892806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.700398], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51853323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7072324], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53248286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71862805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.54196846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73445237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51668465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72474563], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5400385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70444137], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.538141], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72644144], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5168537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6975136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.56117404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7106293], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53508157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71295816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5490129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7320539], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5199955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7068132], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5211739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7025546], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53226894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7052094], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5257796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6944944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5054527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7102415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5365303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7049816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51023406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6909469], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49356598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69722134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5351701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.72653925], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.524027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7180966], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5242326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72181016], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53618777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7297956], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51591504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.716001], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5399892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71495986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5032593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7068929], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49357414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69250876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5567377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7078074], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53498584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70052576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52982295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69995946], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5348924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7377826], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51209295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7160165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5442457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7223543], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.54072887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6953387], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53057265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7090594], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (25,)
CUMULATIVE NUM SOLVED: 173.0
CUMULATIVE NUM SOLVED: 173.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0]
Tasks solved: 10 / 10
Average time for successes: 1.57805 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5780452734295978, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6933, 'query_cost': 0.0, 'learning_time': 792.3916466760274})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__25.pkl


ONLINE LEARNING CYCLE 26

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 135 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5305 datapoints
Loss: 0.02176, iter: 0/100000
Loss: 0.01006, iter: 1000/100000
Loss: 0.00738, iter: 2000/100000
Loss: 0.01229, iter: 3000/100000
Loss: 0.01184, iter: 4000/100000
Loss: 0.00799, iter: 5000/100000
Loss: 0.00559, iter: 6000/100000
Loss: 0.00692, iter: 7000/100000
Loss: 0.01903, iter: 8000/100000
Loss: 0.02391, iter: 9000/100000
Loss: 0.02878, iter: 10000/100000
Loss: 0.00536, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11668.
Loaded best model with loss: 0.00232
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4689631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69032586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45719054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6864966], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4777226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6878962], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49256268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69117665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49364877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69296634], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49375132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69136405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48077285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7111467], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4929093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6792111], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48085746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69192326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49074364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6940263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49724084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6925907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49290287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6884586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49061963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6996833], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49620828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6663039], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48777527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.687083], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47933748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68862283], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47744423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7075663], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48706368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6874216], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4855461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70615077], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49175847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6822887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48808384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6863347], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48780167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.71004397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50852317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68130475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45917037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6746426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49189413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7110015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4898596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69383425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4490402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69464266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4927136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69340926], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49247634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6887588], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5016332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.689098], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.455871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67821336], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49977502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70667416], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48334423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69516605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49842992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70617497], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4877482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68835884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4886187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72142345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4753685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68929756], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46822664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67962545], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46049166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68283916], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48110002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.71081465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (26,)
CUMULATIVE NUM SOLVED: 183.0
CUMULATIVE NUM SOLVED: 183.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0]
Tasks solved: 10 / 10
Average time for successes: 1.46288 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4628849379980238, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7116, 'query_cost': 0.0, 'learning_time': 831.6909296040249})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__26.pkl


ONLINE LEARNING CYCLE 27

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 140 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5382 datapoints
Loss: 0.01529, iter: 0/100000
Loss: 0.01536, iter: 1000/100000
Loss: 0.02523, iter: 2000/100000
Loss: 0.00693, iter: 3000/100000
Loss: 0.00907, iter: 4000/100000
Loss: 0.01675, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5765.
Loaded best model with loss: 0.00144
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46357936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69741046], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48948708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69284546], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47997564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69152945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48137674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6664709], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49273497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.699636], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49896854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68719816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48481393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6736566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45918402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6704268], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49672505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.682797], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47350273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67673934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48409098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6818381], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4407732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6867101], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47914302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.675959], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4605203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.716947], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4387655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6743695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45217228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7033022], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48118502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6783629], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4905226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6885294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48010248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67907757], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47002178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6681879], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46962944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67654735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48420617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68667537], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47951302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6788979], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47974887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6785213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48225215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68118256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44235495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6962768], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46643832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7910658], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47431016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.68798834], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48830125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6830954], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47481227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6925912], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49824932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68497425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47489032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6796335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48409066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.703845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4775911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6817781], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47392884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6871189], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4775771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71946067], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48380542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.735104], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47696036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68596387], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48168865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71222997], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47157934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68283874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (27,)
CUMULATIVE NUM SOLVED: 193.0
CUMULATIVE NUM SOLVED: 193.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0]
Tasks solved: 10 / 10
Average time for successes: 1.46297 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.462971705981181, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7242, 'query_cost': 0.0, 'learning_time': 861.3217472410179})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__27.pkl


ONLINE LEARNING CYCLE 28

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 145 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5496 datapoints
Loss: 0.00792, iter: 0/100000
Loss: 0.00539, iter: 1000/100000
Loss: 0.01385, iter: 2000/100000
Loss: 0.02655, iter: 3000/100000
Loss: 0.01132, iter: 4000/100000
Loss: 0.00909, iter: 5000/100000
Loss: 0.00771, iter: 6000/100000
Loss: 0.00693, iter: 7000/100000
Loss: 0.00721, iter: 8000/100000
Loss: 0.01446, iter: 9000/100000
Loss: 0.01514, iter: 10000/100000
Loss: 0.00971, iter: 11000/100000
Loss: 0.01367, iter: 12000/100000
Loss: 0.00685, iter: 13000/100000
Loss: 0.00876, iter: 14000/100000
Loss: 0.01382, iter: 15000/100000
Loss: 0.00474, iter: 16000/100000
Loss: 0.01107, iter: 17000/100000
Loss: 0.01161, iter: 18000/100000
Loss did not improve after 5000 itrs, terminating at itr 18158.
Loaded best model with loss: 0.00227
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5294696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6797086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52096575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69164115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5132833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6994782], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5024338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6924644], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5011014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6789252], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5068016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72991073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50918806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6946002], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51629716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.685279], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51723653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7059959], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5144714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6876992], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5211213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6908855], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50631577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68921536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5173697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68584394], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50774175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6945405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5179111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7167373], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5413773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69351006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5147712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7705238], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51226777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6917984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51965714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68016213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5066871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6800265], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50876135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6821316], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.538545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6948119], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5113384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7267151], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50721407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.68013793], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.507231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6803262], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5308859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6862555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5140386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72266734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5419323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6883808], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5106033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69938654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.528675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6863183], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5055363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7111624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50113136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67583376], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5184157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68830717], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54496765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6859523], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5368206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71368736], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52452326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71733785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5187653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7049344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51494384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6852403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.523155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.688729], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51373976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6993523], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (28,)
CUMULATIVE NUM SOLVED: 203.0
CUMULATIVE NUM SOLVED: 203.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0]
Tasks solved: 10 / 10
Average time for successes: 1.65175 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.6517460058967117, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7409, 'query_cost': 0.0, 'learning_time': 911.9732353569998})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__28.pkl


ONLINE LEARNING CYCLE 29

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 150 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5547 datapoints
Loss: 0.01615, iter: 0/100000
Loss: 0.01356, iter: 1000/100000
Loss: 0.01857, iter: 2000/100000
Loss: 0.00487, iter: 3000/100000
Loss: 0.00743, iter: 4000/100000
Loss: 0.01094, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5426.
Loaded best model with loss: 0.00235
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49324173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67874193], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5010978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6757923], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4960023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67236584], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4835516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6737452], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48545566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7266619], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5039156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.657494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50820386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6433103], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.06223097], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49571422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70660466], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5095048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67819744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47363394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66360915], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53138083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.672322], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5154248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.694367], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4830341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7666937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4853599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6752824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50378805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.67221427], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5169777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67986596], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49830833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6627263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49167484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6834687], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50197387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6681224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50967735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66660005], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5065599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6859811], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5007323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.676743], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49852654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6618968], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50044084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6719733], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4876005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6691243], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.514693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6875231], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4921452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6617006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50476086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6713717], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5000163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70835495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5047359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6703326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4954172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6648628], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49880946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6638101], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5020553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68813396], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50883657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68582475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48039985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66601074], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5040054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6819759], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49138054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6649449], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5081355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66622436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.507782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6746752], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51363206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6776865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (29,)
CUMULATIVE NUM SOLVED: 212.0
CUMULATIVE NUM SOLVED: 212.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0]
Tasks solved: 9 / 10
Average time for successes: 1.45822 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.458219371141038, 'avg_ref_cost': 1.6666666666666667, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7496, 'query_cost': 0.0, 'learning_time': 942.379755136004})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__29.pkl


ONLINE LEARNING CYCLE 30

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 155 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5630 datapoints
Loss: 0.01843, iter: 0/100000
Loss: 0.01505, iter: 1000/100000
Loss: 0.00850, iter: 2000/100000
Loss: 0.01918, iter: 3000/100000
Loss: 0.01247, iter: 4000/100000
Loss: 0.01464, iter: 5000/100000
Loss: 0.01272, iter: 6000/100000
Loss: 0.01322, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7727.
Loaded best model with loss: 0.00265
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49931082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72244346], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49986622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7078426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48200673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69252324], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4776904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7158583], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50312734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69274354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49230215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6967476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4999377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70874107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48383093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6857199], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5091798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7201756], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49736923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7086722], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49808142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6891188], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5055889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69432133], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52819574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74047303], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5050665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6944106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50436676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72699565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5045804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6924607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5032467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6999032], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5076675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6952537], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5015196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7128169], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54144984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7540625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.509513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7152752], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5186438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70992905], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.509252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.725691], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5096581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7019642], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51061314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69793737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50412065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74852526], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5358646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7083744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4684236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6995082], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52412295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69766545], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51266146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6967826], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5028995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6932168], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51471627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72432446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49094102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71900594], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50562495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69958097], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5021779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7037711], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5040816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7170766], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5023192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68249863], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5047219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7000243], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5041239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69166], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51095414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.71906346], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (30,)
CUMULATIVE NUM SOLVED: 222.0
CUMULATIVE NUM SOLVED: 222.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0]
Tasks solved: 10 / 10
Average time for successes: 1.46291 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4629114458919503, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7627, 'query_cost': 0.0, 'learning_time': 976.301599436003})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__30.pkl


ONLINE LEARNING CYCLE 31

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 160 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5681 datapoints
Loss: 0.01354, iter: 0/100000
Loss: 0.00802, iter: 1000/100000
Loss: 0.01431, iter: 2000/100000
Loss: 0.01216, iter: 3000/100000
Loss: 0.02412, iter: 4000/100000
Loss: 0.00829, iter: 5000/100000
Loss: 0.01902, iter: 6000/100000
Loss: 0.00885, iter: 7000/100000
Loss: 0.01355, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8717.
Loaded best model with loss: 0.00286
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48980278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6789695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4858629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6707866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5002966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67360383], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47638386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68962425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46087635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6820365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4759413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68786734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4739679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68523234], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4813107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6782632], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5231371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69702566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49561253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6785479], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46902892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67218274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49240717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67738354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49401802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6882917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47353908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7327953], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48455638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.67839444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4871569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68639004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49186227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6721607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47627267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67489374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47688583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71135944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4875675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7032706], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50955456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7126343], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46109706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6638606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.484535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6863019], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48780832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6716999], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4870163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68655556], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48641035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6821273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4818613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67455536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4932883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67656887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4867827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67068857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49523965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6797003], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48817018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6851442], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4763564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.68854916], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49193093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6766105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48164436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6770572], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48293293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.678211], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49357992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68989325], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49477616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70273554], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48177102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70865345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45306772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66597253], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4787006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6693725], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (31,)
CUMULATIVE NUM SOLVED: 232.0
CUMULATIVE NUM SOLVED: 232.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0]
Tasks solved: 10 / 10
Average time for successes: 1.73051 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.7305141774006187, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7710, 'query_cost': 0.0, 'learning_time': 1012.6647952420171})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__31.pkl


ONLINE LEARNING CYCLE 32

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 165 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5773 datapoints
Loss: 0.01369, iter: 0/100000
Loss: 0.00804, iter: 1000/100000
Loss: 0.00460, iter: 2000/100000
Loss: 0.00932, iter: 3000/100000
Loss: 0.01070, iter: 4000/100000
Loss: 0.02334, iter: 5000/100000
Loss: 0.01670, iter: 6000/100000
Loss: 0.00539, iter: 7000/100000
Loss: 0.00612, iter: 8000/100000
Loss: 0.02306, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9914.
Loaded best model with loss: 0.00144
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46402016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6472461], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0447567], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46596515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6519542], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46941695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68277794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47617555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.64212877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.04809536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48350373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6518547], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4925773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6398026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.0774266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4577434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.65137637], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45760736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6601801], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46474662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.65121335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45806846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6363082], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.08591131], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45917186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6575255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46435425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.64403236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.07708569], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46846226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6607151], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46086517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.63482386], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.06957477], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46884945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65732133], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45711425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.63146293], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.07198614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4874602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.64706874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.06881461], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46013105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6483942], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.04566261], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45855278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6383758], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.05508031], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48648065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6519884], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44639593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6958019], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46584314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6608562], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48952457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6636784], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46955374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6683281], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46187347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.648338], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.05663988], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4974801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.65538263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45122293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.633728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.05913336], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47131413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6561295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48854503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.644104], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.05850806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4579391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65460336], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4612938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6399994], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.05625091], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4652058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6399064], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4572568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.63694483], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.06055666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46251506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6583114], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45563793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6370504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.09125486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48072955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.650696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4618647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67687094], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46966857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6436042], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.05925364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4800931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6494313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.06258339], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47291678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6480036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.06200014], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (32,)
CUMULATIVE NUM SOLVED: 233.0
CUMULATIVE NUM SOLVED: 233.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0]
Tasks solved: 1 / 10
Average time for successes: 1.48482 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 1.4848180590197444, 'avg_ref_cost': 15.0, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7844, 'query_cost': 0.0, 'learning_time': 1051.375337423})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__32.pkl


ONLINE LEARNING CYCLE 33

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 170 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5883 datapoints
Loss: 0.00771, iter: 0/100000
Loss: 0.02236, iter: 1000/100000
Loss: 0.00657, iter: 2000/100000
Loss: 0.02219, iter: 3000/100000
Loss: 0.00835, iter: 4000/100000
Loss: 0.01121, iter: 5000/100000
Loss: 0.00915, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6890.
Loaded best model with loss: 0.00263
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49205774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65998465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50038147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6628504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49042144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.649052], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.0415046], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50687623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.66239995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49312413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6729942], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53030956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67796904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49589548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67447644], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49212953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6501484], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49571314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.666105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4969324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6722939], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49981263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6489951], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.04970637], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49277237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67903167], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4945046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6556162], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5083843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66051537], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5127048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65131694], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50183487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6573497], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48933575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6381917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0470662], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5022974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69517535], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47784105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6367332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.04216098], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5037838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6460053], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.05393259], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.514785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66718936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4953028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6564868], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50356907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.64955825], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.05190466], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48677695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6730889], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49447396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6583339], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5160715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.65102816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49257103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.65605783], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49470082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6631743], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49509576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.65026325], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49641618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.64998156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.0524748], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49610406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68717885], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4772747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.66574377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4993553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6575436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5001108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.64956987], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.04857089], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47544372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6750202], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49712515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7064526], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47684473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6484061], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.03184345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5018804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6656713], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.495635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67812324], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4678097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.64119005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.09807455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (33,)
CUMULATIVE NUM SOLVED: 236.0
CUMULATIVE NUM SOLVED: 236.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0]
Tasks solved: 3 / 10
Average time for successes: 1.72414 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 3, 'num_total': 10, 'avg_suc_time': 1.7241352583126475, 'avg_ref_cost': 5.0, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8008, 'query_cost': 0.0, 'learning_time': 1085.501595626003})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__33.pkl


ONLINE LEARNING CYCLE 34

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 175 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5976 datapoints
Loss: 0.00984, iter: 0/100000
Loss: 0.01507, iter: 1000/100000
Loss: 0.00616, iter: 2000/100000
Loss: 0.00702, iter: 3000/100000
Loss: 0.01155, iter: 4000/100000
Loss: 0.01391, iter: 5000/100000
Loss: 0.01578, iter: 6000/100000
Loss: 0.01000, iter: 7000/100000
Loss: 0.01013, iter: 8000/100000
Loss: 0.00578, iter: 9000/100000
Loss: 0.00608, iter: 10000/100000
Loss: 0.00623, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11298.
Loaded best model with loss: 0.00197
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43340322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70044625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42637098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66045237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.42168558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6484942], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.05481259], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.0729857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4157254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.66620755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43247098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.64219683], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.02520717], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46300036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.65318006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43550768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6441698], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.02357005], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4296833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.65028614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44906902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66873187], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43484467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.64665073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.08508042], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.05850493], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43252954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6734641], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.42883244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6577321], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43892124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67880446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43450004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.64893764], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.07197341], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.07516586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44078478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6861921], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4139878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6630149], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41675505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7053773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42920235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6451572], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0564988], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.05724302], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45243242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69511646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4378882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6873111], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4305103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.64582694], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05570491], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.03693036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45244136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6493393], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.04465206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.40790355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6742434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43541038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6756009], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.41357058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6728374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43670547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6468458], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.02750477], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4243738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6433929], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.0510099], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4308795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6461553], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02973538], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.07581578], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43481025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.657146], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.41177693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6463801], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.0508363], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.03425181], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46560222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66028965], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43022117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.64496744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0422879], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.04812822], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4470166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71033365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43743688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.685658], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43023893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6426078], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06730584], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.05067693], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43916267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.64317214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.0398264], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43020648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66563344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4358873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.65174663], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (34,)
CUMULATIVE NUM SOLVED: 236.0
CUMULATIVE NUM SOLVED: 236.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8146, 'query_cost': 0.0, 'learning_time': 1127.3408967180294})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__34.pkl


ONLINE LEARNING CYCLE 35

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 180 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6105 datapoints
Loss: 0.00917, iter: 0/100000
Loss: 0.00687, iter: 1000/100000
Loss: 0.00898, iter: 2000/100000
Loss: 0.00699, iter: 3000/100000
Loss: 0.01278, iter: 4000/100000
Loss: 0.00845, iter: 5000/100000
Loss: 0.01352, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6198.
Loaded best model with loss: 0.00208
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54680264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67940795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5285124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66741914], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53757054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6696764], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5219514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6945306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53004324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6979588], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67866707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53274703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6949273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5393535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6783737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5294478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7126128], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5268947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68152255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5389831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6707027], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5612519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.679694], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5191603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69277394], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5311944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6805452], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5321947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69283557], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5174616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68551624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54261357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6760124], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5234604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68116623], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5455053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6735719], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5396682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6725504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52506715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69750285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52822816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6902942], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5425578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6667187], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52668524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6739296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.508435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7267146], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5269634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69004756], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5238467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6810645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5142455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6817647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52767575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6914822], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52962047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.67156327], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5130348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6737571], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5106632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6470176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.07576311], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5321071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6782107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52976376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68732464], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5115519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.694363], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.543119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68921113], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53065246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67369044], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53620446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71196043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5219596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.669529], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5349276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7037771], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (35,)
CUMULATIVE NUM SOLVED: 245.0
CUMULATIVE NUM SOLVED: 245.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0]
Tasks solved: 9 / 10
Average time for successes: 1.46597 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.4659679885371588, 'avg_ref_cost': 1.6666666666666667, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8336, 'query_cost': 0.0, 'learning_time': 1161.407409994019})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__35.pkl


ONLINE LEARNING CYCLE 36

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 185 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6163 datapoints
Loss: 0.00860, iter: 0/100000
Loss: 0.01392, iter: 1000/100000
Loss: 0.00467, iter: 2000/100000
Loss: 0.01731, iter: 3000/100000
Loss: 0.00714, iter: 4000/100000
Loss: 0.00792, iter: 5000/100000
Loss: 0.00910, iter: 6000/100000
Loss: 0.02992, iter: 7000/100000
Loss: 0.01741, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8201.
Loaded best model with loss: 0.00216
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4822707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6919012], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48435786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6821695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49742013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7291201], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50227004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6890749], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48411044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7099636], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5060707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6947702], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47821864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68402725], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48051897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69976705], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.502175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6879356], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4892768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6950558], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4789725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6632464], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49422193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6896384], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47926906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6664576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48385057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6681378], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46168005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69080234], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50799966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.74753153], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48494247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67206043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5418562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.709162], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48286656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7022132], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49401057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68212426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5130127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6879326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48701075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.76237154], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46635765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67499024], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48532787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67735934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4940511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7043056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49144033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.687137], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48775896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68728167], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51330197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74381286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48698315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68242973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5171939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70123786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48150542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6947231], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5043599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6962071], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5050919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6804575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46518227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7263585], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48794267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71112317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4808667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70888454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.55409294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7145436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.480346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7492844], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49311984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70503014], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54712665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7017992], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (36,)
CUMULATIVE NUM SOLVED: 255.0
CUMULATIVE NUM SOLVED: 255.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0]
Tasks solved: 10 / 10
Average time for successes: 1.47179 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4717933648760664, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8432, 'query_cost': 0.0, 'learning_time': 1198.3588792320224})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__36.pkl


ONLINE LEARNING CYCLE 37

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 190 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6229 datapoints
Loss: 0.00479, iter: 0/100000
Loss: 0.00807, iter: 1000/100000
Loss: 0.02489, iter: 2000/100000
Loss: 0.00472, iter: 3000/100000
Loss: 0.02019, iter: 4000/100000
Loss: 0.00920, iter: 5000/100000
Loss: 0.00784, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6960.
Loaded best model with loss: 0.00278
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42256638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70298666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43699402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.705163], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4266774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.73284256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44397804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67774016], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46458036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70211136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46331644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6870068], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4742251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7010329], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4390731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.694457], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4598712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7046072], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44563034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6864804], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4409399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6962578], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43717948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69169784], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45944804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6821579], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43363097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6940339], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44642517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68551266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4189174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67762065], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44617814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68478334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43379244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68953663], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4267533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6777634], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43442526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70073515], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45992196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7086856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45352665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68615234], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45278466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72563124], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.42701322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70097244], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4399262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69531685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.41829264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7069868], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43898335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6800131], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4316687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6889557], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47959578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68953884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4435677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6883855], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43193477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6759579], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45829993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73647255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4430403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6851156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43571347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7278294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44348335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7187748], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43250924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7190148], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43702608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68510985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43689552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6759527], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43026578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6856008], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4440036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6895334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (37,)
CUMULATIVE NUM SOLVED: 265.0
CUMULATIVE NUM SOLVED: 265.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0]
Tasks solved: 10 / 10
Average time for successes: 1.60421 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.6042060335923451, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8539, 'query_cost': 0.0, 'learning_time': 1234.9671197300195})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__37.pkl


ONLINE LEARNING CYCLE 38

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 195 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6310 datapoints
Loss: 0.00739, iter: 0/100000
Loss: 0.00981, iter: 1000/100000
Loss: 0.02348, iter: 2000/100000
Loss: 0.02230, iter: 3000/100000
Loss: 0.02302, iter: 4000/100000
Loss: 0.01619, iter: 5000/100000
Loss: 0.00785, iter: 6000/100000
Loss: 0.00770, iter: 7000/100000
Loss: 0.00397, iter: 8000/100000
Loss: 0.01221, iter: 9000/100000
Loss: 0.01137, iter: 10000/100000
Loss: 0.01014, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11435.
Loaded best model with loss: 0.00237
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48006296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6683172], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46611148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67365056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45820877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.65801877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43944767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6603095], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44662553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6656206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45220494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6619392], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43603244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.64968616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.01503494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.03736084], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44353557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7160385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50359493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6866203], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4715502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68159175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45017934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6700937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47977307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6703204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47372213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6470949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.05405261], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44747564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.668214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44949305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.66126794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46190557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6700717], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45464167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6574256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4548464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6621641], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44318792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6701668], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4582417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6761234], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4511173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6566951], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45774674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6724286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4373456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6505806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.05327953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.02878438], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.01505799], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.11152866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.01729671], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.03580676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.04422712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.02080533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.00998026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.02593549], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.01035875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.01134597], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45603225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66121703], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4379571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66022575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45511127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66356117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49406746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6737857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4587599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6575523], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47479793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6622527], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4459096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6547336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.01818157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.00781857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.00751958], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.00247412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.00930883], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.01733618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.01706379], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.0003491], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.02126246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.079766], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.02066787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.01722959], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.02632126], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44970453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6803005], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43777108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.676033], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45493016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6899335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.467172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.665306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4561381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65844595], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45771658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66102445], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45314676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68485254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45206296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66857535], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (38,)
CUMULATIVE NUM SOLVED: 271.0
CUMULATIVE NUM SOLVED: 271.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0]
Tasks solved: 6 / 10
Average time for successes: 1.59240 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 6, 'num_total': 10, 'avg_suc_time': 1.5923957084790648, 'avg_ref_cost': 2.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8672, 'query_cost': 0.0, 'learning_time': 1277.7848090960179})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__38.pkl


ONLINE LEARNING CYCLE 39

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 200 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6375 datapoints
Loss: 0.00817, iter: 0/100000
Loss: 0.01126, iter: 1000/100000
Loss: 0.01068, iter: 2000/100000
Loss: 0.01890, iter: 3000/100000
Loss: 0.01124, iter: 4000/100000
Loss: 0.01361, iter: 5000/100000
Loss: 0.02991, iter: 6000/100000
Loss: 0.01553, iter: 7000/100000
Loss: 0.01515, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8359.
Loaded best model with loss: 0.00236
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4688293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7118335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47479478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6810529], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4683338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69400734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47986424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69067], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45607057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68178874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49424142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69698805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46290627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6791962], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4368202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69510597], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46592236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6986021], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46205482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69336176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47053388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7154485], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46184197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69060224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48143122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6925396], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46412694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68882805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47640663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69361496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47195056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6955704], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48062578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6842252], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47498932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6932591], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47018147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67934805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4653892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67896134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47436976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7007544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4830777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.699556], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47821462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68294525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47191352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69242495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47801644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6818972], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47244808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6785782], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4252937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68964326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4786249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6945179], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.462769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6906212], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47387314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7168224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47808364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6888107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47151756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6980513], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48607963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69356155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4469073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7021295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4493901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7122593], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48188585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70246476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46831045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6864011], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.475736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7032821], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44904935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69095904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46505657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7015349], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (39,)
CUMULATIVE NUM SOLVED: 281.0
CUMULATIVE NUM SOLVED: 281.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0]
Tasks solved: 10 / 10
Average time for successes: 1.46530 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.465303955593845, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8786, 'query_cost': 0.0, 'learning_time': 1316.8083043440129})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__39.pkl


ONLINE LEARNING CYCLE 40

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 205 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6500 datapoints
Loss: 0.01335, iter: 0/100000
Loss: 0.01097, iter: 1000/100000
Loss: 0.00938, iter: 2000/100000
Loss: 0.00685, iter: 3000/100000
Loss: 0.00530, iter: 4000/100000
Loss: 0.01135, iter: 5000/100000
Loss: 0.00830, iter: 6000/100000
Loss: 0.01520, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7070.
Loaded best model with loss: 0.00297
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4593224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67387265], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45834342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7225383], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46292934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6916742], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46123087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6643029], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4674545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67924076], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44988835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66764194], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45228696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7185854], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4690074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6698579], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46353152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6698454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46149388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70518476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46640435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6692268], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4583145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6713264], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4620203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7095494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46152046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6869426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5097397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68189764], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5339495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6831814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45953262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6763286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4674228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6835834], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46562478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6703904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48548108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.678961], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4399472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6644978], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45317644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6676155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4999146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6732201], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.42012942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45008942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66806513], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49312547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66872317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45540768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73131883], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.43781215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67868483], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4692915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6993219], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48843667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.66902894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44411206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6596366], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45200717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.65811986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47561592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66796815], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45784172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6939752], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47155988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6992892], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46078372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6628623], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44188634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6636418], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4601521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6794569], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.458131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7296692], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.42639932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6725379], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (40,)
CUMULATIVE NUM SOLVED: 291.0
CUMULATIVE NUM SOLVED: 291.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0]
Tasks solved: 10 / 10
Average time for successes: 1.46706 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4670649849809707, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8963, 'query_cost': 0.0, 'learning_time': 1353.0563158160076})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__40.pkl


ONLINE LEARNING CYCLE 41

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 210 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6614 datapoints
Loss: 0.01103, iter: 0/100000
Loss: 0.00495, iter: 1000/100000
Loss: 0.01895, iter: 2000/100000
Loss: 0.01341, iter: 3000/100000
Loss: 0.02250, iter: 4000/100000
Loss: 0.00917, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5208.
Loaded best model with loss: 0.00243
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.446448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6566156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4499824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.649924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.02575887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44560397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6665998], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4444749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.65830886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45197937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67090225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44673705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6615957], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4681601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.692015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44756314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6487582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.04300566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4569332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.64759046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.03156107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45734528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6585861], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4437649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6548331], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4694838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6617175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44421813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6456284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.03002482], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43313882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6422301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.06081907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44765893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65033793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.02438579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.02319339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.0695013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.02515012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.03497408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.04066551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.02554559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.05301327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.02336865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.02974583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.03467147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.05628939], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45009652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74755377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4447529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67061365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45122564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6626961], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45177925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6894554], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45297828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6993741], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4478494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6611483], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44999734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6470809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.04492257], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44659337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6708202], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44556576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.64478374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.04744781], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44647518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.64842117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.02450752], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44664073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6488085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.04959898], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6472333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.0224418], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44639575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6824524], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4687997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6818077], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43451753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.65753025], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44989294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.71038866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4537837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6577979], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44791383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6648596], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44788793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.64890295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.02999895], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45266765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6567533], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4603304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66142577], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4328823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68492335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4403617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6880885], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44729865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6492757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.02314411], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (41,)
CUMULATIVE NUM SOLVED: 293.0
CUMULATIVE NUM SOLVED: 293.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0]
Tasks solved: 2 / 10
Average time for successes: 1.45464 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 2, 'num_total': 10, 'avg_suc_time': 1.4546428654866759, 'avg_ref_cost': 7.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9136, 'query_cost': 0.0, 'learning_time': 1386.5596417540219})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__41.pkl


ONLINE LEARNING CYCLE 42

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 215 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6668 datapoints
Loss: 0.00895, iter: 0/100000
Loss: 0.01039, iter: 1000/100000
Loss: 0.01127, iter: 2000/100000
Loss: 0.01812, iter: 3000/100000
Loss: 0.01432, iter: 4000/100000
Loss: 0.01645, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5315.
Loaded best model with loss: 0.00186
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42693081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6710321], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43742707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7341157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44762942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.76710826], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.42713276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6920207], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44192356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68875045], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42905235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6845305], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4233231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6671498], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44993013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71257997], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44166484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6907012], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4315789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67460334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.425335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66813034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4264428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.66630113], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46857452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68608314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43092299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67176956], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4491135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68852544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43405008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69779515], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45090395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71024007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45461842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6771462], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4386657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67077345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45459864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7006986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42223856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6888743], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4245776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6765944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43339399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6917123], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44953266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6900022], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43739763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67514277], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4291532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68155015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42698538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7018174], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45418406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6964765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4329584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6899713], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45045865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7032607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.42964056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68234015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.43204495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6676241], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43680495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6714157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42820242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6821256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42650628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6926868], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4408222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6762084], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45075244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6823158], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45867765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67633873], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.42739573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66866636], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4239839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68065655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (42,)
CUMULATIVE NUM SOLVED: 303.0
CUMULATIVE NUM SOLVED: 303.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0]
Tasks solved: 10 / 10
Average time for successes: 1.46355 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4635491964058018, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9231, 'query_cost': 0.0, 'learning_time': 1420.445228994009})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__42.pkl


ONLINE LEARNING CYCLE 43

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 220 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6773 datapoints
Loss: 0.02145, iter: 0/100000
Loss: 0.01529, iter: 1000/100000
Loss: 0.00737, iter: 2000/100000
Loss: 0.01185, iter: 3000/100000
Loss: 0.01124, iter: 4000/100000
Loss: 0.00584, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5660.
Loaded best model with loss: 0.00276
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4567391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68718266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48839498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68955886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4640197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6756858], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4659567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6998661], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47470528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6846388], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4455044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70953333], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4859717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.73917603], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.456144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6817036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46337658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6726904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46705866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68638974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45669934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6800628], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46624783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69382274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50344306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73599416], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47482544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71519667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4790472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7221654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45666587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6762891], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4791507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6804821], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4624743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6787323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47012547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7240767], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4596298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67162013], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46379012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6873572], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46772552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6789999], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47174028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71393424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47117448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6798315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48176515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69903636], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46445915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6865654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4692981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69507736], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46924305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6837167], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4649496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6967452], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47698703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6901573], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45662114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69277996], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45097557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.68416244], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46633697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69303364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4637158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7080184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46575758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67782277], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4712634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71225953], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.473334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6745667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4842362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6882792], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48150983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.687178], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46922454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7002868], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (43,)
CUMULATIVE NUM SOLVED: 313.0
CUMULATIVE NUM SOLVED: 313.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0]
Tasks solved: 10 / 10
Average time for successes: 1.55131 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5513083223660942, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9390, 'query_cost': 0.0, 'learning_time': 1455.2033018160146})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__43.pkl


ONLINE LEARNING CYCLE 44

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 225 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6832 datapoints
Loss: 0.00655, iter: 0/100000
Loss: 0.00916, iter: 1000/100000
Loss: 0.00715, iter: 2000/100000
Loss: 0.00826, iter: 3000/100000
Loss: 0.00883, iter: 4000/100000
Loss: 0.01548, iter: 5000/100000
Loss: 0.00665, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6113.
Loaded best model with loss: 0.00260
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43251917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71924454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46646452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68462384], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46599686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6713054], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44743437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.66944283], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44500053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67505497], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4495171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67167497], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46413833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6768236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46413302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67018497], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4562072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67972434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46076712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67288727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44913653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6719708], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5137017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6831504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5070784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68362325], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4522754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6697698], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45515805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6685478], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4767059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6765144], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4413329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6790789], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46702036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7115657], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44356897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6792728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44383377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.666173], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45171922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6975516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46156916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6721123], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4524132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72396934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45450988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67240506], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46336386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6783295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44013613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.666502], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45775154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67443675], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45762706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69351226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45960456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7011532], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48074058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68804777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44897446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6822171], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5094908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6827185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45153177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.679288], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45783338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6761834], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47512582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7066142], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44869533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6960132], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46225798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66959536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45555788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6927742], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.466307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69646454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46398333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.675866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (44,)
CUMULATIVE NUM SOLVED: 323.0
CUMULATIVE NUM SOLVED: 323.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0]
Tasks solved: 10 / 10
Average time for successes: 1.55509 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5550870404404122, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9488, 'query_cost': 0.0, 'learning_time': 1492.09706950502})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__44.pkl


ONLINE LEARNING CYCLE 45

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 230 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6888 datapoints
Loss: 0.01781, iter: 0/100000
Loss: 0.00626, iter: 1000/100000
Loss: 0.02237, iter: 2000/100000
Loss: 0.00579, iter: 3000/100000
Loss: 0.00998, iter: 4000/100000
Loss: 0.03738, iter: 5000/100000
Loss: 0.01316, iter: 6000/100000
Loss: 0.02759, iter: 7000/100000
Loss: 0.01131, iter: 8000/100000
Loss: 0.01517, iter: 9000/100000
Loss: 0.01345, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10862.
Loaded best model with loss: 0.00255
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4804241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68124664], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4858085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68667394], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4845182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6792687], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49426663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68723613], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47890368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7266391], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4865835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.677604], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4743538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6800877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.483083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6705265], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5166385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6827393], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47956645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.675521], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52786046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6851602], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.499765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6834051], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50557303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6769845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4752449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6824016], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49183127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69122964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49224165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66824406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53636944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68818504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47444665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6885581], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5013341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66934025], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47307295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67755455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5049298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.679373], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.482977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70442545], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47312215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6761262], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47504005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69686824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47715494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6750296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5444628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.693588], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49487057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67063266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46317384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6618308], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47309044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6802824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4732716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65415305], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48269117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69476056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4898085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6790814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49464968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7015708], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47435597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7102058], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5085205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6808317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47131568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6962539], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48178372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6829824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48493943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67644274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5061233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6767377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47044587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6722432], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (45,)
CUMULATIVE NUM SOLVED: 333.0
CUMULATIVE NUM SOLVED: 333.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0]
Tasks solved: 10 / 10
Average time for successes: 1.46769 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4676908504014137, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9578, 'query_cost': 0.0, 'learning_time': 1537.1056576420087})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__45.pkl


ONLINE LEARNING CYCLE 46

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 235 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6920 datapoints
Loss: 0.01285, iter: 0/100000
Loss: 0.00699, iter: 1000/100000
Loss: 0.02553, iter: 2000/100000
Loss: 0.00940, iter: 3000/100000
Loss: 0.01332, iter: 4000/100000
Loss: 0.00959, iter: 5000/100000
Loss: 0.01989, iter: 6000/100000
Loss: 0.00855, iter: 7000/100000
Loss: 0.00732, iter: 8000/100000
Loss: 0.02076, iter: 9000/100000
Loss: 0.01741, iter: 10000/100000
Loss: 0.00897, iter: 11000/100000
Loss: 0.01331, iter: 12000/100000
Loss: 0.00768, iter: 13000/100000
Loss did not improve after 5000 itrs, terminating at itr 13393.
Loaded best model with loss: 0.00028
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43866265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6680439], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.445454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67644554], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.40575704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.671756], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4395258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6811935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43065524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67210275], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4285494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69638056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43033418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6663438], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.42848805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.682872], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48565188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70911324], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.424307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66794837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.433235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7064908], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.41741714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.66887236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44662192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68555945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.441265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6781017], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.42036918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6680834], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4317173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7023765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43411112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6721101], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44324324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6656387], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4084565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6904289], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43010867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.687892], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44028002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6669928], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4285835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68135875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4438517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6830175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.43525222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6853268], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44258383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66456646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4325636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6651495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42880315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6670383], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.43860567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.66881424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4340229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6672485], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43835047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.67995435], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.41085744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6767736], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4659464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.66441154], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42868724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6676282], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43843323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6658756], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43837956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6959534], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4360162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7233282], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42169216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6732401], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42938897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66552746], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4295357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68999714], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43049502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68266207], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (46,)
CUMULATIVE NUM SOLVED: 343.0
CUMULATIVE NUM SOLVED: 343.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0]
Tasks solved: 10 / 10
Average time for successes: 1.55764 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5576440940261818, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9643, 'query_cost': 0.0, 'learning_time': 1586.5607440400345})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__46.pkl


ONLINE LEARNING CYCLE 47

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 240 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6981 datapoints
Loss: 0.01612, iter: 0/100000
Loss: 0.01391, iter: 1000/100000
Loss: 0.01253, iter: 2000/100000
Loss: 0.01951, iter: 3000/100000
Loss: 0.00825, iter: 4000/100000
Loss: 0.00870, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5880.
Loaded best model with loss: 0.00100
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44540298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68414956], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43685922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66934854], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4747527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6905406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.42894045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6716875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46233276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6855129], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4244459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7425246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4378629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6994818], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.41617602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68458223], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4437418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69110453], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44379714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6696977], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.42089114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7075204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4304778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6895689], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42856032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7018694], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4371824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.711001], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44376916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68747216], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.439613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6758887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42899275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67899424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45181063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6644159], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44087216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6813364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4382806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7224058], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.436855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6703604], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4561843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6738914], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44789302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69562984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44170436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67452985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43247113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6696387], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4453922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68146974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43940526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6797238], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.43647054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6751062], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44428253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6758928], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.41586512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70011806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44365054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6707632], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.42557418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70707464], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4094813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6713852], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.446988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67298967], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.40437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.679574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44328082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6692086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4377142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72307616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44171125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7141568], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44780505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6791915], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4500282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6678944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (47,)
CUMULATIVE NUM SOLVED: 353.0
CUMULATIVE NUM SOLVED: 353.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0]
Tasks solved: 10 / 10
Average time for successes: 1.46487 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4648740733769956, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9748, 'query_cost': 0.0, 'learning_time': 1623.5390978270443})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__47.pkl


ONLINE LEARNING CYCLE 48

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 245 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7027 datapoints
Loss: 0.00854, iter: 0/100000
Loss: 0.01595, iter: 1000/100000
Loss: 0.00383, iter: 2000/100000
Loss: 0.00528, iter: 3000/100000
Loss: 0.01813, iter: 4000/100000
Loss: 0.00585, iter: 5000/100000
Loss: 0.00995, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6629.
Loaded best model with loss: 0.00286
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44214857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6858881], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45870745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6695563], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46685055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7146318], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45539477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.728349], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45071435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6920755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42856437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66346765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45198038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6704018], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45006117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.66710657], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.469266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67956847], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44456944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72540456], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44441578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6729374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4689083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67030424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45143822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6615252], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4598856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6725084], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48213372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6732489], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43877196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6671263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4462966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6676372], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46101075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6648508], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45463485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66940033], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45263654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6618162], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4506854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6616971], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4496601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6667678], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46362084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7034176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45737293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69797015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45592573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69083804], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44450393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6631974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46143347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68404275], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45421436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.65636575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4518922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6736798], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45087922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6804761], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.456101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70416707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45390987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.66287065], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44823396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6754768], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4581932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67736316], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4735411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6842436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4509634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.67269224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4488121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66343004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45630097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68714887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45551926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6647966], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44195312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.71886843], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (48,)
CUMULATIVE NUM SOLVED: 363.0
CUMULATIVE NUM SOLVED: 363.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0]
Tasks solved: 10 / 10
Average time for successes: 1.46739 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.467387280118419, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9832, 'query_cost': 0.0, 'learning_time': 1661.0116671060387})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__48.pkl


ONLINE LEARNING CYCLE 49

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 250 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7093 datapoints
Loss: 0.02291, iter: 0/100000
Loss: 0.00561, iter: 1000/100000
Loss: 0.00972, iter: 2000/100000
Loss: 0.02412, iter: 3000/100000
Loss: 0.00851, iter: 4000/100000
Loss: 0.01188, iter: 5000/100000
Loss: 0.00514, iter: 6000/100000
Loss: 0.00998, iter: 7000/100000
Loss: 0.00994, iter: 8000/100000
Loss: 0.01001, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9600.
Loaded best model with loss: 0.00274
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42622215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69564784], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4434872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6695597], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45019013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6629434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44473392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69027907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4404977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67560685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49147415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66761446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43702164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6879581], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.42595086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68724734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43266237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6955666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4301388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67571336], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44660327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6904351], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45680648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68496776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43694505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6761852], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.42452475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6963004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43873236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6662359], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4362664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66504616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44271263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6990609], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4253428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66905123], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43947995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68220824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47561464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69647056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4403169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69505674], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43740022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6791295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4411623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67796785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4807186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6697046], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43483886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.680354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.443409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6676195], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43165192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6638022], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4164503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6850665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4394001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6822993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48185512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6861322], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43852627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66944444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.43173182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6737711], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46267092], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6716476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4371336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67463535], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43721557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66784483], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43554452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6744297], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46530494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66749686], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43651372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66704845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.42745307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69029576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44203484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66913307], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (49,)
CUMULATIVE NUM SOLVED: 373.0
CUMULATIVE NUM SOLVED: 373.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0]
Tasks solved: 10 / 10
Average time for successes: 1.55970 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5597021662950283, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9947, 'query_cost': 0.0, 'learning_time': 1703.5595227130398})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__49.pkl


ONLINE LEARNING CYCLE 50

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 255 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7214 datapoints
Loss: 0.00784, iter: 0/100000
Loss: 0.00676, iter: 1000/100000
Loss: 0.02495, iter: 2000/100000
Loss: 0.01454, iter: 3000/100000
Loss: 0.00618, iter: 4000/100000
Loss: 0.00869, iter: 5000/100000
Loss: 0.00847, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6444.
Loaded best model with loss: 0.00244
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47619617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71711415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47894654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6853777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48165402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6672877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4800672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67617965], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46991733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67712927], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49057734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.678151], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48217508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67534], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47962245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7192615], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48847482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7853823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4782085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6739026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46716583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68064237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43829244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7182072], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47347558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69035023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48197457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6901362], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46746278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68077725], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46435553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67575294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4986961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70357764], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49022993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67831457], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47436664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6653375], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4848713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67647785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4985737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7252459], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45319155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6844579], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47623584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6837923], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47749364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6794629], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49640474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68585956], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50347155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6873051], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46913576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70332444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4475592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6762128], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47195134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7049499], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4839258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.67455506], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47235522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67430097], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4789347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6771535], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48024592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68210214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48143315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6932491], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4616921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6751481], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46517783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69150233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44681758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6847536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4927254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6787814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47828335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67560637], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47632998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70755917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (50,)
CUMULATIVE NUM SOLVED: 383.0
CUMULATIVE NUM SOLVED: 383.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0]
Tasks solved: 10 / 10
Average time for successes: 1.46463 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4646263763017486, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10121, 'query_cost': 0.0, 'learning_time': 1742.283536552044})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__50.pkl


ONLINE LEARNING CYCLE 51

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 260 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7279 datapoints
Loss: 0.01404, iter: 0/100000
Loss: 0.02115, iter: 1000/100000
Loss: 0.01217, iter: 2000/100000
Loss: 0.02496, iter: 3000/100000
Loss: 0.01549, iter: 4000/100000
Loss: 0.01350, iter: 5000/100000
Loss: 0.00654, iter: 6000/100000
Loss: 0.02055, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7748.
Loaded best model with loss: 0.00272
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46909648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6455087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.06943823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46717334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6551787], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44823107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6556712], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46481952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6596874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4602446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6530871], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45093304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6579293], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46813765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6878294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46773252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.64258945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.07165564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46664906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.65720403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4726153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6692063], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5019151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.65429026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45371315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6407233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.08461343], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46025008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6474859], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.06760652], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49982387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.64642185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.06853909], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48269117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.675289], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4561592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.664768], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4587601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.63809174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0717252], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47883934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66061014], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4578153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.65113384], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4731657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6646417], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4733117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6643823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46922198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6785541], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4606429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.65069157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4625798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6749132], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4841462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6512852], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43083513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.65479594], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46774435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67754215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44688016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6474406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.04652754], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4494634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6463359], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.05087189], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46597424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6535817], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4627283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66017765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47078052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.64508206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.06336098], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47749162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66169614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47188914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.65390325], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46070835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.64142007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.05448779], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4440215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.66894317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44988585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.64956766], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04507003], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46297765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.65384716], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48811722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.64903176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.09253334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4690905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.64731294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.0573286], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (51,)
CUMULATIVE NUM SOLVED: 384.0
CUMULATIVE NUM SOLVED: 384.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0]
Tasks solved: 1 / 10
Average time for successes: 1.49025 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 1.4902532938867807, 'avg_ref_cost': 15.0, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10237, 'query_cost': 0.0, 'learning_time': 1782.336673129059})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__51.pkl


ONLINE LEARNING CYCLE 52

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 265 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7408 datapoints
Loss: 0.00643, iter: 0/100000
Loss: 0.01964, iter: 1000/100000
Loss: 0.00904, iter: 2000/100000
Loss: 0.00867, iter: 3000/100000
Loss: 0.00616, iter: 4000/100000
Loss: 0.00851, iter: 5000/100000
Loss: 0.01244, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6551.
Loaded best model with loss: 0.00259
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4726823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68999314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47798702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68130314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46594414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68126935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50008297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70398116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51176447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7248722], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4588017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6771319], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43536022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6801705], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47829342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6784984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46684322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69739014], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45304495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6793213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47692916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6916576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47337753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6961659], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4798314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70395106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48401377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7443134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4894548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69123733], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48706502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6834871], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47825527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6984479], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.513673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6851588], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4710236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68915117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47793832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.71252215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47825164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69691765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47285286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68234086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46839613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71415967], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48408043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6800263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4809944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.686884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47505155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6842986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41773865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67495877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45832178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7007408], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47772238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69695497], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43925133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.67731774], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47698918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69015706], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4749112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6708934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45654958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73197454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46234512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6798943], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.484254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6829989], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4959019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.696919], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4834462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6842523], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48180634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6819278], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47736144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69265395], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46943685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6856844], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (52,)
CUMULATIVE NUM SOLVED: 394.0
CUMULATIVE NUM SOLVED: 394.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0]
Tasks solved: 10 / 10
Average time for successes: 1.46513 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4651280370075255, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10433, 'query_cost': 0.0, 'learning_time': 1822.1277033030638})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__52.pkl


ONLINE LEARNING CYCLE 53

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 270 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7485 datapoints
Loss: 0.00931, iter: 0/100000
Loss: 0.00805, iter: 1000/100000
Loss: 0.00706, iter: 2000/100000
Loss: 0.01150, iter: 3000/100000
Loss: 0.00646, iter: 4000/100000
Loss: 0.01533, iter: 5000/100000
Loss: 0.00551, iter: 6000/100000
Loss: 0.00793, iter: 7000/100000
Loss: 0.00603, iter: 8000/100000
Loss: 0.02016, iter: 9000/100000
Loss: 0.01349, iter: 10000/100000
Loss: 0.02246, iter: 11000/100000
Loss: 0.00855, iter: 12000/100000
Loss: 0.00821, iter: 13000/100000
Loss: 0.00469, iter: 14000/100000
Loss: 0.00474, iter: 15000/100000
Loss: 0.00822, iter: 16000/100000
Loss: 0.00748, iter: 17000/100000
Loss: 0.01540, iter: 18000/100000
Loss: 0.01144, iter: 19000/100000
Loss did not improve after 5000 itrs, terminating at itr 19861.
Loaded best model with loss: 0.00238
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48483506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6843235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45870432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6841649], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48356333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.683546], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47138098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6830904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48640296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68475306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49686575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72213614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49456495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.681542], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49743077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71865046], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49261326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6818126], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48223045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6788321], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48639882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6800285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47744563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7079348], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47539186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6765448], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49557704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6814177], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46570602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68247634], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4831836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6739887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47368443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6738898], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48784915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70620656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46597785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6847262], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45736107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6683665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48947078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6830314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49018836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.75018877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49475694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6758771], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48134515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67334783], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47682914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69026047], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4791349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69297266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4805333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.701058], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4794079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67636985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48358175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69184136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47886068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68259054], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49436232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.680788], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49548203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6832761], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46934864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68700075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4856235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6934453], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49227872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6916134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4595412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.67806476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48294407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6693588], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4871139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68572444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.494159], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7050488], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46453866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67612684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (53,)
CUMULATIVE NUM SOLVED: 404.0
CUMULATIVE NUM SOLVED: 404.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0]
Tasks solved: 10 / 10
Average time for successes: 1.46545 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4654482406942406, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10554, 'query_cost': 0.0, 'learning_time': 1883.3701472720713})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__53.pkl


ONLINE LEARNING CYCLE 54

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 275 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7550 datapoints
Loss: 0.01711, iter: 0/100000
Loss: 0.00712, iter: 1000/100000
Loss: 0.01338, iter: 2000/100000
Loss: 0.00991, iter: 3000/100000
Loss: 0.00847, iter: 4000/100000
Loss: 0.01187, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5998.
Loaded best model with loss: 0.00316
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49525064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71467674], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49721673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7114521], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48305398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70367384], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48864177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6974501], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48208258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69587886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48617435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70699173], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46097225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70186895], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49284923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70524615], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48289496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7010255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48722363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73926497], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.489251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7049783], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4998967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7174037], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5086251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69558775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49329612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70171565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5054785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69002306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48406255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70164764], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47872123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6913942], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4851508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69817317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49188703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72942066], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49106959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6848969], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49634424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6897939], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4739895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6865312], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49492127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.674908], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49162737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6926984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5012709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6929353], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4928763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69130576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49599668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7010564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49721977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69907856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48137945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7184909], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5003968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6925709], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48467895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.71933734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48917258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67345685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47784305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6848858], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49720463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69501656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48949546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69109845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4929562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6990068], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4742711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69201225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49225777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.739991], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49945927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70400923], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4503829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6933282], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (54,)
CUMULATIVE NUM SOLVED: 414.0
CUMULATIVE NUM SOLVED: 414.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0]
Tasks solved: 10 / 10
Average time for successes: 1.46327 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.463265497094835, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10664, 'query_cost': 0.0, 'learning_time': 1921.4698387830867})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__54.pkl


ONLINE LEARNING CYCLE 55

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 280 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7625 datapoints
Loss: 0.00786, iter: 0/100000
Loss: 0.02450, iter: 1000/100000
Loss: 0.00517, iter: 2000/100000
Loss: 0.00896, iter: 3000/100000
Loss: 0.01900, iter: 4000/100000
Loss: 0.02547, iter: 5000/100000
Loss: 0.01727, iter: 6000/100000
Loss: 0.00684, iter: 7000/100000
Loss: 0.01264, iter: 8000/100000
Loss: 0.00674, iter: 9000/100000
Loss: 0.01321, iter: 10000/100000
Loss: 0.00602, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11600.
Loaded best model with loss: 0.00103
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5018556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69530964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4852334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6931726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48344156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7034677], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4894965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7023026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47812048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7085999], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48474777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69665015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47985196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6951652], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47447574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6968019], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.502832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70103437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47899663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6868235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51605886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6961647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45191503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67993206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4797871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7072499], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44111818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6858985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5084483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6957487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4967515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7214231], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47569504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70936596], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49458417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7065394], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49061343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.701008], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49451], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67572093], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47953996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68570334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49297896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6855617], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4565585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68199176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48599207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69315845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49670172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71351755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4780844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67841023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.707717], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50284505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.71136355], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47102067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7227523], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49088877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7104932], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4780023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70558494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48644993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69801503], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48014835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71102536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48203263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7561556], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50876373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6948582], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4773843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69856197], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48828095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6964673], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4817234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68184894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4983157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68639576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49916723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7115106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (55,)
CUMULATIVE NUM SOLVED: 424.0
CUMULATIVE NUM SOLVED: 424.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0]
Tasks solved: 10 / 10
Average time for successes: 1.46068 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4606840663123877, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10788, 'query_cost': 0.0, 'learning_time': 1970.414862468082})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__55.pkl


ONLINE LEARNING CYCLE 56

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 285 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7683 datapoints
Loss: 0.01469, iter: 0/100000
Loss: 0.00907, iter: 1000/100000
Loss: 0.00530, iter: 2000/100000
Loss: 0.00980, iter: 3000/100000
Loss: 0.01205, iter: 4000/100000
Loss: 0.00754, iter: 5000/100000
Loss: 0.01358, iter: 6000/100000
Loss: 0.00982, iter: 7000/100000
Loss: 0.01489, iter: 8000/100000
Loss: 0.01480, iter: 9000/100000
Loss: 0.02098, iter: 10000/100000
Loss: 0.00596, iter: 11000/100000
Loss: 0.01056, iter: 12000/100000
Loss: 0.01028, iter: 13000/100000
Loss: 0.01252, iter: 14000/100000
Loss did not improve after 5000 itrs, terminating at itr 14801.
Loaded best model with loss: 0.00005
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44321406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6800337], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44056466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68238366], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.444928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69379616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4429941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7282046], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.41828635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69947493], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43348584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6729567], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44452393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68241584], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43363175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6819347], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4377504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68065923], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4106339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7122094], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44117564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7009429], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44810793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.678224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47989604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6776103], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46806547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6684349], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44349375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69888765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45486507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.711237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44249922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6719127], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4215835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69275033], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.42115214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6732353], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44649458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6992288], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43494606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6974031], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4383376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6872355], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43734667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.682979], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47101316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.71482325], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45277882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6902209], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4431634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6721232], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42933744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67096615], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4451706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7014039], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41928715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6802104], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44309837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6806332], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50004333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68113637], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45173144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70089716], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44092187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6709058], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44207606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6753064], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43212765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73046243], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4380924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68605036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45152152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6732295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43426704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6867931], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49082097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6767401], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44080487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6806777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (56,)
CUMULATIVE NUM SOLVED: 434.0
CUMULATIVE NUM SOLVED: 434.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0]
Tasks solved: 10 / 10
Average time for successes: 1.46490 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4649041895172559, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10885, 'query_cost': 0.0, 'learning_time': 2023.5885390740586})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__56.pkl


ONLINE LEARNING CYCLE 57

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 290 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7729 datapoints
Loss: 0.01131, iter: 0/100000
Loss: 0.02464, iter: 1000/100000
Loss: 0.00922, iter: 2000/100000
Loss: 0.01354, iter: 3000/100000
Loss: 0.01629, iter: 4000/100000
Loss: 0.00708, iter: 5000/100000
Loss: 0.01043, iter: 6000/100000
Loss: 0.01921, iter: 7000/100000
Loss: 0.01792, iter: 8000/100000
Loss: 0.02244, iter: 9000/100000
Loss: 0.00903, iter: 10000/100000
Loss: 0.01537, iter: 11000/100000
Loss: 0.00863, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12317.
Loaded best model with loss: 0.00274
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43243086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.713539], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43117085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7680383], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45262107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70666075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43747437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70160323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44119397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6959034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43410367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7476496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47103414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.74439937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46989968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7120829], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45088565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69801265], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43519783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7362463], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44554558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72659713], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44463584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7341116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4217471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6942917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43873125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.74256116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43646747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70185196], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44464275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6964532], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44394746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71600944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42785645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69392735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4262311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7202795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50436354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7130487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45374212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.698309], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45376304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68474156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43766445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69496655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44223118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75505185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43001753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.732514], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44990817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7156054], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44346976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7000518], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44063482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7245912], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42769963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7095188], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43612462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7071448], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45411426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6951302], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45762318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6985796], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43895575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6991646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46068504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69982237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4834046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6979283], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44692782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69661677], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43818304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7099173], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44464988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69958323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4389544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7049681], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47359502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6958555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (57,)
CUMULATIVE NUM SOLVED: 444.0
CUMULATIVE NUM SOLVED: 444.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0]
Tasks solved: 10 / 10
Average time for successes: 1.57004 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5700446413480678, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10969, 'query_cost': 0.0, 'learning_time': 2073.009856090066})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__57.pkl


ONLINE LEARNING CYCLE 58

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 295 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7822 datapoints
Loss: 0.01338, iter: 0/100000
Loss: 0.01565, iter: 1000/100000
Loss: 0.01362, iter: 2000/100000
Loss: 0.02254, iter: 3000/100000
Loss: 0.01148, iter: 4000/100000
Loss: 0.00835, iter: 5000/100000
Loss: 0.00579, iter: 6000/100000
Loss: 0.01229, iter: 7000/100000
Loss: 0.01221, iter: 8000/100000
Loss: 0.00591, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9797.
Loaded best model with loss: 0.00212
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43673027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6751965], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43145618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6677121], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44141012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67729867], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.41836166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69263774], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45313102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6910338], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45309213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69335055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.42287487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6630555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4168114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6590277], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42650223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.668689], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41525748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6730591], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.41966918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6646901], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.42216524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6705273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42648926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6754882], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.42821163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67396814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.41833887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6592964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.0538158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04891523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.03827796], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45342243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6985686], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4226648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6752034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.435109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67678225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43163002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6798283], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4234804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67640036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4264161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69194514], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44257796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6707456], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.42480215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6621159], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45431063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6678017], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42682832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66745436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42985165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6622789], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43433794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6770355], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.42726457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6629761], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43239197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69631773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43265814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.663229], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44227684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6766151], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4257613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6634657], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43690303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66491485], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42670646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66588616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41930497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6611348], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4245972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6638104], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4371173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67405427], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46344602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6744353], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.42643413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67589426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4208767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69006974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (58,)
CUMULATIVE NUM SOLVED: 453.0
CUMULATIVE NUM SOLVED: 453.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0]
Tasks solved: 9 / 10
Average time for successes: 1.58062 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.5806235748006858, 'avg_ref_cost': 1.6666666666666667, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11108, 'query_cost': 0.0, 'learning_time': 2118.6113933010492})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__58.pkl


ONLINE LEARNING CYCLE 59

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 300 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7878 datapoints
Loss: 0.00780, iter: 0/100000
Loss: 0.01749, iter: 1000/100000
Loss: 0.00963, iter: 2000/100000
Loss: 0.01263, iter: 3000/100000
Loss: 0.01390, iter: 4000/100000
Loss: 0.01111, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5496.
Loaded best model with loss: 0.00084
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45351925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7384707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4470076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6810006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4517803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67659086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46278435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6868165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47005805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67809325], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.466318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68952996], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44483203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7017565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47465006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6968115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4524602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69531125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45659497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7740289], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46783638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6862909], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4701206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69005346], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4461922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67008847], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.41328576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66973895], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4528939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7023422], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44861645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.74620277], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4584252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71181273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44962078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6753313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44747114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.688607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44108817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7117427], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45287058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6830772], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4579504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69396555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46579796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68210477], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45496413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7157249], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45194224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7081881], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47082546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6822216], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44663927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6661967], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.453329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7173421], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46021077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67814904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43875995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68029606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43545532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66970223], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47457874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67467254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48535278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6809397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46221805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7261942], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4455944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68911135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44963342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7010414], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44195735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6853673], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4432775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7103243], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4458862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6845137], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45103955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6820264], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (59,)
CUMULATIVE NUM SOLVED: 463.0
CUMULATIVE NUM SOLVED: 463.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0]
Tasks solved: 10 / 10
Average time for successes: 1.46464 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4646356685901991, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11205, 'query_cost': 0.0, 'learning_time': 2157.4109194410266})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__59.pkl


ONLINE LEARNING CYCLE 60

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 305 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7924 datapoints
Loss: 0.01306, iter: 0/100000
Loss: 0.00739, iter: 1000/100000
Loss: 0.00962, iter: 2000/100000
Loss: 0.01373, iter: 3000/100000
Loss: 0.02440, iter: 4000/100000
Loss: 0.01290, iter: 5000/100000
Loss: 0.00642, iter: 6000/100000
Loss: 0.01077, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7671.
Loaded best model with loss: 0.00298
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43864733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7186718], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44258985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67308104], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44982302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6915117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43291035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6763475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44472066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69115025], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44442624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6885963], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47663522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68102723], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4382489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6703711], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43696845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.711949], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44801745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67245233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44657558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69968736], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45362282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6772777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50877655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6941373], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43430555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67945933], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45014834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.694387], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47361666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6961953], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44177628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67385554], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47390246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6935212], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44339794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6768354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45100757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7089939], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45124424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7139351], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45599654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7026392], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4542268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68052846], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.43245715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7128157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42994303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74250376], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46181825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6845478], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44893718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68026793], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4434708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6837871], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49514282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.705285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4445124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6980502], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44358996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6772851], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45582905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74196625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4482886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68009156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45419505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67682457], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4470222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6874226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43388385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70244217], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44767377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71261656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4568542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6872967], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44002914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6875001], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4499666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68059224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (60,)
CUMULATIVE NUM SOLVED: 473.0
CUMULATIVE NUM SOLVED: 473.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0]
Tasks solved: 10 / 10
Average time for successes: 1.46436 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4643646854819963, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11287, 'query_cost': 0.0, 'learning_time': 2199.8684604890295})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__60.pkl


ONLINE LEARNING CYCLE 61

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 310 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7990 datapoints
Loss: 0.02528, iter: 0/100000
Loss: 0.01849, iter: 1000/100000
Loss: 0.01383, iter: 2000/100000
Loss: 0.00617, iter: 3000/100000
Loss: 0.00952, iter: 4000/100000
Loss: 0.02614, iter: 5000/100000
Loss: 0.01659, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6905.
Loaded best model with loss: 0.00309
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45633855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6602395], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48207483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.690583], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47573557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6663551], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45977592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68031603], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4562272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6873624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4501305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66076946], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4499153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67956686], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4515615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6761089], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45464268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6711898], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47359338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67078066], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.465536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70019776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45906487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6653832], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.449921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7174259], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44862968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.65439206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46621573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6702631], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46669394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6655491], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47512805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6769228], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45456305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6716217], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4464136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67529225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4559317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6654199], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46385887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6881365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46141326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69440216], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46673065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6682402], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44002774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.66984147], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47965622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67279285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5876637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74411064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05468433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07152098], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02097651], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02328919], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.14537482], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05231145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01753688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05507769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01820606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04536587], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02991392], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01780372], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03212721], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04579342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06766973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03307701], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02654986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01833487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01921443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02426455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02040992], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44382617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6815504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45577085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6776063], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45835134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6709311], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47186962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67927516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4582699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.654496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46645787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6655299], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43728915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6796505], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4708657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68015933], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46341422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66284823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4496773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.652653], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45719376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.695782], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45897985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6834937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (61,)
CUMULATIVE NUM SOLVED: 482.0
CUMULATIVE NUM SOLVED: 482.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0]
Tasks solved: 9 / 10
Average time for successes: 1.46006 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.4600602238303206, 'avg_ref_cost': 1.6666666666666667, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11387, 'query_cost': 0.0, 'learning_time': 2241.4648604460235})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__61.pkl


ONLINE LEARNING CYCLE 62

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 315 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8058 datapoints
Loss: 0.00509, iter: 0/100000
Loss: 0.01447, iter: 1000/100000
Loss: 0.01287, iter: 2000/100000
Loss: 0.01629, iter: 3000/100000
Loss: 0.00603, iter: 4000/100000
Loss: 0.01138, iter: 5000/100000
Loss: 0.01092, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6061.
Loaded best model with loss: 0.00290
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46307993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68823487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46650428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67688304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47095323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6453087], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.03764278], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47434926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.65068567], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4979165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6562117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47201142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6581785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45236024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.63215446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.06386917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.487455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.65162855], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4800279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6546782], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46928328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.65857667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44660217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.646783], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.00840922], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.00339384], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.05754004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47643086], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4651557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6352869], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.06639574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4844167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.65008056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49283397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.66877216], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47980353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.65356296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4909268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66745883], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48999813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.65335405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4755056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6627252], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4797663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6526019], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46571317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6495294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.0394785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4658325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.65414715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48049667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67042434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45988688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6641457], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46473864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6815941], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48089555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6882511], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47518012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66444767], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48100418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.65497726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48199108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67472816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4739046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6370316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.07918351], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49420568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67430216], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47245815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69445586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5026719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6555473], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45257702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.64852107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.04993143], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47109133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.64745146], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.0380289], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46821246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6746249], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4579101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6668727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51087373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6620069], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48507932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6441235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.06252539], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5124301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6869669], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (62,)
CUMULATIVE NUM SOLVED: 484.0
CUMULATIVE NUM SOLVED: 484.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0]
Tasks solved: 2 / 10
Average time for successes: 1.45992 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 2, 'num_total': 10, 'avg_suc_time': 1.459924749986385, 'avg_ref_cost': 7.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11496, 'query_cost': 0.0, 'learning_time': 2281.805535849009})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__62.pkl


ONLINE LEARNING CYCLE 63

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 320 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8111 datapoints
Loss: 0.01971, iter: 0/100000
Loss: 0.00788, iter: 1000/100000
Loss: 0.00724, iter: 2000/100000
Loss: 0.00768, iter: 3000/100000
Loss: 0.01487, iter: 4000/100000
Loss: 0.01271, iter: 5000/100000
Loss: 0.00817, iter: 6000/100000
Loss: 0.01881, iter: 7000/100000
Loss: 0.00649, iter: 8000/100000
Loss: 0.01168, iter: 9000/100000
Loss: 0.01128, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10261.
Loaded best model with loss: 0.00240
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4516108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67355156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45014074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67788064], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43746176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.683496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44953912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7046211], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44001564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6985752], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45223585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7145137], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44613898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71018654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4560926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67098826], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46686724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6817497], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4480509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6973395], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4568108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6716657], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45151657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6814122], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44872895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68805015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45164755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66839707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45815906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.67205095], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4529377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6814643], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43748456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6865041], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4828694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6827803], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44446376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6793931], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46159086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.72446984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43650618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6758159], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45326382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6941995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44908062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67291236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44332877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.678242], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4576486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6839056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46138462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6707035], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4345755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67730415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45202976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6789485], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45754266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69812506], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43067572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6863519], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45430106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69547516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4532957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6695794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4683572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7030796], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4562579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6943248], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43834943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6943467], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4672649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.710987], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42444548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6829779], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4484949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7049697], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.454938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6789023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45961887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69296604], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (63,)
CUMULATIVE NUM SOLVED: 494.0
CUMULATIVE NUM SOLVED: 494.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0]
Tasks solved: 10 / 10
Average time for successes: 1.45878 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.458776743800263, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11586, 'query_cost': 0.0, 'learning_time': 2329.4216526210075})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__63.pkl


ONLINE LEARNING CYCLE 64

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 325 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8150 datapoints
Loss: 0.00547, iter: 0/100000
Loss: 0.00549, iter: 1000/100000
Loss: 0.01304, iter: 2000/100000
Loss: 0.01099, iter: 3000/100000
Loss: 0.01670, iter: 4000/100000
Loss: 0.01568, iter: 5000/100000
Loss: 0.00340, iter: 6000/100000
Loss: 0.01455, iter: 7000/100000
Loss: 0.00802, iter: 8000/100000
Loss: 0.01591, iter: 9000/100000
Loss: 0.01470, iter: 10000/100000
Loss: 0.01699, iter: 11000/100000
Loss: 0.00757, iter: 12000/100000
Loss: 0.02256, iter: 13000/100000
Loss: 0.03024, iter: 14000/100000
Loss did not improve after 5000 itrs, terminating at itr 14856.
Loaded best model with loss: 0.00256
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4927879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68638134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4523112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7372697], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4586319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67471963], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46979317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6665216], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43485847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6872799], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4622955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69442475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47606874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6836032], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4540549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6775781], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42662445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6673884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45635334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6714941], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4654935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6920611], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46186218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6737909], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44428265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6751278], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46347278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71026164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48967165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71942186], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45974237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6869332], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46557614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.684909], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45325097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6964141], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45403177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6697886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4582291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67343324], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45886266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6977458], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44827425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67123854], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46032017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6794529], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47166547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.698353], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47868288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67342746], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45903385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66978586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46207234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6968935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48351884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7509945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4632087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6864888], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4488435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72936964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46589828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6948098], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.469233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7153136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4568688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68482214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45670533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.716701], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46563473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68046004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47333613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6952947], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45433813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6788877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45485842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6775077], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46316388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67050964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46117163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7262525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (64,)
CUMULATIVE NUM SOLVED: 504.0
CUMULATIVE NUM SOLVED: 504.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0]
Tasks solved: 10 / 10
Average time for successes: 1.45179 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4517856635939097, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11661, 'query_cost': 0.0, 'learning_time': 2384.729770209029})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__64.pkl


ONLINE LEARNING CYCLE 65

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 330 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8198 datapoints
Loss: 0.00905, iter: 0/100000
Loss: 0.00590, iter: 1000/100000
Loss: 0.03374, iter: 2000/100000
Loss: 0.01296, iter: 3000/100000
Loss: 0.00834, iter: 4000/100000
Loss: 0.01956, iter: 5000/100000
Loss: 0.00856, iter: 6000/100000
Loss: 0.01022, iter: 7000/100000
Loss: 0.01649, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8612.
Loaded best model with loss: 0.00083
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5000425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6871595], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49033082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.686436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48744747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6945175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49260613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6813042], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49038988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69240147], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4982893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67587686], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4961726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7207667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4637226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68778294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47363997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6934339], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48555508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67861575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5131298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71584845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4887154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69565964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49093458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68817586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49684837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6704875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48740163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7026605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49331433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68596196], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47884974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68542737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47748142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6786792], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47180972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6806336], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48143837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67859024], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49690595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70747864], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.506779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7402775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5050628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6964377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49941805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70317733], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4801562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6803643], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4829222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68339413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4904148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6905283], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48698536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.693323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4994534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7000745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5025228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6857359], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49343035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70673037], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49550003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69849646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4870149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6763974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4507199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67475206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4854547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6805353], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5041694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6836774], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49511024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6813077], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47675675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7000233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4943233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6901139], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47253537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6797534], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (65,)
CUMULATIVE NUM SOLVED: 514.0
CUMULATIVE NUM SOLVED: 514.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0]
Tasks solved: 10 / 10
Average time for successes: 1.45417 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.454172506800387, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11747, 'query_cost': 0.0, 'learning_time': 2429.4665393050527})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__65.pkl


ONLINE LEARNING CYCLE 66

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 335 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8244 datapoints
Loss: 0.00981, iter: 0/100000
Loss: 0.01609, iter: 1000/100000
Loss: 0.01419, iter: 2000/100000
Loss: 0.01210, iter: 3000/100000
Loss: 0.01566, iter: 4000/100000
Loss: 0.00656, iter: 5000/100000
Loss: 0.01219, iter: 6000/100000
Loss: 0.00680, iter: 7000/100000
Loss: 0.00815, iter: 8000/100000
Loss: 0.02237, iter: 9000/100000
Loss: 0.01100, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10612.
Loaded best model with loss: 0.00226
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43826613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67673993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.443692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67633337], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43512616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6725963], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43433645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72948676], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42295808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67189735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42964968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67178094], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43286756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7713163], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43216315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68346095], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44482803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6740713], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41853562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.683272], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.42892492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68931496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4384576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67286867], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42783433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6721829], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.40418786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66555613], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4425975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.67803955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44172204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68661255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41395062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74159193], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4366807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66933525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44697595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6738881], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4393921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68266803], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43592387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69942814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4744854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68433446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44838184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6752225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4540765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6869073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4584872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67955613], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5050129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71407175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4383942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67445874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4355132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7000536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44903657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70372796], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46644723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6793657], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4525134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67604905], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45417365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67425805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48374677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68224895], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43547395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67564017], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4282546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69946086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44350624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.67247987], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43750447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6994541], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4291966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68365926], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44154787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6789574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.41629502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6755107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (66,)
CUMULATIVE NUM SOLVED: 524.0
CUMULATIVE NUM SOLVED: 524.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0]
Tasks solved: 10 / 10
Average time for successes: 1.45842 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4584214983799029, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11832, 'query_cost': 0.0, 'learning_time': 2477.918981503055})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__66.pkl


ONLINE LEARNING CYCLE 67

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 340 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8311 datapoints
Loss: 0.01596, iter: 0/100000
Loss: 0.00683, iter: 1000/100000
Loss: 0.01305, iter: 2000/100000
Loss: 0.00724, iter: 3000/100000
Loss: 0.01058, iter: 4000/100000
Loss: 0.01043, iter: 5000/100000
Loss: 0.00949, iter: 6000/100000
Loss: 0.01748, iter: 7000/100000
Loss: 0.00463, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8264.
Loaded best model with loss: 0.00313
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46584246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6909968], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48966724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7140296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49723923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71012914], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.476987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7038792], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4797447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.682964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4703492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6759562], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4783432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7063478], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4761216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68974096], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48901165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6815378], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4713625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6969148], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4933272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72609645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46868435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70700914], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50883466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68374383], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5200851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6898719], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4885859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76141787], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4750241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69035953], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48190066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6913072], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44098136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6826415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4812482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71195364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48925433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7000059], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47813585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7332631], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46374887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66919506], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47576594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67775136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46506712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6971829], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45384684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.675879], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4890275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6932612], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48897588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75423175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45852843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6859822], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4799544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7005858], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45557576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69712317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4590597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67025304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48185897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6887571], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46702495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71140367], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.503837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67846215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45131668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7031507], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47279358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6745053], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45371723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7434062], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47503802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.674293], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49658215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71871406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47615445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7213821], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (67,)
CUMULATIVE NUM SOLVED: 534.0
CUMULATIVE NUM SOLVED: 534.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0]
Tasks solved: 10 / 10
Average time for successes: 1.45457 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4545723288028967, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11939, 'query_cost': 0.0, 'learning_time': 2522.723930440028})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__67.pkl


ONLINE LEARNING CYCLE 68

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 345 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8353 datapoints
Loss: 0.02531, iter: 0/100000
Loss: 0.01391, iter: 1000/100000
Loss: 0.01473, iter: 2000/100000
Loss: 0.00432, iter: 3000/100000
Loss: 0.02036, iter: 4000/100000
Loss: 0.01026, iter: 5000/100000
Loss: 0.01300, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6179.
Loaded best model with loss: 0.00208
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44267583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68014705], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45278868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68790776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45355842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6835447], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46124005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6833701], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49545553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75160575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45257047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6829112], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46431392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7016416], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44747317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68196875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46564668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69050807], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45320427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6785647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4468916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69464546], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45718208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69099367], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45856437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7056093], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45234495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6944454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44763288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7745056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4417719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.75361], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45289966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67673343], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47307995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7041873], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45385775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68661654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4493118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.71580946], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4532817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6812007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44859546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6887969], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43725914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68491995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45184526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6846031], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.460442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67738944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47088414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6888918], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47682366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7154173], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.42170808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6857219], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45540643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7141599], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45303598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7123153], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46132746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6830111], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4589749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.68102413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46361783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.718469], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4524744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71298164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44840446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67959887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43455032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6932406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45336294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68328], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43308836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.682669], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43074796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67532796], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4631779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7166035], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (68,)
CUMULATIVE NUM SOLVED: 544.0
CUMULATIVE NUM SOLVED: 544.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0]
Tasks solved: 10 / 10
Average time for successes: 1.57981 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.579805422318168, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12019, 'query_cost': 0.0, 'learning_time': 2564.5771117720287})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__68.pkl


ONLINE LEARNING CYCLE 69

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 350 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8393 datapoints
Loss: 0.00839, iter: 0/100000
Loss: 0.00727, iter: 1000/100000
Loss: 0.02469, iter: 2000/100000
Loss: 0.02058, iter: 3000/100000
Loss: 0.00945, iter: 4000/100000
Loss: 0.00846, iter: 5000/100000
Loss: 0.01278, iter: 6000/100000
Loss: 0.01375, iter: 7000/100000
Loss: 0.01164, iter: 8000/100000
Loss: 0.02247, iter: 9000/100000
Loss: 0.02669, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10544.
Loaded best model with loss: 0.00087
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4696361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70091504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47047925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73776335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46515065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6935712], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4596338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70192516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47200173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6857121], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47077435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7220451], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48558038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6930672], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4574624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67617005], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44807506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7000951], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46523294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69042504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4769482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.73126864], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45564976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69236064], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46359727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.707367], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4412227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67970985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45984063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.740963], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47164983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6949399], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4560513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69131655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46523428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6900749], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44995758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68441135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48939344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70426303], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45452932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7288249], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4631694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68459105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44905016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7096075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45888945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69008356], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4569175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6969129], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4472493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7014208], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5247354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72360575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48511842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7056695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46969888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7035543], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4742886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70929796], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45698693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6822078], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46166375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74267995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4669975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6895833], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4602128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68747056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45816526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.684857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46316358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7019687], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45258263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7041327], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4563609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6783654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45625058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.708714], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44477278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6956755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (69,)
CUMULATIVE NUM SOLVED: 554.0
CUMULATIVE NUM SOLVED: 554.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0]
Tasks solved: 10 / 10
Average time for successes: 1.45322 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4532203077338637, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12094, 'query_cost': 0.0, 'learning_time': 2613.3831633720256})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__69.pkl


ONLINE LEARNING CYCLE 70

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 355 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8424 datapoints
Loss: 0.00910, iter: 0/100000
Loss: 0.00818, iter: 1000/100000
Loss: 0.02290, iter: 2000/100000
Loss: 0.01270, iter: 3000/100000
Loss: 0.00733, iter: 4000/100000
Loss: 0.00548, iter: 5000/100000
Loss: 0.02062, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6553.
Loaded best model with loss: 0.00316
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44262052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67161256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44655547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68899477], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44693807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6757126], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4374021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71126324], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4497208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6929262], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45017487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66914403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46170038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6960091], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44188923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70163655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44297314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67120856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4404286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70571244], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45544907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6743293], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44740945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68660724], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44462684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6878312], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46226528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6989684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44829938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.67435884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4485018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6690067], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43705112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68026125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44284892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6758579], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48569834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6862778], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4460183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69849426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44042626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7124634], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48232412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69636697], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4520044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6749739], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.438084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.66997916], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4475206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67668337], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45359245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67168146], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4441087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69170594], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.42526993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7331014], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49518803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6882544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44119748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68875825], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46335357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6883974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44409388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6814541], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44436675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.688056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4895491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6790055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4829964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68466413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4820325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6988424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4352424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68085426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4307446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6676959], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44698143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6784552], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46413195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7029772], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (70,)
CUMULATIVE NUM SOLVED: 564.0
CUMULATIVE NUM SOLVED: 564.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0]
Tasks solved: 10 / 10
Average time for successes: 1.45447 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4544738284195773, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12158, 'query_cost': 0.0, 'learning_time': 2655.862073961034})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__70.pkl


ONLINE LEARNING CYCLE 71

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 360 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8454 datapoints
Loss: 0.01908, iter: 0/100000
Loss: 0.00806, iter: 1000/100000
Loss: 0.00843, iter: 2000/100000
Loss: 0.01554, iter: 3000/100000
Loss: 0.02579, iter: 4000/100000
Loss: 0.01874, iter: 5000/100000
Loss: 0.01145, iter: 6000/100000
Loss: 0.01008, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7527.
Loaded best model with loss: 0.00017
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4513853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68787694], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4469832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69618106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43180597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.74436206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45602244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68125224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46581653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68264556], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45965794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6956754], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44877496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69005346], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45623636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68005675], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45296794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6940287], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46095127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68227136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45638782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6862413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46811327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7012309], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4592303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68203735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44329602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.73300105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4418496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.67539114], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4157687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68355435], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45826972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69443697], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4456948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69299054], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47616175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68196344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48575497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68081075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43748993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7332763], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4602803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6855318], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45640782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68428206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4364997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7403651], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45891055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7031553], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4721523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71466297], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43662792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.677734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45952258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7146037], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46950996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7000835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4101291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6780913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04750673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04700759], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.08393824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04336671], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.05948898], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.05056331], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.043102], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04929556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.09499907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.10105874], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.0574741], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04943329], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.06991607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.09563397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.06059443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.0736775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04847428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.05505804], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45079425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.699691], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4591442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68825746], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44477278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67958087], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4394841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6800389], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44735613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7180973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45787802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6963131], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4903253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6812777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44009614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6726051], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (71,)
CUMULATIVE NUM SOLVED: 573.0
CUMULATIVE NUM SOLVED: 573.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0]
Tasks solved: 9 / 10
Average time for successes: 1.44881 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.4488082096375163, 'avg_ref_cost': 1.6666666666666667, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12222, 'query_cost': 0.0, 'learning_time': 2699.997644752031})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__71.pkl


ONLINE LEARNING CYCLE 72

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 365 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8507 datapoints
Loss: 0.00681, iter: 0/100000
Loss: 0.01139, iter: 1000/100000
Loss: 0.03056, iter: 2000/100000
Loss: 0.01231, iter: 3000/100000
Loss: 0.00660, iter: 4000/100000
Loss: 0.01364, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5464.
Loaded best model with loss: 0.00266
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45758218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6753652], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44741127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6577598], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46815875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6663195], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44963115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.649333], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.04071023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44731674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7511781], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5013541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68226075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44905308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.65401083], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47707278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6576411], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4156193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6470876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06073971], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.05512105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45288137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7002164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.442034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6538496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4283028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.662935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45943576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6511852], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45672116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6788217], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45531127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.64882857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.05776879], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43289936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6768053], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45602074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6656828], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44868645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6549119], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4593078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66031426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44299707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7030708], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4524666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6594051], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44663072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7132996], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4409847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6560157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.42838228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6459962], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.09266304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45327988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66948086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44750187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6579661], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45009834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6927452], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.43018848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.64844716], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.0533443], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44951433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67053866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4464653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65738803], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46523157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6524202], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4507787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.65179926], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44721657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6496619], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.06067076], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43628994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69694275], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4590091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6598286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4504222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6596136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43806273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65522045], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45015964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6504155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47263515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66685975], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44760916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6844012], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (72,)
CUMULATIVE NUM SOLVED: 577.0
CUMULATIVE NUM SOLVED: 577.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0]
Tasks solved: 4 / 10
Average time for successes: 1.45300 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 4, 'num_total': 10, 'avg_suc_time': 1.4530015735363122, 'avg_ref_cost': 3.75, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12315, 'query_cost': 0.0, 'learning_time': 2740.978376510029})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__72.pkl


ONLINE LEARNING CYCLE 73

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 370 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8542 datapoints
Loss: 0.01123, iter: 0/100000
Loss: 0.01501, iter: 1000/100000
Loss: 0.01098, iter: 2000/100000
Loss: 0.02374, iter: 3000/100000
Loss: 0.01138, iter: 4000/100000
Loss: 0.00712, iter: 5000/100000
Loss: 0.01529, iter: 6000/100000
Loss: 0.02159, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7899.
Loaded best model with loss: 0.00294
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4329469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7126107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4711187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6977695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.42361763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69360614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43032673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69075906], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45479712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6878728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44770712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68050176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7094017], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4301237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6819266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42220935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69516236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45288542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6840521], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4601215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6796777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44175863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6764697], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42351487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6775191], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43298873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.738521], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.42104328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6824835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.42621508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7529874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43320704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70107645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43971428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71237683], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4354156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69611114], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4395385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6777432], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42860284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68048114], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4366444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6980877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44403633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.705514], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46460512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.694536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45365205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71028054], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.41391128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6753247], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4480878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6874209], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.42378303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6817487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42914772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68275166], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4635741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71478856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43256518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6814461], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.42992958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7005016], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4271776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69481415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5029625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69350857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43220505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69189537], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4500337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7003188], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44885322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69307417], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41559312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67484206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43754622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6994897], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.447385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68799686], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (73,)
CUMULATIVE NUM SOLVED: 587.0
CUMULATIVE NUM SOLVED: 587.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0]
Tasks solved: 10 / 10
Average time for successes: 1.59151 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5915104741521646, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12388, 'query_cost': 0.0, 'learning_time': 2786.083346001047})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__73.pkl


ONLINE LEARNING CYCLE 74

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 375 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8599 datapoints
Loss: 0.01178, iter: 0/100000
Loss: 0.00992, iter: 1000/100000
Loss: 0.00868, iter: 2000/100000
Loss: 0.01194, iter: 3000/100000
Loss: 0.01996, iter: 4000/100000
Loss: 0.01411, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5800.
Loaded best model with loss: 0.00308
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4465861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71958345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45084888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7394998], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45522133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72072434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45876724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6998908], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42725605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7380779], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45219472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69700474], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47332367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71717894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44574335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7161001], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46871924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.72604907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44071576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6940978], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46429127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7033225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43934852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7197628], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4363937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70178556], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46422738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69260514], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46200398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72208995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4535036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7036442], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45198095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70645607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45440403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69517815], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46269068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6971017], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47058043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.73125243], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4551158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6936668], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47207615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6980899], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4554617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71529305], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45288423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6999605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45590955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7026767], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4512305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69059074], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45969987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7035414], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5066566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7132764], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45884413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7117843], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45376998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7025332], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44470367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.72957706], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47723663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70460874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45984632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70969135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4172943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70085496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46885192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69948816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43039352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6907538], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4463119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70028317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48872682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71133375], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45138395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6923525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45160773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69976825], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (74,)
CUMULATIVE NUM SOLVED: 597.0
CUMULATIVE NUM SOLVED: 597.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0]
Tasks solved: 10 / 10
Average time for successes: 1.45453 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.454527311323909, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12486, 'query_cost': 0.0, 'learning_time': 2828.0822665270534})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__74.pkl


ONLINE LEARNING CYCLE 75

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 380 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8638 datapoints
Loss: 0.01496, iter: 0/100000
Loss: 0.01144, iter: 1000/100000
Loss: 0.00896, iter: 2000/100000
Loss: 0.01338, iter: 3000/100000
Loss: 0.00917, iter: 4000/100000
Loss: 0.00759, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5269.
Loaded best model with loss: 0.00333
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4747234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66363645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4707011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6928404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48427033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6806106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4748647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67982435], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47717616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6748791], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45601237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.65627474], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46422124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6917601], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4712219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6631328], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4892881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68476087], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4786315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67361295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4648711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6685278], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4732486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67833143], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4494224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6578695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6653848], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48177993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6732559], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48556948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67406636], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48692206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6499546], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.06255487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4775295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6949639], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47168857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.65863144], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45964715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6813916], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47527552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6725995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4825724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66265404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4527973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69897866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4706841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.68648094], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4829041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69825053], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4711518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.664568], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48449177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6580862], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46721888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6584213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4781578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6749352], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47715664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.66781974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47626606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.65626705], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47782835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6942186], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48588285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6751645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49708018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6739071], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46769103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6563507], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4754824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6673984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4558642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6590364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47279724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6632851], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47467077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.675175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47465646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6861386], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (75,)
CUMULATIVE NUM SOLVED: 606.0
CUMULATIVE NUM SOLVED: 606.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0]
Tasks solved: 9 / 10
Average time for successes: 1.45665 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.4566528556816694, 'avg_ref_cost': 1.6666666666666667, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12560, 'query_cost': 0.0, 'learning_time': 2869.014620828064})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__75.pkl


ONLINE LEARNING CYCLE 76

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 385 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8705 datapoints
Loss: 0.01173, iter: 0/100000
Loss: 0.00910, iter: 1000/100000
Loss: 0.01763, iter: 2000/100000
Loss: 0.00905, iter: 3000/100000
Loss: 0.01318, iter: 4000/100000
Loss: 0.01820, iter: 5000/100000
Loss: 0.00772, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6233.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48371637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7169365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.509398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7052998], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48528323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7105168], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48650032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70607454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47778293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69316727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4822253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6931111], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48970264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70303553], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48792246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6798691], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48841146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71550345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49212775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6883261], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48164475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6926925], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48252794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69425833], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48652694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7011564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46774602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6930468], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.492714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6926566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.500869], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6963165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48281583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6976239], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5265086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7239865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49337727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7149033], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49266997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.71363574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48622665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48257688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6889427], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47532907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71514577], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47141334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6868616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49644384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6941549], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48015866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69518745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49800113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72419155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48748428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7239613], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4818175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69065106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48120147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69493175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4901493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70610976], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47466806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7055135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5046385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6946784], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4788474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6902437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49029598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69320136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49966252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.753664], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4919235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70162505], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49294168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70932204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48304287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7137475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48572308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7039541], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (76,)
CUMULATIVE NUM SOLVED: 616.0
CUMULATIVE NUM SOLVED: 616.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0]
Tasks solved: 10 / 10
Average time for successes: 1.45064 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4506363275460898, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12670, 'query_cost': 0.0, 'learning_time': 2913.526553841046})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__76.pkl


ONLINE LEARNING CYCLE 77

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 390 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8757 datapoints
Loss: 0.01374, iter: 0/100000
Loss: 0.01122, iter: 1000/100000
Loss: 0.01948, iter: 2000/100000
Loss: 0.02404, iter: 3000/100000
Loss: 0.02086, iter: 4000/100000
Loss: 0.01456, iter: 5000/100000
Loss: 0.02179, iter: 6000/100000
Loss: 0.02382, iter: 7000/100000
Loss: 0.00609, iter: 8000/100000
Loss: 0.01584, iter: 9000/100000
Loss: 0.01100, iter: 10000/100000
Loss: 0.01090, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11605.
Loaded best model with loss: 0.00229
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49048105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7495047], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4870227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68631315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4861251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7384354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49729934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7039424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47402292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69973445], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49722004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7056735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49627513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7094558], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48640853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7573995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47787037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68841565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48906383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68048906], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49594188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.691536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4847074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68969744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4950003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7242549], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4743168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69976556], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4897729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6862208], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47745514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68505263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50172204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6996357], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4847099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7402374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50008047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69214135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49108323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69744545], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48880383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6912734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4714751], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6839036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4977759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6930305], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4962489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7680419], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5267921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7154578], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5094893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72987807], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48815048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70430535], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48062977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69523615], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49221233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6989359], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49025214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6928461], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48287016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70048314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49824676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69263744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51067746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70925987], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49725866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69492674], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49447682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7417091], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4987117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6876687], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49541652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70026076], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50068945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69354963], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4925722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6950109], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4807808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68920213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (77,)
CUMULATIVE NUM SOLVED: 626.0
CUMULATIVE NUM SOLVED: 626.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0]
Tasks solved: 10 / 10
Average time for successes: 1.58800 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.587999842769932, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12766, 'query_cost': 0.0, 'learning_time': 2965.75698737707})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__77.pkl


ONLINE LEARNING CYCLE 78

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 395 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8817 datapoints
Loss: 0.01534, iter: 0/100000
Loss: 0.01853, iter: 1000/100000
Loss: 0.02801, iter: 2000/100000
Loss: 0.02805, iter: 3000/100000
Loss: 0.00628, iter: 4000/100000
Loss: 0.01103, iter: 5000/100000
Loss: 0.01201, iter: 6000/100000
Loss: 0.00983, iter: 7000/100000
Loss: 0.01498, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8289.
Loaded best model with loss: 0.00274
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4593831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68961114], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4704089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.65566653], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4580314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.658226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46538568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6525189], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45939052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6554424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43768024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6702193], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45505863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6643091], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47768682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.66385496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4599724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66194314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45877898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6880799], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46753103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.660093], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47671357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68805844], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45616537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67120737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45874983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6561984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4577397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6874662], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46852806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6675843], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45615205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.648857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04087542], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43674177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74405557], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4502963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6556601], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45795625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6504475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.03729958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.07243866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.04956621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.03638298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.07854978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.04773588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.03890319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.03754053], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45766148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6417019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.08078915], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46735308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6493732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.04521855], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4553234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6559193], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.466322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.66211426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4659193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.64274555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.06023164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.41539127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68139595], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46299115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6479012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.04890073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44907078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6464627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.0577547], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45510268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.64557207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.04796054], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45557112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.685248], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45963138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66954035], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45856437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6525546], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46070874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70084894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45314845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6526497], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42231905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.712875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4538056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69029015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4076626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6548087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09638269], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04619462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03796047], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03728293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08235728], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08177789], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04002408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03780344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04465291], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05281599], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0837549], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04709707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04747662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03863023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07488946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03585068], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04184684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04145603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05506558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06757594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08415344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03751795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07960504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04463113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06313086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04564126], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03213315], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (78,)
CUMULATIVE NUM SOLVED: 631.0
CUMULATIVE NUM SOLVED: 631.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0]
Tasks solved: 5 / 10
Average time for successes: 1.45313 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 5, 'num_total': 10, 'avg_suc_time': 1.4531340416520835, 'avg_ref_cost': 3.0, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12868, 'query_cost': 0.0, 'learning_time': 3012.718842331087})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__78.pkl


ONLINE LEARNING CYCLE 79

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 400 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8848 datapoints
Loss: 0.01107, iter: 0/100000
Loss: 0.01511, iter: 1000/100000
Loss: 0.00714, iter: 2000/100000
Loss: 0.00588, iter: 3000/100000
Loss: 0.00547, iter: 4000/100000
Loss: 0.01837, iter: 5000/100000
Loss: 0.01326, iter: 6000/100000
Loss: 0.01526, iter: 7000/100000
Loss: 0.01812, iter: 8000/100000
Loss: 0.01421, iter: 9000/100000
Loss: 0.00447, iter: 10000/100000
Loss: 0.01563, iter: 11000/100000
Loss: 0.01576, iter: 12000/100000
Loss: 0.00799, iter: 13000/100000
Loss: 0.01856, iter: 14000/100000
Loss: 0.01109, iter: 15000/100000
Loss: 0.01189, iter: 16000/100000
Loss did not improve after 5000 itrs, terminating at itr 16398.
Loaded best model with loss: 0.00160
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4603178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6802823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49219602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66749614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48466954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66562176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5030674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.66692513], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45993224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6553688], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49060413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6654943], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46249843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6997241], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48708737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.679316], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46646884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66784036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50324965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69873714], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48274618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6643568], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46416274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.66836345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49251297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6618592], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.480196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66132253], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48741606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69404083], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48556408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6644306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49671388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6781226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4703864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6981869], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5010583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66353166], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45807692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.65645933], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4812522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6798332], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4753784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67863744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4635866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6576653], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48304358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.696029], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48719636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66823465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48194918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6562969], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47802788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67366403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48419198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6800177], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46112338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66499436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.489465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69156194], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48467076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68580496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46595198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.66859967], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4917422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66286886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4895322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6606646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47218072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6775155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47729263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.67958426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4935124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68637055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48388296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6749553], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4859758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6637706], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44378823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6682405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (79,)
CUMULATIVE NUM SOLVED: 641.0
CUMULATIVE NUM SOLVED: 641.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0]
Tasks solved: 10 / 10
Average time for successes: 1.45892 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4589150415908079, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12933, 'query_cost': 0.0, 'learning_time': 3073.272317145078})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__79.pkl


ONLINE LEARNING CYCLE 80

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 405 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8881 datapoints
Loss: 0.00541, iter: 0/100000
Loss: 0.01867, iter: 1000/100000
Loss: 0.01707, iter: 2000/100000
Loss: 0.02690, iter: 3000/100000
Loss: 0.01309, iter: 4000/100000
Loss: 0.00816, iter: 5000/100000
Loss: 0.00492, iter: 6000/100000
Loss: 0.01202, iter: 7000/100000
Loss: 0.02029, iter: 8000/100000
Loss: 0.01277, iter: 9000/100000
Loss: 0.01890, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10279.
Loaded best model with loss: 0.00248
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4532976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6863185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47778884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67451984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47208065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7303043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.484473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67618454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47140634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6967896], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47873113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7073872], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47903487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70268774], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47298503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6899627], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48565817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7009115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46716297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6722779], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4858427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78618723], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43217918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6732497], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45259535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68962777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49126914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66946626], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48699668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7006099], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4714437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6755208], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47004646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68824023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4831611], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69867885], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47944915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67419606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47717816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69002014], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47594655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68746], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4825573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6839825], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47620842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6892057], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48323956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69172114], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47592068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67794925], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48742226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6845434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48452127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7124968], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47854206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6830667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4790923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67529327], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4859958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6979205], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47632974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6688003], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47979137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67757404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46441114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66690207], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47131178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71889764], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45329818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67575765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47055715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6668058], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4779845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67777216], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4881087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6886953], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4669768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69518125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47619724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6778197], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (80,)
CUMULATIVE NUM SOLVED: 651.0
CUMULATIVE NUM SOLVED: 651.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0]
Tasks solved: 10 / 10
Average time for successes: 1.46520 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4651963267446262, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12999, 'query_cost': 0.0, 'learning_time': 3123.735987904074})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__80.pkl


ONLINE LEARNING CYCLE 81

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 410 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8925 datapoints
Loss: 0.00870, iter: 0/100000
Loss: 0.01368, iter: 1000/100000
Loss: 0.02051, iter: 2000/100000
Loss: 0.01267, iter: 3000/100000
Loss: 0.00711, iter: 4000/100000
Loss: 0.00882, iter: 5000/100000
Loss: 0.01552, iter: 6000/100000
Loss: 0.00790, iter: 7000/100000
Loss: 0.01091, iter: 8000/100000
Loss: 0.01475, iter: 9000/100000
Loss: 0.01088, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10505.
Loaded best model with loss: 0.00154
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46318713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.715951], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4587517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6886872], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4505202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67952687], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45039076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68625313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4376206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69974273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4518286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6946627], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45438412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68807614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45081002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.699513], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45927885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6893575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45033458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6818506], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45497602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7033455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44781524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68805057], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46985853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69509965], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48470566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71452665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43675697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71908236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4731267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7077105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43841472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6936129], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4355505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6891965], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4638715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6862564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43902272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70224255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45861307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6863737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46267286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6929147], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45847756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6823566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.43886358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70031196], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4989002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6956189], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45471337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6868538], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46185616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69644433], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.43142897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70103836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4623636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6972794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45264855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6984812], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.432131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7158428], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4463837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.68113154], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45217752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6978036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46034586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68649375], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46296412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7082654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4536563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7211518], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4464757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74147993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47225034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6922621], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45646614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68998176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.452841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69708675], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (81,)
CUMULATIVE NUM SOLVED: 661.0
CUMULATIVE NUM SOLVED: 661.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0]
Tasks solved: 10 / 10
Average time for successes: 1.45221 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4522128958255052, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13079, 'query_cost': 0.0, 'learning_time': 3174.8342906310863})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__81.pkl


ONLINE LEARNING CYCLE 82

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 415 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8985 datapoints
Loss: 0.01493, iter: 0/100000
Loss: 0.00420, iter: 1000/100000
Loss: 0.01601, iter: 2000/100000
Loss: 0.00432, iter: 3000/100000
Loss: 0.00708, iter: 4000/100000
Loss: 0.00507, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5207.
Loaded best model with loss: 0.00296
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43497232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6791745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42299584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.697501], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45862392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70495546], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43414703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6696988], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42403188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70798737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4207997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.680688], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4285946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6879752], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4321732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.66721666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42223418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7106961], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4369039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67354906], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44251555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6579639], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.42602992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6688737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44191834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6694966], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4440691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6717647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43879268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.66321504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4391166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7097025], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43184245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6721598], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42467928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69844455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.42122826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66798204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4353266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6750814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44068202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6722068], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43860197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6913423], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.41638824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.66949594], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44086227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6916121], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43166557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7252102], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44047335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66113245], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43729106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6666122], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4335144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70823807], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4375716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.673727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4330929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6699009], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.42780024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.664075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.42981207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6667076], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45011452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7030538], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44298947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67022926], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47503632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67624617], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4597261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6888407], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4143127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6754335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43029782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66653156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.41093978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6758254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4367564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67770004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (82,)
CUMULATIVE NUM SOLVED: 671.0
CUMULATIVE NUM SOLVED: 671.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0]
Tasks solved: 10 / 10
Average time for successes: 1.45532 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.455320857683546, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13181, 'query_cost': 0.0, 'learning_time': 3217.2306892650668})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__82.pkl


ONLINE LEARNING CYCLE 83

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 420 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9013 datapoints
Loss: 0.01981, iter: 0/100000
Loss: 0.01475, iter: 1000/100000
Loss: 0.00864, iter: 2000/100000
Loss: 0.01926, iter: 3000/100000
Loss: 0.01062, iter: 4000/100000
Loss: 0.00958, iter: 5000/100000
Loss: 0.00603, iter: 6000/100000
Loss: 0.01498, iter: 7000/100000
Loss: 0.01154, iter: 8000/100000
Loss: 0.00830, iter: 9000/100000
Loss: 0.01429, iter: 10000/100000
Loss: 0.01933, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11186.
Loaded best model with loss: 0.00286
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45141932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6761126], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4844132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6514481], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47204256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6593579], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47208348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.65989864], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44093284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6544476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47462484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6475083], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.05145043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46016675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66021794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47905973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6608905], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46668717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6899788], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48218948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67745054], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48346463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.664467], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4863024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6508631], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46963152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.65554154], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44621265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6544083], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4465491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65583545], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47629705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6615915], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4390337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6526937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4776236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.65418315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4771676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67544967], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47119832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6622204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45518792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6951423], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47927803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6642627], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4762272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6584058], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47646594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6590036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4683211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70511436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47931015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6592051], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48602903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6628105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4865421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67806906], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47640172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72733516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45995474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65533787], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45511582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67345953], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45085272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6520079], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48324177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66466093], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4445602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6439265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.05252523], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4877924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6500129], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4654679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65883344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48222017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66417474], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47362754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6559571], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47579095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.65406305], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4739829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6582879], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (83,)
CUMULATIVE NUM SOLVED: 679.0
CUMULATIVE NUM SOLVED: 679.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0]
Tasks solved: 8 / 10
Average time for successes: 1.45487 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 8, 'num_total': 10, 'avg_suc_time': 1.4548683556604374, 'avg_ref_cost': 1.875, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13243, 'query_cost': 0.0, 'learning_time': 3269.7867359860684})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__83.pkl


ONLINE LEARNING CYCLE 84

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 425 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9110 datapoints
Loss: 0.00919, iter: 0/100000
Loss: 0.00474, iter: 1000/100000
Loss: 0.01829, iter: 2000/100000
Loss: 0.00907, iter: 3000/100000
Loss: 0.00917, iter: 4000/100000
Loss: 0.01850, iter: 5000/100000
Loss: 0.01221, iter: 6000/100000
Loss: 0.01593, iter: 7000/100000
Loss: 0.01517, iter: 8000/100000
Loss: 0.01851, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9351.
Loaded best model with loss: 0.00229
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4586898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6624085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46563354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67233473], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47197053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6653127], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45809576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6983933], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48552778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7216421], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47381735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6835396], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47780326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6714886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4739715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6610677], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47736236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68287504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47369534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67595154], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4718748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6601508], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48067173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.66358614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47034213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6685156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46257615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.683273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46576333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65819603], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46752098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6736385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46403697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6701082], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47919944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.670816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47223148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.661402], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4666714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68990076], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46841633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6727045], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47228637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68327147], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5097613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68546605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4729932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6635572], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47402066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6595487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4927023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67646533], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47587207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6799144], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44047755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.68708944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48055995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6630082], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49156168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6813303], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4614708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66444385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46486273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6732842], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4713421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66612434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48776287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66518253], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48977116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6790834], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4722756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.66707164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4620917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6745085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45640442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.65796083], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47352338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.65919584], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44537365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6849527], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (84,)
CUMULATIVE NUM SOLVED: 689.0
CUMULATIVE NUM SOLVED: 689.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0]
Tasks solved: 10 / 10
Average time for successes: 1.45408 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.454084634341416, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13397, 'query_cost': 0.0, 'learning_time': 3319.4642235900683})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__84.pkl


ONLINE LEARNING CYCLE 85

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 430 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9183 datapoints
Loss: 0.01411, iter: 0/100000
Loss: 0.00771, iter: 1000/100000
Loss: 0.01737, iter: 2000/100000
Loss: 0.00530, iter: 3000/100000
Loss: 0.00585, iter: 4000/100000
Loss: 0.00603, iter: 5000/100000
Loss: 0.00883, iter: 6000/100000
Loss: 0.01786, iter: 7000/100000
Loss: 0.01151, iter: 8000/100000
Loss: 0.01740, iter: 9000/100000
Loss: 0.02180, iter: 10000/100000
Loss: 0.00872, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11430.
Loaded best model with loss: 0.00221
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46854135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6740887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46605536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6780978], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45105508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7292773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4547198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7069747], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46450853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6772324], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45258257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67553204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45020747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6762229], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43643215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68543357], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43269724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6893316], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4260925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6666511], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43544686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7119741], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.42995968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6736695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46291694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7019844], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4659184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6717378], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45736298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7201887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4774471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67186946], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4595989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67698205], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47397533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71886533], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45422247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70776063], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46329325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67791855], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45429394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74726105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.455872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6990985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49515206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6835552], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46416193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67193466], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46661028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6812415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46932372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68083566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45838615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6677356], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46186888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67623496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46237963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70090693], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46000284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6725749], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45540893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7069184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45948076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6839347], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47892648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71224654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44442746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6877379], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46403542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6713967], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4533612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7108186], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46749324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7101522], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4541869], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6722829], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4583588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6735739], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45925945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6809772], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (85,)
CUMULATIVE NUM SOLVED: 699.0
CUMULATIVE NUM SOLVED: 699.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0]
Tasks solved: 10 / 10
Average time for successes: 1.45547 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4554725817026337, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13516, 'query_cost': 0.0, 'learning_time': 3373.0686418270925})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__85.pkl


ONLINE LEARNING CYCLE 86

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 435 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9232 datapoints
Loss: 0.01141, iter: 0/100000
Loss: 0.01119, iter: 1000/100000
Loss: 0.01425, iter: 2000/100000
Loss: 0.00998, iter: 3000/100000
Loss: 0.01905, iter: 4000/100000
Loss: 0.01206, iter: 5000/100000
Loss: 0.01464, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6351.
Loaded best model with loss: 0.00267
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47706577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66577786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47062722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6874025], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49632406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67171156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49698755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6816875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46329093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6693869], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45498553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6731982], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47743207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67513365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47965652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7039812], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48082107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6855974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4584062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6843794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47935805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6745664], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47368488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6718411], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4722378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67502385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46886787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6773695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4503292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71773267], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47293696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68309706], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4713431], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67895585], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48777115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6758514], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4733883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6935167], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46802175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68474615], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4820856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.668074], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.477981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6912658], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47156954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6867894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46898657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6743118], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4659695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68186593], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46957764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66988504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48483783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68933225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4414001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.66522753], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47495767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6709991], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47273785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69375604], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4565306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7029608], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46967328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6622444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45059004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6872056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46915713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66767335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4626066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6686915], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44683152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6681341], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46346578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6654598], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47749853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66826665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47022274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6700943], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4824403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66132724], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (86,)
CUMULATIVE NUM SOLVED: 709.0
CUMULATIVE NUM SOLVED: 709.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0]
Tasks solved: 10 / 10
Average time for successes: 1.45141 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4514063401933526, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13603, 'query_cost': 0.0, 'learning_time': 3418.732345613069})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__86.pkl


ONLINE LEARNING CYCLE 87

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 440 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9277 datapoints
Loss: 0.01132, iter: 0/100000
Loss: 0.01115, iter: 1000/100000
Loss: 0.01432, iter: 2000/100000
Loss: 0.01029, iter: 3000/100000
Loss: 0.00734, iter: 4000/100000
Loss: 0.01400, iter: 5000/100000
Loss: 0.01259, iter: 6000/100000
Loss: 0.00582, iter: 7000/100000
Loss: 0.01338, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8480.
Loaded best model with loss: 0.00274
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42483452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66987383], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44301665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6880489], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43138048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6675201], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4386975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.707178], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4182877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68096554], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4387213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67958045], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.42359418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6703122], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43411398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67022365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44885355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7088187], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43309277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6799673], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43258697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67144436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44649932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.681774], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43975845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68101597], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.42666098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6757763], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43178892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70391357], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43609044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66861373], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4409919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6712974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42351952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6747967], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43144238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.676714], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.40529272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6786401], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44557023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70264345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44994342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.71415865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44842976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6740335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44034898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69379216], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45618224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70892775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44626242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7004835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43966347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68133926], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4451164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.68205565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4433059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67339975], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44455194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68372333], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44872496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6971874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4457369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67820835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43105832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6726707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4242273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.676632], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4367967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6901585], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43931365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6847834], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41118985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7044044], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44103125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69435513], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4261746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6882272], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46481478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6780253], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (87,)
CUMULATIVE NUM SOLVED: 719.0
CUMULATIVE NUM SOLVED: 719.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0]
Tasks solved: 10 / 10
Average time for successes: 1.45216 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4521605702931992, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13680, 'query_cost': 0.0, 'learning_time': 3467.429102138063})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__87.pkl


ONLINE LEARNING CYCLE 88

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 445 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9338 datapoints
Loss: 0.01319, iter: 0/100000
Loss: 0.01641, iter: 1000/100000
Loss: 0.01353, iter: 2000/100000
Loss: 0.01382, iter: 3000/100000
Loss: 0.00828, iter: 4000/100000
Loss: 0.00694, iter: 5000/100000
Loss: 0.01498, iter: 6000/100000
Loss: 0.01132, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7677.
Loaded best model with loss: 0.00287
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44586807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67492133], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4552838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69849646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4588842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6742306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46777353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7112148], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45693102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68231547], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44001025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69181], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4620777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.685357], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4741203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68434656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44437793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7231797], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4756171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6827488], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45888627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67549026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4591125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6812015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46038616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67789155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44936633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6796605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.525034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6970241], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45324433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68672013], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45289856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6755429], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4550183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68982935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46302846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6748376], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4639714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68823934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4641377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67895395], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4476017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6778798], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4625043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69352263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4596101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6929772], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46840456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6841795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44957724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67881346], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43838757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67937756], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46171445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6762395], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46857485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6834161], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45934743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6791392], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45558307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67874837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44575536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6910747], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45398018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6775813], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.460562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6876049], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45847517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7008657], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4555803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.67382765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4644552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69341165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4179663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68802446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46690935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7134617], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46986413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68461275], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (88,)
CUMULATIVE NUM SOLVED: 729.0
CUMULATIVE NUM SOLVED: 729.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0]
Tasks solved: 10 / 10
Average time for successes: 1.45099 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4509871682646918, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13777, 'query_cost': 0.0, 'learning_time': 3515.008452852053})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__88.pkl


ONLINE LEARNING CYCLE 89

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 450 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9375 datapoints
Loss: 0.00615, iter: 0/100000
Loss: 0.01015, iter: 1000/100000
Loss: 0.00807, iter: 2000/100000
Loss: 0.01790, iter: 3000/100000
Loss: 0.01087, iter: 4000/100000
Loss: 0.01445, iter: 5000/100000
Loss: 0.01733, iter: 6000/100000
Loss: 0.00797, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7190.
Loaded best model with loss: 0.00300
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45621356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6967404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46313387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6902054], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49122733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6996699], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45885822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6753923], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4356523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6741621], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47458917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7231025], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45447132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69056153], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46473262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72146004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46404648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69178164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45990625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.684277], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47966397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67728055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47290763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6841569], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45844123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6828639], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46492133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6804081], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47684112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.688123], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46265844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67937475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4788803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6787944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45218816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67596316], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4734382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7074226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46877432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6874726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5051444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7011022], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46565288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6809127], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.481629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6809031], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45982823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6979428], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47751158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7104932], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47786206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69156504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46318364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68652046], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4698513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6826646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45597917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67218906], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4687023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6802563], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47143137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6838246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47952822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6708954], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47342658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6777062], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46541414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6809145], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4754825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7144823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49254912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71217036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48024878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7211763], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4626201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6847501], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46801165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6947554], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43773258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6789171], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (89,)
CUMULATIVE NUM SOLVED: 739.0
CUMULATIVE NUM SOLVED: 739.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0]
Tasks solved: 10 / 10
Average time for successes: 1.60348 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.6034756507026031, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13847, 'query_cost': 0.0, 'learning_time': 3562.3605934070365})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__89.pkl


ONLINE LEARNING CYCLE 90

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 455 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9412 datapoints
Loss: 0.01007, iter: 0/100000
Loss: 0.01328, iter: 1000/100000
Loss: 0.01733, iter: 2000/100000
Loss: 0.00932, iter: 3000/100000
Loss: 0.01076, iter: 4000/100000
Loss: 0.01264, iter: 5000/100000
Loss: 0.01740, iter: 6000/100000
Loss: 0.01729, iter: 7000/100000
Loss: 0.01216, iter: 8000/100000
Loss: 0.00509, iter: 9000/100000
Loss: 0.01994, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10476.
Loaded best model with loss: 0.00018
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5100697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6804637], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48511097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6994787], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47156972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6642685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49400753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68775386], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5003289], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69459665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48630098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67504007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4778666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68215334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4908991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6839734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4947529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6979984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49922982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6887364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50145555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6708555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5022155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68875015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49436554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6773852], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48844618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7307927], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4863392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.691667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5247308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68458694], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50792706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6943206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49632108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6787285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46894836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68368125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49944368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6769315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49582034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6690056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49784848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7040635], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4869023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68970174], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48708624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6749991], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4969583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7111315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49751016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69048756], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5072419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6746765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4972336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.68324196], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49344343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6977973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5112245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70758545], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4953606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67711455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5010078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6691035], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49414858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6866626], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46101314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.664351], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48617387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69412196], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4818938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69207937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4610874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6614314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49204978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7288171], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45142594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68048066], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5003876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.679535], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (90,)
CUMULATIVE NUM SOLVED: 749.0
CUMULATIVE NUM SOLVED: 749.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0]
Tasks solved: 10 / 10
Average time for successes: 1.45307 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4530670694512082, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13920, 'query_cost': 0.0, 'learning_time': 3615.1655843000335})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__90.pkl


ONLINE LEARNING CYCLE 91

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 460 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9458 datapoints
Loss: 0.02064, iter: 0/100000
Loss: 0.00834, iter: 1000/100000
Loss: 0.00698, iter: 2000/100000
Loss: 0.03742, iter: 3000/100000
Loss: 0.01301, iter: 4000/100000
Loss: 0.02775, iter: 5000/100000
Loss: 0.01109, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6287.
Loaded best model with loss: 0.00282
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4623035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6541256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.65491855], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46414936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6613056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4736461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.67225105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46548107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6854177], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4645563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66728616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46046352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6657203], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45984462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.65377915], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4743854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67397726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48202026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67298585], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47336826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.65670365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46615648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.65629315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4685206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66193616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.465908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6572832], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44550732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6627377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47417265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66712403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4604188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66583073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47242686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67575747], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4674302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6535337], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46258506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.687112], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4792557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6855223], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47247127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70794356], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45102382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6892496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44621322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67991054], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46669936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.65668267], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46411172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6569576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4976879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6818253], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4632128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6605836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4796708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.727965], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4754568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6553293], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45193484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6553635], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46834335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.66325265], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4584633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6570854], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46987492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6880889], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4898855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68378216], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47382343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.655224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48967206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.704443], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46313658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72373074], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49297202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7687707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4725649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6665397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (91,)
CUMULATIVE NUM SOLVED: 759.0
CUMULATIVE NUM SOLVED: 759.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 759.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 759.0]
Tasks solved: 10 / 10
Average time for successes: 1.45118 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4511808091105194, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14005, 'query_cost': 0.0, 'learning_time': 3661.275451061054})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__91.pkl


ONLINE LEARNING CYCLE 92

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 465 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9514 datapoints
Loss: 0.02317, iter: 0/100000
Loss: 0.00817, iter: 1000/100000
Loss: 0.01842, iter: 2000/100000
Loss: 0.01142, iter: 3000/100000
Loss: 0.01441, iter: 4000/100000
Loss: 0.00665, iter: 5000/100000
Loss: 0.01860, iter: 6000/100000
Loss: 0.00504, iter: 7000/100000
Loss: 0.00690, iter: 8000/100000
Loss: 0.02724, iter: 9000/100000
Loss: 0.01681, iter: 10000/100000
Loss: 0.01290, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11354.
Loaded best model with loss: 0.00284
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46408033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6655295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42691576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7180117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.42982593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69023764], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.41996008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6636279], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4301695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7201732], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.429319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6741693], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44169328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68001205], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44644493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6803357], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4382998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66763335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43602598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66834605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44017014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6825868], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4348653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6745388], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43572316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6793716], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46237975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67073023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4426831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6667624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43304217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6675905], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43613657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6839393], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43069306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68290824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43687552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.67251307], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44908676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66520053], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43089956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6808499], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.42717424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6877383], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.428779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.685527], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.43344408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.68421066], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42862645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66694874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42803445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7419849], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4525062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68993354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4396114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.66749614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43644986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67644733], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43215021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.699745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50248784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68537855], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.43598267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.68277025], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43656337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7148594], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43207705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6708308], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45619237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6662668], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.42548975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6657633], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42997116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6664434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43088692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66613734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43616617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68820935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.42281333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6677312], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (92,)
CUMULATIVE NUM SOLVED: 769.0
CUMULATIVE NUM SOLVED: 769.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94, 0.94][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 759.0, 769.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94, 0.94][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 759.0, 769.0]
Tasks solved: 10 / 10
Average time for successes: 1.45200 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4520004464953673, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14106, 'query_cost': 0.0, 'learning_time': 3715.7714501760493})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__92.pkl


ONLINE LEARNING CYCLE 93

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 470 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9558 datapoints
Loss: 0.01093, iter: 0/100000
Loss: 0.01498, iter: 1000/100000
Loss: 0.00797, iter: 2000/100000
Loss: 0.01432, iter: 3000/100000
Loss: 0.00707, iter: 4000/100000
Loss: 0.01320, iter: 5000/100000
Loss: 0.00538, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6687.
Loaded best model with loss: 0.00269
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45504308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65072185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4805533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6547993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43872282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6502867], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43981785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6876236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45585263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.65478057], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4649991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67565346], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45467177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.65315485], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43940228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7075038], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45053753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7343957], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45058978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.65297276], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46778652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6644882], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43306342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.66934067], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45021525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6569646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44431943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.65089715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4634055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65399617], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44667032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.65430385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44147974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6502767], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4420073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68058634], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4459182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6527181], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44039512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6586805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4475548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.65579796], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43973988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6561456], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45400688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6419412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.08936823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45413476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.65546876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44643214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67794967], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45330068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6444608], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.07087176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45536125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.700907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45722142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.66621315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4544696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.65797555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45291218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.66793513], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44553402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67347205], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45456716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6757896], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45948943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6626343], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49393848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6598948], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50344145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6561963], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43834057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6502109], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4447328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7017407], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4454815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.63791007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.09388006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44679356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6536551], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45168966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6448024], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.06039748], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (93,)
CUMULATIVE NUM SOLVED: 776.0
CUMULATIVE NUM SOLVED: 776.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94, 0.94, 0.94][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 759.0, 769.0, 776.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94, 0.94, 0.94][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 759.0, 769.0, 776.0]
Tasks solved: 7 / 10
Average time for successes: 1.45016 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 7, 'num_total': 10, 'avg_suc_time': 1.4501584462746646, 'avg_ref_cost': 2.142857142857143, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14182, 'query_cost': 0.0, 'learning_time': 3762.8217653220636})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__93.pkl


ONLINE LEARNING CYCLE 94

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 475 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9602 datapoints
Loss: 0.01153, iter: 0/100000
Loss: 0.01000, iter: 1000/100000
Loss: 0.01482, iter: 2000/100000
Loss: 0.01858, iter: 3000/100000
Loss: 0.01070, iter: 4000/100000
Loss: 0.00972, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5151.
Loaded best model with loss: 0.00037
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51175207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72371835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48776245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69244397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49225324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7159469], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49079323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70454305], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46795762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7047257], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48959124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69425285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.535327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7147533], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47195837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7596209], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47673824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7160103], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48836148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72186834], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48129094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6928368], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49778888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.695492], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4831008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70674926], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48697007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6932349], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51785547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7154968], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4879035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.71170425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48505566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6941152], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48587132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6923585], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48681664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70790446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47913915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.77306324], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49040002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6992515], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49248967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7098722], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4708236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7078257], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49571642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70733374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48573333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69503266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47156766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7045367], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47657502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6947849], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4876988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6968233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48219922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7001931], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50200355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7130566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4807259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.71391416], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47889432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70633054], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4912408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6960975], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46516544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6869414], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48569956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.713992], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49079737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72209525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4859177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6980932], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49191916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6937925], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48669598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6967288], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54444623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7104667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (94,)
CUMULATIVE NUM SOLVED: 786.0
CUMULATIVE NUM SOLVED: 786.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94, 0.94, 0.94, 0.9279999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 759.0, 769.0, 776.0, 786.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94, 0.94, 0.94, 0.9279999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 759.0, 769.0, 776.0, 786.0]
Tasks solved: 10 / 10
Average time for successes: 1.61457 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.6145674538507593, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14265, 'query_cost': 0.0, 'learning_time': 3807.3457349530654})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__94.pkl


ONLINE LEARNING CYCLE 95

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 480 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9635 datapoints
Loss: 0.01513, iter: 0/100000
Loss: 0.01989, iter: 1000/100000
Loss: 0.02186, iter: 2000/100000
Loss: 0.01390, iter: 3000/100000
Loss: 0.01256, iter: 4000/100000
Loss: 0.00750, iter: 5000/100000
Loss: 0.01419, iter: 6000/100000
Loss: 0.00770, iter: 7000/100000
Loss: 0.01048, iter: 8000/100000
Loss: 0.01149, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9329.
Loaded best model with loss: 0.00282
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49745688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7105442], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48234507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70458144], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49517724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70833814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49501058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70318836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4890247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68411386], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49517816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6973559], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4874688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.73509616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49156937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70002764], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45327294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69371647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49472612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71451396], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49620396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7155142], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.488669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70765334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45270118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69096494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50533897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70195794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4649151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6900486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47645545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68591285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4864096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69157153], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48346236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.730689], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4966683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6925104], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48960042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7188534], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49044693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6949621], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5008831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7023667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47916868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71638036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48255762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7183166], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48849016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7043775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48216978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69811535], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4587181], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6789148], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47726065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72198486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48814267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69360083], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48452306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69782174], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4892314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6963804], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48564047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.68850136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48743525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7011755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4712003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7009045], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4907781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6895618], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4971263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7047641], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47818574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70691496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47967157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7168785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49193007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69616723], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49730662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6983402], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (95,)
CUMULATIVE NUM SOLVED: 796.0
CUMULATIVE NUM SOLVED: 796.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94, 0.94, 0.94, 0.9279999999999999, 0.9279999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 759.0, 769.0, 776.0, 786.0, 796.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94, 0.94, 0.94, 0.9279999999999999, 0.9279999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 759.0, 769.0, 776.0, 786.0, 796.0]
Tasks solved: 10 / 10
Average time for successes: 1.61233 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.6123295481229434, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14332, 'query_cost': 0.0, 'learning_time': 3859.097787297069})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__95.pkl


ONLINE LEARNING CYCLE 96

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 485 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9703 datapoints
Loss: 0.01129, iter: 0/100000
Loss: 0.01290, iter: 1000/100000
Loss: 0.00797, iter: 2000/100000
Loss: 0.01836, iter: 3000/100000
Loss: 0.01592, iter: 4000/100000
Loss: 0.01835, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5783.
Loaded best model with loss: 0.00327
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46538055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71329194], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4566706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68692476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4601336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70650876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4651461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69621795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46204293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68234575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45117894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6949139], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49450475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7213747], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46402627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6995612], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47884744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69353306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4445143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68666387], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4659071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69287753], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4676279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.697715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45249146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6929862], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45871136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.680827], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4613041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68036145], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46417668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6879394], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46009898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7153596], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4696995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.701338], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45655403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69029665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44745559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6812875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46653113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6983693], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4658155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68159837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46048695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69019175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47077936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69021344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45232227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.672433], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45328808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7228196], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46918467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68048286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48915866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6844477], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45955464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68469834], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45267412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.686041], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46170118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6971318], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44926926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67876345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4740199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6831053], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46349138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68170905], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45951107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6765048], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47808805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.708351], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4576351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6876258], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46318614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69824827], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47938037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6879583], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46518168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7325697], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (96,)
CUMULATIVE NUM SOLVED: 806.0
CUMULATIVE NUM SOLVED: 806.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94, 0.94, 0.94, 0.9279999999999999, 0.9279999999999999, 0.9279999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 759.0, 769.0, 776.0, 786.0, 796.0, 806.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94, 0.94, 0.94, 0.9279999999999999, 0.9279999999999999, 0.9279999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 759.0, 769.0, 776.0, 786.0, 796.0, 806.0]
Tasks solved: 10 / 10
Average time for successes: 1.45126 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.451261320093181, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14444, 'query_cost': 0.0, 'learning_time': 3904.9342325350735})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__96.pkl


ONLINE LEARNING CYCLE 97

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 490 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9761 datapoints
Loss: 0.02292, iter: 0/100000
Loss: 0.01279, iter: 1000/100000
Loss: 0.00800, iter: 2000/100000
Loss: 0.02192, iter: 3000/100000
Loss: 0.00354, iter: 4000/100000
Loss: 0.01069, iter: 5000/100000
Loss: 0.01264, iter: 6000/100000
Loss: 0.02666, iter: 7000/100000
Loss: 0.02054, iter: 8000/100000
Loss: 0.02060, iter: 9000/100000
Loss: 0.01044, iter: 10000/100000
Loss: 0.01898, iter: 11000/100000
Loss: 0.01321, iter: 12000/100000
Loss: 0.01851, iter: 13000/100000
Loss: 0.01694, iter: 14000/100000
Loss did not improve after 5000 itrs, terminating at itr 14149.
Loaded best model with loss: 0.00272
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4392463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6588002], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43165675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6650813], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44249007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6851229], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4432053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6569653], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45963654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6725397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45649526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67655593], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44548145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6613233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44233668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6648717], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42621168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6644045], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43403366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.687664], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4430388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.66086066], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43782917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.65359944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43958235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.685452], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.41486722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.65587634], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43583867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6537037], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43988028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6717525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43250778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6603987], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.451696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6576067], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48999313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6873364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43953267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66265607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44395936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6708141], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.41801324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67516357], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45540476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6538704], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.453541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.66426736], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44827226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6679365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4328323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7169616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4400871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7011209], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4473112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6619558], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42962733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67156106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4327264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.66069174], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44123414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.65538436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45047167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.66456765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4487059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6603443], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.40729824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.65909475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46340057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6801646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44108912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.66748637], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45138815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69258124], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43562773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.64790314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.06534758], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4474809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6578565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46224537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6644521], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (97,)
CUMULATIVE NUM SOLVED: 815.0
CUMULATIVE NUM SOLVED: 815.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94, 0.94, 0.94, 0.9279999999999999, 0.9279999999999999, 0.9279999999999999, 0.932][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 759.0, 769.0, 776.0, 786.0, 796.0, 806.0, 815.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94, 0.94, 0.94, 0.9279999999999999, 0.9279999999999999, 0.9279999999999999, 0.932][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 759.0, 769.0, 776.0, 786.0, 796.0, 806.0, 815.0]
Tasks solved: 9 / 10
Average time for successes: 1.63615 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.6361478920896642, 'avg_ref_cost': 1.6666666666666667, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14539, 'query_cost': 0.0, 'learning_time': 3965.1547674200556})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__97.pkl


ONLINE LEARNING CYCLE 98

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 495 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9804 datapoints
Loss: 0.00527, iter: 0/100000
Loss: 0.01781, iter: 1000/100000
Loss: 0.02446, iter: 2000/100000
Loss: 0.02262, iter: 3000/100000
Loss: 0.01354, iter: 4000/100000
Loss: 0.01851, iter: 5000/100000
Loss: 0.01501, iter: 6000/100000
Loss: 0.01018, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7474.
Loaded best model with loss: 0.00268
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5241303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70962125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5029923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69506663], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5072679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.75060743], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48734325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71450704], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5232249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71059227], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52068985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71317697], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5176812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71212703], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49284187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71092385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52135575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7186335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.511161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6902373], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5098471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68872476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5281426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71570563], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48443672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7015024], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50398827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70170283], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51617265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7019575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5136721], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.694072], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49602658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7517829], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51469254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6860443], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52047294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7266373], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5094505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7075969], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4855206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69677734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52571625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.73054284], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5062699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68587124], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5184164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69596386], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4992351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7038667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5125151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6990827], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53780496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7010909], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5048849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6964973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69988316], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51574695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69608015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5136611], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7302799], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51554465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.71162754], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51182306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73691905], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52437633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6989253], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5167847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70191455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5078565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70971584], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5096143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.716664], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47783396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6997678], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5226929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.73940694], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5089132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69426453], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (98,)
CUMULATIVE NUM SOLVED: 825.0
CUMULATIVE NUM SOLVED: 825.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94, 0.94, 0.94, 0.9279999999999999, 0.9279999999999999, 0.9279999999999999, 0.932, 0.9520000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 759.0, 769.0, 776.0, 786.0, 796.0, 806.0, 815.0, 825.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94, 0.94, 0.94, 0.9279999999999999, 0.9279999999999999, 0.9279999999999999, 0.932, 0.9520000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 759.0, 769.0, 776.0, 786.0, 796.0, 806.0, 815.0, 825.0]
Tasks solved: 10 / 10
Average time for successes: 1.61526 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.6152593325648923, 'avg_ref_cost': 1.5, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14623, 'query_cost': 0.0, 'learning_time': 4012.6982608660765})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__98.pkl


ONLINE LEARNING CYCLE 99

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 500 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9842 datapoints
Loss: 0.00387, iter: 0/100000
Loss: 0.00754, iter: 1000/100000
Loss: 0.00679, iter: 2000/100000
Loss: 0.00663, iter: 3000/100000
Loss: 0.01223, iter: 4000/100000
Loss: 0.01385, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5228.
Loaded best model with loss: 0.00253
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4441948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6665837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.40440995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6553194], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4279413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6674255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.40535605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6557552], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.41494787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7355139], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.40189055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6582445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04407985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04465861], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04855871], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04427485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05338105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05866044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04953619], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06401242], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04776356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05662067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05977837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04943356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04479332], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.411463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6696582], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43573684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7022277], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42087817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68231183], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.41875562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6757469], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.41385147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6853031], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42159018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6845309], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4206826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7216273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.41852465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68880415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4061494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6681884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4188453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66799414], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.41941208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68575865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4188586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68261343], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.3977596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.687255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.06455819], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43775883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6872215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44097033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67446834], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.41379392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6748313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.40886864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6681127], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4094137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6714718], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.427559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6889283], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41616246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67028683], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.41992098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6679632], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4518801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67728955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43755406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69634235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44278342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66508], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.41040984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.66856724], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43768957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7266088], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4115147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66470635], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41548306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6665894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.42341802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68667245], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43473938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68633014], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.40980572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6651752], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.42326578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.68537205], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.42305064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67972136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell12:cell, cell13:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell13:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (99,)
CUMULATIVE NUM SOLVED: 833.0
CUMULATIVE NUM SOLVED: 833.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94, 0.94, 0.94, 0.9279999999999999, 0.9279999999999999, 0.9279999999999999, 0.932, 0.9520000000000001, 0.9520000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.9, 1.0, 0.8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 759.0, 769.0, 776.0, 786.0, 796.0, 806.0, 815.0, 825.0, 833.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94, 0.94, 0.94, 0.9279999999999999, 0.9279999999999999, 0.9279999999999999, 0.932, 0.9520000000000001, 0.9520000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, 1.0, 1.0, 0.1, 0.9, 1.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.1, 0.3, 0.0, 0.9, 1.0, 1.0, 0.6, 1.0, 1.0, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 0.9, 0.2, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.4, 1.0, 1.0, 0.9, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.9, 1.0, 0.8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 18.0, 28.0, 29.0, 38.0, 48.0, 54.0, 64.0, 74.0, 84.0, 94.0, 104.0, 114.0, 124.0, 134.0, 144.0, 154.0, 163.0, 173.0, 183.0, 193.0, 203.0, 212.0, 222.0, 232.0, 233.0, 236.0, 236.0, 245.0, 255.0, 265.0, 271.0, 281.0, 291.0, 293.0, 303.0, 313.0, 323.0, 333.0, 343.0, 353.0, 363.0, 373.0, 383.0, 384.0, 394.0, 404.0, 414.0, 424.0, 434.0, 444.0, 453.0, 463.0, 473.0, 482.0, 484.0, 494.0, 504.0, 514.0, 524.0, 534.0, 544.0, 554.0, 564.0, 573.0, 577.0, 587.0, 597.0, 606.0, 616.0, 626.0, 631.0, 641.0, 651.0, 661.0, 671.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 759.0, 769.0, 776.0, 786.0, 796.0, 806.0, 815.0, 825.0, 833.0]
Tasks solved: 8 / 10
Average time for successes: 1.45399 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 8, 'num_total': 10, 'avg_suc_time': 1.45398999675308, 'avg_ref_cost': 1.875, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14704, 'query_cost': 0.0, 'learning_time': 4058.5325667140714})
Wrote out test results to results/grid_row_door__rl_bridge_policy__1______RLBRIDGE_gridrowdoor-oracle__99.pkl
SMOOTH REWARDS[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94, 0.94, 0.94, 0.9279999999999999, 0.9279999999999999, 0.9279999999999999, 0.932, 0.9520000000000001, 0.9520000000000001]


Main script terminated in 14557.67871 seconds
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
WE GOT REWARDS:  0
WE GOT REWARDS:  1
WE GOT REWARDS:  3
WE GOT REWARDS:  6
WE GOT REWARDS:  6
WE GOT REWARDS:  8
WE GOT REWARDS:  10
WE GOT REWARDS:  13
WE GOT REWARDS:  18
WE GOT REWARDS:  22
WE GOT REWARDS:  26
WE GOT REWARDS:  30
WE GOT REWARDS:  35
WE GOT REWARDS:  40
WE GOT REWARDS:  45
WE GOT REWARDS:  50
WE GOT REWARDS:  55
WE GOT REWARDS:  60
WE GOT REWARDS:  65
WE GOT REWARDS:  70
WE GOT REWARDS:  75
WE GOT REWARDS:  80
WE GOT REWARDS:  85
WE GOT REWARDS:  90
WE GOT REWARDS:  95
WE GOT REWARDS:  100
WE GOT REWARDS:  104
WE GOT REWARDS:  109
WE GOT REWARDS:  114
WE GOT REWARDS:  119
WE GOT REWARDS:  124
WE GOT REWARDS:  129
WE GOT REWARDS:  134
WE GOT REWARDS:  139
WE GOT REWARDS:  144
WE GOT REWARDS:  149
WE GOT REWARDS:  154
WE GOT REWARDS:  159
WE GOT REWARDS:  164
WE GOT REWARDS:  169
WE GOT REWARDS:  174
WE GOT REWARDS:  179
WE GOT REWARDS:  184
WE GOT REWARDS:  189
WE GOT REWARDS:  194
WE GOT REWARDS:  199
WE GOT REWARDS:  204
WE GOT REWARDS:  209
WE GOT REWARDS:  214
WE GOT REWARDS:  219
WE GOT REWARDS:  224
WE GOT REWARDS:  229
WE GOT REWARDS:  234
WE GOT REWARDS:  239
WE GOT REWARDS:  244
WE GOT REWARDS:  249
WE GOT REWARDS:  254
WE GOT REWARDS:  259
WE GOT REWARDS:  264
WE GOT REWARDS:  269
WE GOT REWARDS:  274
WE GOT REWARDS:  279
WE GOT REWARDS:  284
WE GOT REWARDS:  289
WE GOT REWARDS:  294
WE GOT REWARDS:  299
WE GOT REWARDS:  304
WE GOT REWARDS:  309
WE GOT REWARDS:  314
WE GOT REWARDS:  319
WE GOT REWARDS:  324
WE GOT REWARDS:  329
WE GOT REWARDS:  334
WE GOT REWARDS:  339
WE GOT REWARDS:  344
WE GOT REWARDS:  349
WE GOT REWARDS:  354
WE GOT REWARDS:  359
WE GOT REWARDS:  364
WE GOT REWARDS:  369
WE GOT REWARDS:  374
WE GOT REWARDS:  379
WE GOT REWARDS:  384
WE GOT REWARDS:  389
WE GOT REWARDS:  394
WE GOT REWARDS:  399
WE GOT REWARDS:  404
WE GOT REWARDS:  409
WE GOT REWARDS:  414
WE GOT REWARDS:  419
WE GOT REWARDS:  424
WE GOT REWARDS:  429
WE GOT REWARDS:  434
WE GOT REWARDS:  439
WE GOT REWARDS:  444
WE GOT REWARDS:  449
WE GOT REWARDS:  454
WE GOT REWARDS:  459
WE GOT REWARDS:  464
WE GOT REWARDS:  469
SMOOTH REWARDS [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.032, 0.07200000000000001, 0.11199999999999999, 0.11599999999999999, 0.152, 0.192, 0.21599999999999997, 0.256, 0.296, 0.33599999999999997, 0.37599999999999995, 0.4159999999999999, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.6519999999999999, 0.6919999999999998, 0.7319999999999999, 0.7719999999999999, 0.8119999999999998, 0.8479999999999999, 0.8879999999999998, 0.9279999999999998, 0.9, 0.872, 0.8320000000000001, 0.8639999999999999, 0.868, 0.868, 0.8680000000000001, 0.8680000000000001, 0.868, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.8360000000000001, 0.836, 0.836, 0.836, 0.84, 0.84, 0.804, 0.804, 0.804, 0.8080000000000002, 0.8080000000000002, 0.8080000000000002, 0.8440000000000001, 0.8679999999999999, 0.9079999999999998, 0.9119999999999999, 0.9079999999999998, 0.8759999999999998, 0.8919999999999998, 0.8919999999999998, 0.8919999999999999, 0.9239999999999999, 0.9239999999999999, 0.9239999999999999, 0.924, 0.924, 0.92, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8919999999999999, 0.9279999999999998, 0.9279999999999998, 0.9079999999999998, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 0.904, 0.904, 0.904, 0.9079999999999999, 0.9400000000000002, 0.9400000000000002, 0.9400000000000002, 0.94, 0.94, 0.94, 0.9279999999999999, 0.9279999999999999, 0.9279999999999999, 0.932, 0.9520000000000001, 0.9520000000000001]
