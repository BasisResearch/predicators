pybullet build time: Nov 28 2023 23:52:03
Running command: python predicators/main.py --env grid_row_door --approach rl_bridge_policy --experiment_id RLBRIDGE_gridrowdoor-no_callplanner --debug --max_initial_demos 0 --sampler_learner oracle --strips_learner oracle --num_online_learning_cycles 100 --num_test_tasks 10 --num_train_tasks 1 --interactive_num_requests_per_cycle 5 --online_nsrt_learning_requests_per_cycle 5 --max_num_steps_interaction_request 100 --timeout 1000 --active_sampler_learning_num_samples 100 --same_levels True --explorer maple_q --bilevel_plan_without_sim True --mlp_regressor_max_itr 100000 --segmenter oracle --demonstrator oracle --sesame_max_skeletons_optimized 50 --use_obj_centric True --use_callplanner False --seed 6
Full config:
namespace(num_train_tasks=1, num_test_tasks=10, num_online_learning_cycles=100, online_learning_max_transitions=inf, max_initial_demos=0, allow_interaction_in_demo_tasks=True, max_num_steps_interaction_request=100, pretty_print_when_loading=False, test_env_seed_offset=10000, test_task_json_dir=None, segmenter='oracle', demonstrator='oracle', render_state_dpi=150, approach_wrapper=None, allow_exclude_goal_predicates=False, allow_state_allclose_comparison_despite_simulator_state=False, cover_multistep_action_limits=[-inf, inf], cover_multistep_degenerate_oracle_samplers=False, cover_multistep_max_tb_placements=100, cover_multistep_max_hr_placements=100, cover_multistep_thr_percent=0.4, cover_multistep_bhr_percent=0.4, cover_multistep_bimodal_goal=False, cover_multistep_goal_conditioned_sampling=False, bumpy_cover_num_bumps=2, bumpy_cover_spaces_per_bump=1, bumpy_cover_right_targets=False, bumpy_cover_bumpy_region_start=0.8, bumpy_cover_init_bumpy_prob=0.25, regional_bumpy_cover_include_impossible_nsrt=False, blocks_num_blocks_train=[3, 4], blocks_num_blocks_test=[5, 6], blocks_holding_goals=False, blocks_block_size=0.045, playroom_num_blocks_train=[3], playroom_num_blocks_test=[3], cluttered_table_num_cans_train=5, cluttered_table_num_cans_test=10, cluttered_table_can_radius=0.01, cluttered_table_collision_angle_thresh=0.7853981633974483, cluttered_table_place_goal_conditioned_sampling=True, repeated_nextto_num_dots=15, repeated_nextto_nextto_thresh=0.5, painting_initial_holding_prob=0.5, painting_lid_open_prob=0.3, painting_num_objs_train=[2, 3], painting_num_objs_test=[3, 4], painting_max_objs_in_goal=inf, painting_goal_receptacles='box_and_shelf', painting_raise_environment_failure=True, rnt_painting_num_objs_train=[8, 9, 10], rnt_painting_num_objs_test=[11, 12, 13], rnt_painting_max_objs_in_goal=2, tools_num_items_train=[2], tools_num_items_test=[2, 3], tools_num_contraptions_train=[2], tools_num_contraptions_test=[3], sandwich_ingredients_train={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, sandwich_ingredients_test={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, pybullet_draw_debug=False, pybullet_camera_width=335, pybullet_camera_height=180, pybullet_sim_steps_per_action=20, pybullet_max_ik_iters=100, pybullet_ik_tol=0.001, pybullet_robot='fetch', pybullet_birrt_num_attempts=10, pybullet_birrt_num_iters=100, pybullet_birrt_smooth_amt=50, pybullet_birrt_extend_num_interp=10, pybullet_control_mode='position', pybullet_max_vel_norm=0.05, pybullet_robot_ee_orns=defaultdict(<function GlobalSettings.<lambda> at 0x7f59fd0a35e0>, {'pybullet_blocks': {'fetch': (0.7071, 0.0, -0.7071, 0.0), 'panda': (0.7071, 0.7071, 0.0, 0.0)}}), ikfast_max_time=0.05, ikfast_max_candidates=100, ikfast_max_attempts=inf, ikfast_max_distance=inf, ikfast_norm=inf, pddl_blocks_procedural_train_min_num_blocks=3, pddl_blocks_procedural_train_max_num_blocks=4, pddl_blocks_procedural_train_min_num_blocks_goal=2, pddl_blocks_procedural_train_max_num_blocks_goal=3, pddl_blocks_procedural_test_min_num_blocks=5, pddl_blocks_procedural_test_max_num_blocks=6, pddl_blocks_procedural_test_min_num_blocks_goal=2, pddl_blocks_procedural_test_max_num_blocks_goal=5, pddl_blocks_procedural_new_pile_prob=0.5, pddl_blocks_fixed_train_indices=[1, 2, 3, 4, 5], pddl_blocks_fixed_test_indices=[6, 7, 8, 9, 10], pddl_delivery_procedural_train_min_num_locs=5, pddl_delivery_procedural_train_max_num_locs=10, pddl_delivery_procedural_train_min_want_locs=2, pddl_delivery_procedural_train_max_want_locs=4, pddl_delivery_procedural_train_min_extra_newspapers=0, pddl_delivery_procedural_train_max_extra_newspapers=1, pddl_delivery_procedural_test_min_num_locs=31, pddl_delivery_procedural_test_max_num_locs=40, pddl_delivery_procedural_test_min_want_locs=20, pddl_delivery_procedural_test_max_want_locs=30, pddl_delivery_procedural_test_min_extra_newspapers=0, pddl_delivery_procedural_test_max_extra_newspapers=10, pddl_easy_delivery_procedural_train_min_num_locs=3, pddl_easy_delivery_procedural_train_max_num_locs=5, pddl_easy_delivery_procedural_train_min_want_locs=1, pddl_easy_delivery_procedural_train_max_want_locs=2, pddl_easy_delivery_procedural_train_min_extra_newspapers=0, pddl_easy_delivery_procedural_train_max_extra_newspapers=1, pddl_easy_delivery_procedural_test_min_num_locs=4, pddl_easy_delivery_procedural_test_max_num_locs=6, pddl_easy_delivery_procedural_test_min_want_locs=2, pddl_easy_delivery_procedural_test_max_want_locs=3, pddl_easy_delivery_procedural_test_min_extra_newspapers=0, pddl_easy_delivery_procedural_test_max_extra_newspapers=1, pddl_spanner_procedural_train_min_nuts=1, pddl_spanner_procedural_train_max_nuts=3, pddl_spanner_procedural_train_min_extra_spanners=0, pddl_spanner_procedural_train_max_extra_spanners=2, pddl_spanner_procedural_train_min_locs=2, pddl_spanner_procedural_train_max_locs=4, pddl_spanner_procedural_test_min_nuts=10, pddl_spanner_procedural_test_max_nuts=20, pddl_spanner_procedural_test_min_extra_spanners=0, pddl_spanner_procedural_test_max_extra_spanners=10, pddl_spanner_procedural_test_min_locs=20, pddl_spanner_procedural_test_max_locs=30, pddl_forest_procedural_train_min_size=8, pddl_forest_procedural_train_max_size=10, pddl_forest_procedural_test_min_size=10, pddl_forest_procedural_test_max_size=12, pddl_gripper_procedural_train_min_num_rooms=3, pddl_gripper_procedural_train_max_num_rooms=5, pddl_gripper_procedural_train_min_num_balls=1, pddl_gripper_procedural_train_max_num_balls=2, pddl_gripper_procedural_test_min_num_rooms=3, pddl_gripper_procedural_test_max_num_rooms=5, pddl_gripper_procedural_test_min_num_balls=1, pddl_gripper_procedural_test_max_num_balls=2, pddl_ferry_procedural_train_min_num_locs=3, pddl_ferry_procedural_train_max_num_locs=5, pddl_ferry_procedural_train_min_num_cars=1, pddl_ferry_procedural_train_max_num_cars=2, pddl_ferry_procedural_test_min_num_locs=3, pddl_ferry_procedural_test_max_num_locs=5, pddl_ferry_procedural_test_min_num_cars=1, pddl_ferry_procedural_test_max_num_cars=2, pddl_miconic_procedural_train_min_buildings=1, pddl_miconic_procedural_train_max_buildings=2, pddl_miconic_procedural_train_min_floors=3, pddl_miconic_procedural_train_max_floors=5, pddl_miconic_procedural_train_min_passengers=1, pddl_miconic_procedural_train_max_passengers=2, pddl_miconic_procedural_test_min_buildings=1, pddl_miconic_procedural_test_max_buildings=2, pddl_miconic_procedural_test_min_floors=3, pddl_miconic_procedural_test_max_floors=5, pddl_miconic_procedural_test_min_passengers=1, pddl_miconic_procedural_test_max_passengers=2, stick_button_num_buttons_train=[1, 2], stick_button_num_buttons_test=[3, 4], stick_button_disable_angles=True, stick_button_holder_scale=0.1, screws_num_screws_train=[15, 20], screws_num_screws_test=[25, 30], doors_room_map_size=2, test_doors_room_map_size=5, doors_min_obstacles_per_room=0, doors_max_obstacles_per_room=3, doors_min_room_exists_frac=0.25, doors_max_room_exists_frac=0.75, doors_birrt_num_attempts=10, doors_birrt_num_iters=100, doors_birrt_smooth_amt=50, doors_draw_debug=False, timeout=1000.0, doorknobs_target_value=0.75, narrow_passage_open_door_refine_penalty=0, narrow_passage_door_width_padding_lb=0.0001, narrow_passage_door_width_padding_ub=0.015, narrow_passage_passage_width_padding_lb=0.0005, narrow_passage_passage_width_padding_ub=0.02, narrow_passage_birrt_num_attempts=10, narrow_passage_birrt_num_iters=100, narrow_passage_birrt_smooth_amt=50, exit_garage_clear_refine_penalty=0, exit_garage_min_num_obstacles=2, exit_garage_max_num_obstacles=3, exit_garage_rrt_extend_fn_threshold=0.001, exit_garage_rrt_num_control_samples=100, exit_garage_rrt_num_attempts=3, exit_garage_rrt_num_iters=100, exit_garage_rrt_sample_goal_eps=0.1, exit_garage_motion_planning_ignore_obstacles=False, exit_garage_raise_environment_failure=False, coffee_num_cups_train=[1], coffee_num_cups_test=[4], coffee_jug_init_rot_amt=2.0943951023931953, satellites_num_sat_train=[2, 3], satellites_num_obj_train=[3, 4], satellites_num_sat_test=[3, 4], satellites_num_obj_test=[4, 5], sokoban_gym_name='Sokoban-v0', kitchen_use_perfect_samplers=False, kitchen_goals='all', kitchen_render_set_of_marks=False, kitchen_use_combo_move_nsrts=False, kitchen_randomize_init_state=False, sticky_table_num_tables=5, sticky_table_place_smooth_fall_prob=0.6, sticky_table_place_sticky_fall_prob=0.0, sticky_table_pick_success_prob=1.0, sticky_table_tricky_floor_place_sticky_fall_prob=0.5, sticky_table_place_ball_fall_prob=1.0, sticky_table_num_sticky_tables=1, grid_row_num_cells=5, test_grid_row_num_cells=10, num_doors=2, gridworld_num_rows=4, gridworld_num_cols=4, random_options_max_tries=100, option_model_terminate_on_repeat=True, option_model_use_gui=False, gnn_num_message_passing=3, gnn_layer_size=16, gnn_learning_rate=0.001, gnn_weight_decay=0, gnn_num_epochs=25000, gnn_batch_size=128, gnn_do_normalization=False, gnn_use_validation_set=True, gnn_option_policy_solve_with_shooting=True, gnn_option_policy_shooting_variance=0.1, gnn_option_policy_shooting_max_samples=100, metacontroller_max_samples=100, pg3_heuristic='policy_guided', pg3_search_method='hill_climbing', pg3_task_planning_heuristic='lmcut', pg3_gbfs_max_expansions=100, pg3_hc_enforced_depth=0, pg3_max_policy_guided_rollout=50, pg3_plan_compare_inapplicable_cost=0.99, pg3_add_condition_allow_new_vars=True, pg3_max_analogies=5, pg3_init_policy=None, pg3_init_base_env=None, nsrt_rl_reward_epsilon=0.01, nsrt_rl_pos_reward=0, nsrt_rl_neg_reward=-1, nsrt_rl_option_learner='dummy_rl', nsrt_rl_valid_reward_steps_threshold=10, pretrained_model_prompt_cache_dir='pretrained_model_cache', llm_openai_max_response_tokens=700, llm_use_cache_only=False, llm_model_name='text-curie-001', llm_temperature=0.5, llm_num_completions=1, vlm_model_name='gemini-pro-vision', sesame_task_planner='astar', sesame_task_planning_heuristic='lmcut', sesame_allow_noops=True, sesame_check_expected_atoms=True, sesame_use_necessary_atoms=True, sesame_use_visited_state_set=False, sesame_grounder='naive', sesame_check_static_object_changes=False, sesame_static_object_change_tol=0.001, bilevel_plan_without_sim=True, log_dir='logs', results_dir='results', eval_trajectories_dir='eval_trajectories', approach_dir='saved_approaches', data_dir='saved_datasets', video_dir='videos', image_dir='images', video_fps=2, failure_video_mode='longest_only', offline_data_planning_timeout=-1, offline_data_task_planning_heuristic='default', offline_data_max_skeletons_optimized=-1, offline_data_num_replays=500, offline_data_bilevel_plan_without_sim=None, teacher_dataset_num_examples=1, min_data_for_nsrt=0, min_perc_data_for_nsrt=0, data_orderings_to_search=1, strips_learner='oracle', disable_harmlessness_check=False, enable_harmless_op_pruning=False, backchaining_check_intermediate_harmlessness=False, pnad_search_without_del=False, pnad_search_timeout=10.0, compute_sidelining_objective_value=False, clustering_learner_true_pos_weight=10, clustering_learner_false_pos_weight=1, cluster_and_intersect_prederror_max_groundings=10, cluster_and_search_inner_search_max_expansions=2500, cluster_and_search_inner_search_timeout=30, cluster_and_search_score_func_max_groundings=10000, cluster_and_search_var_count_weight=0.1, cluster_and_search_precon_size_weight=0.01, cluster_and_intersect_prune_low_data_pnads=False, cluster_and_intersect_min_datastore_fraction=0.0, use_torch_gpu=False, learning_rate=0.001, weight_decay=0, mlp_regressor_max_itr=100000, mlp_regressor_hid_sizes=[32, 32], mlp_regressor_clip_gradients=True, mlp_regressor_gradient_clip_value=5, mlp_classifier_hid_sizes=[32, 32], mlp_classifier_balance_data=True, cnn_regressor_max_itr=500, cnn_regressor_conv_channel_nums=[3, 3], cnn_regressor_conv_kernel_sizes=[5, 3], cnn_regressor_linear_hid_sizes=[32, 8], cnn_regressor_clip_gradients=True, cnn_regressor_gradient_clip_value=5, neural_gaus_regressor_hid_sizes=[32, 32], neural_gaus_regressor_max_itr=1000, mlp_classifier_n_iter_no_change=5000, implicit_mlp_regressor_max_itr=10000, implicit_mlp_regressor_num_negative_data_per_input=5, implicit_mlp_regressor_num_samples_per_inference=100, implicit_mlp_regressor_temperature=1.0, implicit_mlp_regressor_inference_method='derivative_free', implicit_mlp_regressor_derivative_free_num_iters=3, implicit_mlp_regressor_derivative_free_sigma_init=0.33, implicit_mlp_regressor_derivative_free_shrink_scale=0.5, implicit_mlp_regressor_grid_num_ticks_per_dim=100, pytorch_train_print_every=1000, sampler_learner='oracle', max_rejection_sampling_tries=100, sampler_mlp_classifier_max_itr=10000, sampler_mlp_classifier_n_reinitialize_tries=1, sampler_learning_use_goals=False, sampler_disable_classifier=False, sampler_learning_regressor_model='neural_gaussian', sampler_learning_max_negative_data=100000, option_learning_action_converter='identity', interactive_num_ensemble_members=10, interactive_query_policy='threshold', interactive_score_function='entropy', interactive_score_threshold=0.05, interactive_random_query_prob=0.5, interactive_num_requests_per_cycle=5, predicate_classifier_model='mlp', predicate_mlp_classifier_max_itr=100000, predicate_mlp_classifier_n_reinitialize_tries=1, predicate_mlp_classifier_init='default', predicate_knn_classifier_n_neighbors=1, online_nsrt_learning_requests_per_cycle=5, online_learning_max_novelty_count=0, active_sampler_learning_model='myopic_classifier_mlp', active_sampler_learning_feature_selection='all', active_sampler_learning_knn_neighbors=3, active_sampler_learning_use_teacher=True, active_sampler_learning_score_gamma=0.5, active_sampler_learning_fitted_q_iters=5, active_sampler_learning_explore_pursue_goal_interval=5, active_sampler_learning_object_specific_samplers=False, active_sampler_learning_n_iter_no_change=5000, active_sampler_learning_num_lookahead_samples=5, active_sampler_learning_explore_length_base=2, active_sampler_learning_num_ensemble_members=10, active_sampler_learning_exploration_sample_strategy='epsilon_greedy', active_sampler_learning_exploration_epsilon=1.0, active_sampler_learning_replay_buffer_size=1000000, active_sampler_learning_batch_size=64, use_epsilon_annealing=True, min_epsilon=0.05, polyak_tau=0.0025, same_levels=True, polyak_true=True, use_old_exploration=False, use_callplanner=False, random_bridge=False, use_obj_centric=True, rl_rwd_shape=False, skill_competence_model='optimistic', skill_competence_model_num_em_iters=3, skill_competence_model_max_train_iters=1000, skill_competence_model_learning_rate=0.01, skill_competence_model_lookahead=1, skill_competence_model_optimistic_window_size=5, skill_competence_model_optimistic_recency_size=5, skill_competence_default_alpha_beta=(10.0, 1.0), skill_competence_initial_prediction_bonus=0.5, refinement_estimator='oracle', refinement_estimation_num_skeletons_generated=8, refinement_data_num_skeletons=8, refinement_data_skeleton_generator_timeout=20, refinement_data_low_level_search_timeout=5, refinement_data_failed_refinement_penalty=5, refinement_data_include_execution_cost=True, refinement_data_low_level_execution_cost=0.05, cnn_refinement_estimator_crop=False, cnn_refinement_estimator_crop_bounds=(320, 400, 100, 650), cnn_refinement_estimator_downsample=2, bridge_policy='learned_ldl', glib_min_goal_size=1, glib_max_goal_size=1, glib_num_babbles=10, greedy_lookahead_max_num_trajectories=100, greedy_lookahead_max_traj_length=2, greedy_lookahead_max_num_resamples=10, active_sampler_explore_use_ucb_bonus=True, active_sampler_explore_bonus=0.1, active_sampler_explore_task_strategy='planning_progress', active_sampler_explorer_replan_frequency=100, active_sampler_explorer_planning_progress_max_tasks=10, active_sampler_explorer_planning_progress_max_replan_tasks=5, active_sampler_explorer_skip_perfect=True, active_sampler_learning_init_cycles_to_pursue_goal=1, grammar_search_grammar_includes_givens=True, grammar_search_grammar_includes_foralls=True, grammar_search_grammar_use_diff_features=False, grammar_search_grammar_use_euclidean_dist=False, grammar_search_use_handcoded_debug_grammar=False, grammar_search_pred_selection_approach='score_optimization', grammar_search_pred_clusterer='oracle', grammar_search_true_pos_weight=10, grammar_search_false_pos_weight=1, grammar_search_bf_weight=1, grammar_search_operator_complexity_weight=0.0, grammar_search_pred_complexity_weight=0.0001, grammar_search_max_predicates=200, grammar_search_predicate_cost_upper_bound=6, grammar_search_prune_redundant_preds=True, grammar_search_score_function='expected_nodes_created', grammar_search_heuristic_based_weight=10.0, grammar_search_max_demos=inf, grammar_search_max_nondemos=50, grammar_search_energy_based_temperature=10.0, grammar_search_task_planning_timeout=1.0, grammar_search_search_algorithm='hill_climbing', grammar_search_hill_climbing_depth=0, grammar_search_parallelize_hill_climbing=False, grammar_search_gbfs_num_evals=1000, grammar_search_off_demo_count_penalty=1.0, grammar_search_on_demo_count_penalty=10.0, grammar_search_suspicious_state_penalty=10.0, grammar_search_expected_nodes_upper_bound=100000.0, grammar_search_expected_nodes_optimal_demo_prob=0.99999, grammar_search_expected_nodes_backtracking_cost=1000.0, grammar_search_expected_nodes_allow_noops=True, grammar_search_classifier_pretty_str_names=['?x', '?y', '?z'], grammar_search_vlm_atom_proposal_prompt_type='options_labels_whole_traj', grammar_search_vlm_atom_label_prompt_type='per_scene_naive', grammar_search_vlm_atom_proposal_use_debug=False, grammar_search_clustering_gmm_num_components=10, handmade_demo_filename='', vlm_trajs_folder_name='', get_arg_specific_settings=<classmethod object at 0x7f59fd097b50>, perceiver='trivial', horizon=30, active_sampler_learning_num_samples=100, max_num_steps_option_rollout=1000, sesame_propagate_failures='immediately', offline_data_method='demo', option_model_name='oracle', sesame_max_skeletons_optimized=50, sesame_max_samples_per_step=10, grammar_search_expected_nodes_max_skeletons=-1, grammar_search_diff_features_const_multiplier=1e-06, grammar_search_euclidean_feature_names=[('x', 'y', 'x', 'y')], grammar_search_euclidean_const_multiplier=1e-06, cover_num_blocks=2, cover_num_targets=2, cover_block_widths=[0.1, 0.07], cover_target_widths=[0.05, 0.03], cover_initial_holding_prob=0.75, env='grid_row_door', approach='rl_bridge_policy', excluded_predicates='', included_options='', seed=6, option_learner='no_learning', explorer='maple_q', execution_monitor='trivial', make_test_videos=False, make_failure_videos=False, make_interaction_videos=False, make_demo_videos=False, make_demo_images=False, make_cogman_videos=False, load_approach=False, restart_learning=False, load_data=False, load_atoms=False, save_atoms=False, skip_until_cycle=-1, experiment_id='RLBRIDGE_gridrowdoor-no_callplanner', load_experiment_id='', log_file='', use_gui=False, loglevel=10, crash_on_failure=False)
Git commit hash: 4e424522ab45ae4b145226ae01782f813ddd0863


CREATED 0 DEMONSTRATIONS
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.35882756], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5888417], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48776063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6065472], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.95758253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2263614], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6886818], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46539864], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8112022], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.41479743], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.85494244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7994887], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2810246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9662007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.09206434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.7335045], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.001524], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.38922206], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.60850435], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.625906], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.3666714], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.28651085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6715269], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54072946], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.36688977], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.52317005], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.3633216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8943184], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68733114], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.83810216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.31544504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.70549023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10912532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9594042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.36211175], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78428316], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.56917846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.843851], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6430981], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.40464333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6022028], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.88027513], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.80600697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.47882545], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.1619897], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8661136], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.47435382], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.38695133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.07787234], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08094624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11202298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14576408], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53786606], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96981686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7818082], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.18942201], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9804833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.412859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9689147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13425697], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49156418], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7038759], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17661385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5523231], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.53061783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95719594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.39288932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6547529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60483813], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9691262], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00183067], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.58987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9204111], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.07824702], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.279807], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.70919544], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.48116857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51241225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.39992782], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9363226], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2789709], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.53619605], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1457478], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.06854101], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.23135492], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.7506577], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6896591], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8616085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01382293], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3555773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.89248616], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.40962514], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98030084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7748487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5247891], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8166926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2318591], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14774564], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.899058], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7570641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.23724288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7428799], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5655601], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20645267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1165858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5049761], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20873392], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.64957803], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.31355697], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06143559], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7658881], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8225409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3691112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97894126], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.64274484], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2555893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.87691957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8806748], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.613429], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12592517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7821084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78996724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.84922767], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23299162], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.19265085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46854803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.03447533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2952217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5350708], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13702032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9463735], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.361551], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6697862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06560395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.21455945], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.41245905], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5063544], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5174787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7148149], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7697597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5628668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.825975], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6423286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.22002637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.08599465], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.12904723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43196926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5080038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00430396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.42926207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.16901402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9946903], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96156836], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9939245], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.33137885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6319049], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8193622], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 0, 'query_cost': 0.0, 'learning_time': 4.722969606518745e-06})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__None.pkl


ONLINE LEARNING CYCLE 0

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 5 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 439 datapoints
Loss: 0.00270, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss: 0.00000, iter: 15000/100000
Loss: 0.00000, iter: 16000/100000
Loss: 0.00000, iter: 17000/100000
Loss did not improve after 5000 itrs, terminating at itr 17678.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.3506269], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.36583534], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.36990228], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.3371566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.36365527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.35607174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.36923072], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.36290908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.3645112], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.330459], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.34177327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.3301453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.32538688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.34194738], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.3598411], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.36441174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.3513457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.3136056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.35727188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.32737428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.3724568], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.34697342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.36786428], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.36836627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.35123134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.3439355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.34306023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.35746485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.35956308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.36136827], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.3685753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.35868275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.32214087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.35974413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.35691985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.3633448], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.36697936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.3596592], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.35425368], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.35470924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.3672336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.35359094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.33458638], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.35269925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.3607552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.3668804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.36522713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.3728302], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.3676732], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.36522958], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.35185194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.36389956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.34821355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.36085817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.3576364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.35832947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.3666292], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.349132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.36441872], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.36523336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.3644917], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.353597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.36145055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.34451854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.3653774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.35256433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.35776713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.36401668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.36392808], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.32946375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.37371978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.33209842], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.35908142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.32237107], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35530013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3297521], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.356489], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36933318], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35347152], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.34082985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35766485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35444805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.32744625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.37229136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.33848467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3625704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35811383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35857022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36399144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35884953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36229563], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36659932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3687209], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3667484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.32764906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.34861797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.34646255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3584362], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3374378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35886225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3750816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35308236], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36672565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.37322286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3659925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34852105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34840578], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3544087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.37952426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3636893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34014657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3586465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35225645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.32653427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.33166158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3591979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3544465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3657209], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36540574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35097775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3530152], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3480115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3597682], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3644629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35345677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3639573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3593787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3591475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35275856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.32874742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3667486], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.36224836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.363168], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.34692273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.35397163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.36250082], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.37327176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.34678975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.3554913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.36652088], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.36534098], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.36322114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.3668247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.36744657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.36567438], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.35858378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.37615022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.36745703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.37445003], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.3629011], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.3498468], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.36575568], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.36079487], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3637039], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35702783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35660753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.34824172], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3591984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36758438], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35530886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35164204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3380821], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3227325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36191025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36855835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.33880267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36883888], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.34551838], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.34969363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36196226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35764113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36590502], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.34963122], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3427148], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.33022603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35059065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36179906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36465612], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3667631], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.33552924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35440332], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3645742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3636701], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36346605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36835566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35736823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36870873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3562939], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3591255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36359274], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3517966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3606837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.37261397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3280036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3577343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3681329], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36267963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35697094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3546481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35242406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3602759], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34792823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34087354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34905338], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.33304727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3651351], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.38092372], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.33443195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3655766], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3626949], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35287163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3679516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.37024724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36282203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.34156713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.80711496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3656237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35523793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.356587], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.34969163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.38243887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35964966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.33327124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3666261], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.33317834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36483446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35840443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35431847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35937092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35910115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35851133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35485741], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36383137], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36594915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.33523843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35716823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3594173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35618097], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.351327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3708492], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35087714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35929304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35181233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3401096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35579798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36899662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8086695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36992148], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34932533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36378288], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3631234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36412093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34481794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36828375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36295846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3682457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35676628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35228613], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3679208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35646403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.31094372], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34509766], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3615561], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35634232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3631677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.37796134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.32989037], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (0,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0][1][0.0][0.0]
[0.0][1][0.0][0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 449, 'query_cost': 0.0, 'learning_time': 31.624852861918043})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__0.pkl


ONLINE LEARNING CYCLE 1

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 10 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 930 datapoints
Loss: 0.00631, iter: 0/100000
Loss: 0.00008, iter: 1000/100000
Loss: 0.00019, iter: 2000/100000
Loss: 0.00126, iter: 3000/100000
Loss: 0.00124, iter: 4000/100000
Loss: 0.00345, iter: 5000/100000
Loss: 0.00121, iter: 6000/100000
Loss: 0.00008, iter: 7000/100000
Loss: 0.00009, iter: 8000/100000
Loss: 0.00124, iter: 9000/100000
Loss: 0.00132, iter: 10000/100000
Loss: 0.00367, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11480.
Loaded best model with loss: 0.00003
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.9859336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.9819461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.99422145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.9950604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.99965125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.986672], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.9927882], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.9640527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.981945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.9868775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.9969926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.9796876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.98701006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.9751032], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.9928028], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.98075706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.9872089], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.9833448], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.9428415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.99802023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.9992465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.9944742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.992445], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9786338], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.95251864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.98365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9969762], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.97319883], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.94492817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9639488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9591307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9795067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.99407196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.98265797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.98464155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.97926587], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9884076], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9526057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.99914724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9886172], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9304928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9832424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9758816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9939324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9903017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.97627735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.98940766], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9835808], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.99854434], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9959788], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9910989], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.99420696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9944871], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.93917376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.91270334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9791926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9844901], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9998562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.97995764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9957585], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9816477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.999649], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9796985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9952483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9761496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9878794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9944713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.99772877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.99739695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9659652], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.99702144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.95315444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.99133444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9233388], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98551494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9736941], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9769971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98429114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99069035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.97597986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9943809], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.97992414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.994435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98885417], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9636402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9954928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9680445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9521892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99677557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.96910983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9927319], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.94676155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9908174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99330235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9865179], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9567147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9994636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9750142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99794227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99129844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.965897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9989625], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99360865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9872474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9912077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9173123], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9904744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9699256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97348166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9895771], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99563164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9960391], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99667466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9803439], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97406834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9930509], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97665167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9938511], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.994544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99189156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9900685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99799174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9776943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9787898], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99475265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9885861], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9825278], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98845357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99161285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9996478], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9673018], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.9862617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.9967927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.997072], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.97205865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.96598494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.95334077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.99903864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.9852765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.9308775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.96719074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.99523646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.9924649], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.95838505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.99987507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.98020434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.96381074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.97371787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.9884436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.9995873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.9922137], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.99778163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.9947218], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9501622], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9971856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98485255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.95307183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9530976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.92873144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99594796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99550104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9795772], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99729234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9852072], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9810723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9880889], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9805325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.990929], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9502115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9870741], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9891216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9656597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9859216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.96714926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99234414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.96998394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9887438], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99321], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9368631], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.994623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99155855], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9905408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9669079], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97975206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9755225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9964794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.960843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9978412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98687243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9852714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9798203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9992426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98415446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98567396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9522225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9568092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9458659], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.96101594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97318745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9849609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9970437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99233073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9819761], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9813221], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9910818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9926556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9974563], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.973515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98596835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9728567], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9775275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9926774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9991226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.999651], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.97689724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9817659], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.979482], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99350345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99919754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9842834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98935497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99974364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9918749], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.960589], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9991046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99281013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9948608], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9938629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9846363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9856744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9995877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9845194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9883202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9980557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9919529], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.973416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.95551455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9664555], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9590664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9777817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.96893257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9977709], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9883925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9866964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98682874], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9894303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98714626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98720247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9960172], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9820355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98665106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98948705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97913885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.967428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9940883], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98401487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99110764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9912749], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9961475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9935877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9997182], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.994409], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98608303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9757816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.96391], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99802977], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (1,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0][1, 2][0.0, 0.0][0.0, 0.0]
[0.0, 0.0][1, 2][0.0, 0.0][0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 950, 'query_cost': 0.0, 'learning_time': 53.86418239789782})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__1.pkl


ONLINE LEARNING CYCLE 2

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 15 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 1425 datapoints
Loss: 0.00490, iter: 0/100000
Loss: 0.00004, iter: 1000/100000
Loss: 0.00005, iter: 2000/100000
Loss: 0.00015, iter: 3000/100000
Loss: 0.00006, iter: 4000/100000
Loss: 0.00003, iter: 5000/100000
Loss: 0.00981, iter: 6000/100000
Loss: 0.00005, iter: 7000/100000
Loss: 0.00004, iter: 8000/100000
Loss: 0.00008, iter: 9000/100000
Loss: 0.00500, iter: 10000/100000
Loss: 0.00017, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11026.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.98965925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9957164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.98822385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9783329], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.999632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.99352574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.96587074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.98855686], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9765815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.99119914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.98529756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.99961036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9933221], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9747802], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.99458814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.96367157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9385196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.96079546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9917155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9889761], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.98663706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9947481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.97931004], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.96862733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.94748765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99940497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99990696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9924491], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9991417], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9901997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.97224206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98606527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.97528607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99482405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98479265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9716331], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99537027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.985409], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99765944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9616401], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98489606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9751507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99225086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98785317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99128026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9816246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.93836683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9979543], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9798383], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9174704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.97454494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9637788], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9910617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.980523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.99468046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9998048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9716592], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.97816783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.99191546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9610091], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9608046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.99429035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.99434954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9751343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.98935646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.94513714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.98178935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.98171866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.97993964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9883559], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9786735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.95185333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9884108], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.99912256], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9924538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98524976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9897357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97040665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9834632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.992966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99972224], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98032784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9986784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9505781], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9831302], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99725324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9641836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99542105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99405026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99023926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96083194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9988326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9929769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9973937], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99783903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9589557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9181765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9739763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98508424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9782576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9832184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9920362], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9626054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9720348], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9852678], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9594822], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.961954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9965463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9945479], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9832568], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99348927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9861244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96864927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95136327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99763227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.988819], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9808534], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9942618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9447724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99162745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97102046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9992202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9484883], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9895815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.966435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99852294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99397326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97910756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9905145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9352433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9971512], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.9922232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.97070736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.9851637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.9724178], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.98192805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.9998411], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.99079645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.9805252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.98642915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.98221546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.9657988], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.96976703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.98556304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.98343337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.9982106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.98520285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.9798289], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.9993688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.9899503], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.9928491], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.97343653], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.99948776], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9927676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9040273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98261464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9865616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9774807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99344623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9596438], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9970579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9936694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99065113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9724812], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9968198], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98615557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9681623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9829155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97178435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98508036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.93524134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9957035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.978122], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9925485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9941817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9858403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9431788], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9905002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9766381], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99401593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99629194], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96538055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9919953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99315643], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9852181], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98743474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99525577], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98803306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9788669], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98192376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9950901], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9585081], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99576133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9952232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9895383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9629132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96308327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9982765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99198], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9684633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98283947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99538785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.974096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.999218], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9955094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9937528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9477344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9485473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9784343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98921263], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9837776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9958182], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9876194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.999148], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98148805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9882262], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9951059], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98466027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.95638525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99556863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9901394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99852747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9492162], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96385413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.92378104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99406105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9905821], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9830442], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.987396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9936873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9940709], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9958822], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99029374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99324405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9935558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9776618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9979173], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.92347264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9476192], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97114956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98120743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9866014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9788272], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9941789], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99623257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99488795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9652853], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9734472], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9899297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97953695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9997975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98884976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99427766], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94869936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9967647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.998048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99047774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9627158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9950084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9920946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9959781], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98233944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9911677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99775684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9783006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9931688], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (2,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0][1, 2, 3][0.0, 0.0, 0.0][0.0, 0.0, 0.0]
[0.0, 0.0, 0.0][1, 2, 3][0.0, 0.0, 0.0][0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1455, 'query_cost': 0.0, 'learning_time': 77.11365764087532})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__2.pkl


ONLINE LEARNING CYCLE 3

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 20 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 1920 datapoints
Loss: 0.00021, iter: 0/100000
Loss: 0.00004, iter: 1000/100000
Loss: 0.00003, iter: 2000/100000
Loss: 0.00683, iter: 3000/100000
Loss: 0.00695, iter: 4000/100000
Loss: 0.00004, iter: 5000/100000
Loss: 0.00003, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6451.
Loaded best model with loss: 0.00002
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.98964846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99612784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9776229], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9444838], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9463985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.98238504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.98634255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99089307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.98612034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.95515066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9618228], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9911306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9973125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99483484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.96504503], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.98288864], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99946404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9552263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9973142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98994505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9820396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9905844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98196864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99185914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9297911], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98827076], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.94919354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9943048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.92639726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9929824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9988234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9855207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99215794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9292294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9956828], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9979399], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9942549], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9890668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9850654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9936501], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9909378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9616287], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9853892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9902501], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9970004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98680884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99713534], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9638586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9722102], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99611485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99516815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99622124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.93284714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99675614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98510575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98427767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9781358], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99951786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.989867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.95930314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9986802], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9717708], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9869866], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9886856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99442923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9905617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.981244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99721533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9988827], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99327683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99874735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99226874], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9975428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9895352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98160774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9838533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9689326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9955121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98498213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99654645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98582023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9822517], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96806514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99253947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97718614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9465037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99964887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9903754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9526216], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9886471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9906095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.99310774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.999586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9924256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9896614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.99134135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.98608893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.94640017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.98458135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9987172], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9796365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9818124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9721035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9244672], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.97216225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9979473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.98833627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.96623427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.98402953], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97639805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.950254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9981097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9871493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9747157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9960249], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99280626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9890869], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9938306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96271825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9449869], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9842491], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9975081], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96028185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9424807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9842652], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98722017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.990033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9689369], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99638665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97381276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9884488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9966618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95328456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97294945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98176205], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98870516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9458578], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9914168], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9740511], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9959236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9991609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9978053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98236555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.999487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9807481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9921966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9803102], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9313335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96535146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9993682], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96352184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9954558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9792616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98811084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9847292], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97736406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9645683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9994009], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9787521], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9884411], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (3,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0][1, 2, 3, 4][0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0][1, 2, 3, 4][0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1960, 'query_cost': 0.0, 'learning_time': 94.21011368389009})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__3.pkl


ONLINE LEARNING CYCLE 4

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 25 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 2415 datapoints
Loss: 0.00014, iter: 0/100000
Loss: 0.00815, iter: 1000/100000
Loss: 0.00004, iter: 2000/100000
Loss: 0.00004, iter: 3000/100000
Loss: 0.00003, iter: 4000/100000
Loss: 0.00004, iter: 5000/100000
Loss: 0.01586, iter: 6000/100000
Loss: 0.00008, iter: 7000/100000
Loss: 0.00014, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8696.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8369314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.83795935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8275352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8323864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.82534236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8282115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8409571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8348505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.81185406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8358422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8271183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.78767735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8271361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8369835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.82625204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8059677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.82884145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.82653767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.83201545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.82850885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8375865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.81394833], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.83047754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.82242644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8368259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8017398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8288922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.82839686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.83493525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.825043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.82128596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.83154076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.79498184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8330071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8301233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8369508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.81208485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.83207834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.81982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.81138736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8226082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.83359635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.83760345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.82579744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7848038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.82851344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8287543], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8033244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8232629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.79960763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8056951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8197886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.81981707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8312981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8275246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8306359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.83408177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8249337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8186801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8306965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8063777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8922433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.82676446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.824985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8283111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8354093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.80736685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8172139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8423094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.81800663], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8324176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.832587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8325796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8144392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.80231637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8327296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83060765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8324326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8187855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8106721], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.80663365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8191695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.828983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78016484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.77071047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8313286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83562714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.82513624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.822947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83011997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8307977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7797006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.81009656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8171631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83342755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8317622], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8302585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8371483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7980947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.80512315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7841003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8245092], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.822924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.818418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8221488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.774923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8295604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.82427484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.833245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8351247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.81369275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8300178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8320194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8117112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8154527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.82802606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8374064], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.834212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.80001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.77256656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8345292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.834882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.81997585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.821258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.80337065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8114621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.82137686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.81921095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8170006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8186547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83400893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8143069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8351395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.77027506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8339948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83078957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83209217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8320067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.82199776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7844563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.79371476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.830907], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.81635743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8163048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8249122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8252762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8070009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8184331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.81879437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.82634425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.81150794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.82420325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8133558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.820199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83166564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8220379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.82679933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8319525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8207834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83480453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.82851255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83325505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8488201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8194337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8126691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.80524105], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (4,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5][0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5][0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2465, 'query_cost': 0.0, 'learning_time': 116.4851137578953})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__4.pkl


ONLINE LEARNING CYCLE 5

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 30 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 2910 datapoints
Loss: 0.00006, iter: 0/100000
Loss: 0.00003, iter: 1000/100000
Loss: 0.00002, iter: 2000/100000
Loss: 0.00003, iter: 3000/100000
Loss: 0.00002, iter: 4000/100000
Loss: 0.00003, iter: 5000/100000
Loss: 0.00008, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6225.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7344482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.722579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7328637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.73602515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.723858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7251122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.72717226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.72046536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.72773767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.72098905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.70953923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7076541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7198045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.73514736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.73730624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7172753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7425285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.6975739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.70649755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.71000576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.72311926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7236904], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7212808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.708902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7118464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7230438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.71988744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.70821285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7392372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.73103935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.73324287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7404712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.73183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7360903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.70898736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7405155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.71898097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7191175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7215939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7165139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.71955514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.73141444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7307859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7228184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.73067456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.71075094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.73426974], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.74519145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.74488974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.73216516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7297901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.73953193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7272971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.72119504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7247348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7268582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.72226506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.71388054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.730288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7325932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.72678804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7014765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.72494274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7153206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7257314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.71810794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.72334576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.6973065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.662695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7318356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7141691], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.73727304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7249416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72863424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.69938207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7415043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72459143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7177768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6917427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72703135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.73691815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72579795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72501695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.71877706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6878465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7313852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72666544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7040177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.70534366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72435635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.73045045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.713588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7283514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7308564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.726416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7265016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7252075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7219478], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.71933174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7297697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7467495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.72715753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.72352314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.70062023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7385729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.70497715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7370514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.72773916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7258696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.72488195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.70690054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.72577244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7188959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7404668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7220626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.72619534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.724537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.71043146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.73690754], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7206913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72615504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.71919847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72086143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.722761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7189984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7243585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.71760607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7248911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72953343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7286605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.532418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7318539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.73206776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.71420646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7243103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7159558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.74757177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7304968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7260728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.735372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.727139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.69798744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7277983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.71609974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.73642546], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72968155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72854424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72876847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.71577847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7272585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7358732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7275867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72772944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7358538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6989704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.73853666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7352942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.71885055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.71669674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.71381783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7212119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7278116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72424245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72651255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7192511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.736866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7329704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7284808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7410366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.73839486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.71054476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.71173644], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (5,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6][0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6][0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2970, 'query_cost': 0.0, 'learning_time': 136.30417080689222})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__5.pkl


ONLINE LEARNING CYCLE 6

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 35 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3405 datapoints
Loss: 0.00009, iter: 0/100000
Loss: 0.00002, iter: 1000/100000
Loss: 0.00897, iter: 2000/100000
Loss: 0.00009, iter: 3000/100000
Loss: 0.00002, iter: 4000/100000
Loss: 0.00002, iter: 5000/100000
Loss: 0.00004, iter: 6000/100000
Loss: 0.00905, iter: 7000/100000
Loss: 0.00001, iter: 8000/100000
Loss: 0.00897, iter: 9000/100000
Loss: 0.00006, iter: 10000/100000
Loss: 0.00002, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11966.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.78416026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6052836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7711233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.78794515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.78268087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4274097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.78088707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.78440726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7794713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7708047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7800302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.78129095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7894322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.785373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4786269], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6266313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6790313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7851687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.78257066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.73266447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7713707], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46714297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7833062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.78473055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7821568], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.83424383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.77800065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42394456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.78661865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.72384167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7887931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.72745514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7743202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47993812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7761804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7854347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5147375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7854069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.78248113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.78259945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5623646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7773716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.77547514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.781119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.768062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.77462316], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.728825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7763924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7860283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7792419], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.72274387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7816147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.77280504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7810086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.89585537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7736505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7745698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.78358775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7855024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7720733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9944009], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6591082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.78385395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7866871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7816288], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.7826699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.78684], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7815583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7750894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7796029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78022826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7725885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93902797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.77287126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7704797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.77916336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7890787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5530947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.77462435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9044288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78100777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78667766], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7767497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9974364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7721534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78295916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.77544963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7097709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.77731466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7780475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7804855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7717968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.778758], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7834692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7749115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47942156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7715574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7765196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.77733195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7794879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.81217784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.77775866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.94810116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.6555929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.78687996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7713986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.93698925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.76977164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7770526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.42734268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7800435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.77469915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.6986027], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45655996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.59684896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.61549455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8972471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7028201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7817543], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.949094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5665945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7779044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.77504385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78742635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8496501], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5297825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78504646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.57222074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78457975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7702405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.77600867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7770258], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8479821], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.804819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78975123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7797175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78636223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.942317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.90739506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7781786], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7805977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78284574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7768612], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.62802464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51816314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7807558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7824509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7829749], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8001032], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9768429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.769475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5147819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7751895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.77496755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7832735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78041786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5059839], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.80465513], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48066202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78003263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7850298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7773175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7681282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8260906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.77363104], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (6,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3475, 'query_cost': 0.0, 'learning_time': 167.42783969291486})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__6.pkl


ONLINE LEARNING CYCLE 7

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 40 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3823 datapoints
Loss: 0.00863, iter: 0/100000
Loss: 0.00002, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00006, iter: 3000/100000
Loss: 0.00004, iter: 4000/100000
Loss: 0.00862, iter: 5000/100000
Loss: 0.00006, iter: 6000/100000
Loss: 0.00867, iter: 7000/100000
Loss: 0.00003, iter: 8000/100000
Loss: 0.00003, iter: 9000/100000
Loss: 0.00001, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10051.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9269374], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.76759875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7397258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.73622566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.73488104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7501843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7474407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.75273037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7325258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7493405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.73999894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7521456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.73180616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7397839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7509339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.74653107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.76758015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.74332106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.75104463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.73826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.74886346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.73461103], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.990781], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.74797356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7384842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7414085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.76218444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7404907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7392131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7464764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.74645257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.75899905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7325111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7976925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.73419476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.72708994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.75078756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.73899263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7223632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.75242174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7419728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.752205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.75704557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7538155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.75049895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7346307], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9795834], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.74326205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.74397284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.74921495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7345109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7697651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7530225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7533679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7822672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.72130567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7289923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.74164885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.73897433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7499061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7178572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.74221164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.730622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7444242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7495836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.74451905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.74133164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.772837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.74206805], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98376834], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7814935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7612202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.75351167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.73060614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.71310705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7499053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7455892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7720568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.73826456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7540137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.71081656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.74367887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.74833876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.73956007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7491817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7361997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7503257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.74848884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7505729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.76690763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7429746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.76543987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7434755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.73292166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7204681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7412555], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9953353], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.93822545], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.741331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7613223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7482239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7506943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.74486846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7618962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7465421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.74918896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7454889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7365204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7442047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.75717574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7366521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7491262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7438618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7495018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7751702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7548731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7630559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.7389547], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99893105], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7311892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7349907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.75208944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.77844423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7465192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7552974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7698852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7351856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.77367735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.74741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.73381895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7455064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7391695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7307132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7484241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7511797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.72431177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7469284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7803124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7446248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.738061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.74349725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7857641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7490307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.74571806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7556798], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99753624], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9871564], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.794614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.74278474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.75403523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7550722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7560182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7442948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7604776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.733603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.75143015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7559587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7552017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7372161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7540458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7392957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7509293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.736185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.75880665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.74547666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7405155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.75459325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7342759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7422342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.73380935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7485216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7393152], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9586184], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (7,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3903, 'query_cost': 0.0, 'learning_time': 196.66253413894447})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__7.pkl


ONLINE LEARNING CYCLE 8

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 45 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4318 datapoints
Loss: 0.00006, iter: 0/100000
Loss: 0.00005, iter: 1000/100000
Loss: 0.00896, iter: 2000/100000
Loss: 0.00005, iter: 3000/100000
Loss: 0.00005, iter: 4000/100000
Loss: 0.00002, iter: 5000/100000
Loss: 0.00003, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6769.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4687031], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5784131], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.8169267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6718691], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.30056295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.96745265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.8655828], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.941662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.404374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.60307276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5081865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.3878836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4902752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48515424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99994344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6936761], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.7944721], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.35529986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9282038], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.75941867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.804977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4287093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.7300009], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.698232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.96984214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3635923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.41795614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6471642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6014507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47356012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.95336473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.7888854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.72661424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2670799], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3875746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.91703176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8832353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.27196926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.30215523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6282082], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3228664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2706635], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45998406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.90336525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48050255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5992135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.8880668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5596272], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9455305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49516135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.3617503], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49003962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4185177], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.73640835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.3080794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.85131186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42622995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.83685595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.592495], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.7215113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.8503051], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47129253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.8657341], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41249922], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.56273764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6389755], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.61012554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.56872994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5361053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6561914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36048388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5772668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6631952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7606453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7975191], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7955223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.579426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.31217068], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9785014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6468231], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.34663936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.76027954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45305848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8303644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4827932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7964933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9006115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.55166227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4954229], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6916791], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.86681145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99518377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9843265], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4691785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.6525431], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.39957064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9235737], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.6234133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.93934137], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.62160194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.97356856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.8233498], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.8575593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.3463155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.973757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.38409868], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.6163856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4807837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.76024866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.8390825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.77224314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.56775093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.40558553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.2733338], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.967794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.286893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7780691], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37895077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9309815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6588549], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7483774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6393854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.81563073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42356327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7373525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.79203165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.657614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3183459], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7977811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5568887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44746876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51919127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.63001937], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.980823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.82064325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3083248], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42294738], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.63991857], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48271182], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42545977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4049365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5333647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6772233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.68909395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.676761], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.32129544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9055122], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37405264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7388879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5731739], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7213811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9843894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.57477146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.77833825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6129398], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9033527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.55588675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.92640376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36664453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9867622], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.58906776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.77216506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8649472], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49458504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.700394], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (8,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4408, 'query_cost': 0.0, 'learning_time': 221.9643647999037})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__8.pkl


ONLINE LEARNING CYCLE 9

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 50 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4813 datapoints
Loss: 0.00002, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00002, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5152.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9907471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.97162044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9879919], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9891743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99625087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99703556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.96637267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.97693205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9897504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9848015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.97456014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9826266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9999167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9817629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9839129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99537545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9906805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9694564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9896301], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.98988706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.97445434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99504226], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.94094443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9990678], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98007333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.94454783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9809049], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.96923935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9960759], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9961185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9924187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98435384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9758509], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9975841], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9982272], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9885718], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9615993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9876017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9775226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9477885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.93367654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9683386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9568424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97857636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9961027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9884039], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98912245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9837476], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99413174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9958931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9815862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98920435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9968208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9790406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99600416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.97929305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.8931521], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.96853554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98779774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9903543], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99094325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.96222067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9389949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9884361], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.992626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9275614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99795717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99505734], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9518126], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9991646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9912765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9948494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98654634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9957753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99045205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99623585], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9900547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99731785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9871965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98559636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97849244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99757963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99049795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9979045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97892755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9971986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.972359], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98033357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99054205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9719525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99825114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9737512], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.95708054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9962384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.98766226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9783102], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9232178], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9865404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.95936114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9173157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9654052], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9598565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.98652524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.94052714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.99612725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.99681723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9382676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.99802035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.98037016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9980355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9952144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9994868], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98113906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9774115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97164565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9388208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98058444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9464279], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9908414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9902483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.944846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9908814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9997779], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.999948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8515116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9912052], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9947568], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99657184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97609496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.991605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9956197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9633536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99996823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98423934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9317848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9909915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99570686], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9986767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9937817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9653362], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97434026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97306305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95009303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98985445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9642392], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.92279375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.89343184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9962304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9875435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94973654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96181816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99800694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99859416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98690885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9813925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9824404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99843866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93524903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9973038], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99927276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.991431], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95546955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9939237], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (9,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4913, 'query_cost': 0.0, 'learning_time': 246.06908453191863})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__9.pkl


ONLINE LEARNING CYCLE 10

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 55 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5302 datapoints
Loss: 0.00911, iter: 0/100000
Loss: 0.00005, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00003, iter: 3000/100000
Loss: 0.00002, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss: 0.00001, iter: 6000/100000
Loss: 0.00003, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7599.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9649197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.7527882], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.78910166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.98233676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9274811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.40166923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46518278], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.8056254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6294147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45443922], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.81360286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.80570567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9811779], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.81954306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4515503], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47783953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6777401], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5735141], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45402455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6910634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.57863545], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6370247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.73238546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.7410567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.35553673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.7930881], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4715975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9867274], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98212767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5457256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.77016944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.80576533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.72853506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9920494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.76292], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4578195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.66677624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.35014316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.41569665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5149691], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45809734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.90947807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.86899894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.67933595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42541537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.75757027], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.93747014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.7347483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9052913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5453806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50124705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49424183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5199908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45190743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42278698], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.88499606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.58393115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43571576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.78865665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.74161804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.33615297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9455047], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.7425688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.7712724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.7563993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.37616578], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.79843646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.84199816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.57066876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.8061746], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36075914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5898049], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9383722], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.34372142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8187458], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45517153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7903361], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.535457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99362934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8010949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5389601], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.33612624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41529453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5408329], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.57374054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99763143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.64491403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49114153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5044981], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.92138976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.35672292], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3566856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5355518], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.683352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54026973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.35569227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.66007715], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.68635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.7967878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.95617425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.86432505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.760846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.35825634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.84231055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44998422], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.93103963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9553522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.940941], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.96006185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54962486], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.7142922], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.57946324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.3693956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.7462353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.36670944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.35513], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5776105], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.32994634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5594517], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8491507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9903904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.75852144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9950649], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3398441], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5460743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53881705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.72749156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43977088], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8211064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3435306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.63138986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8538942], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.81849086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7275976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.79072857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48881596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52239764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39929327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6315232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46497464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8932191], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36775696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44762367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.33200288], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7131979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41312253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.33246925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5813646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.57027036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.34540614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8746026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7416587], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.73433834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.75412047], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44022182], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8402684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7719279], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.56371623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3975485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41041723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94737005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3467316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4569669], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.64405733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.61343044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.88160604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7218965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3945047], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (10,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5412, 'query_cost': 0.0, 'learning_time': 275.94304671289865})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__10.pkl


ONLINE LEARNING CYCLE 11

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 60 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5797 datapoints
Loss: 0.00926, iter: 0/100000
Loss: 0.00002, iter: 1000/100000
Loss: 0.00923, iter: 2000/100000
Loss: 0.00926, iter: 3000/100000
Loss: 0.00004, iter: 4000/100000
Loss: 0.00004, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5816.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54822284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.80834794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.7240022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.72977585], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.495995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.8256175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52248424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9467248], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6461824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6854214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5253941], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.60713863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.42648545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45547482], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.69732314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.41985482], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.89904046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.57781917], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.70846915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52852786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47507897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.39245483], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5135151], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.38393247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8192297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99440664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8794737], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8191174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4661848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.61045015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.76408845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.7932954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.7162682], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.78432643], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8543547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9965947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.56857216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.41779852], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4249805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50752074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.92206746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.7002679], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9139896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8144753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.69794273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.37717652], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49595118], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.69843334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.37902144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4836625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6595395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.84886914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4947163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.37245002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.56098044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98239], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.55873966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5599397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6241712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48990363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49139482], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9364984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.725291], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4430061], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.78508186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.8751993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4447437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.76710683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9769879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99445635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.39564294], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8962394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.74657655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.82353103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94992113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4449947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6752623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.66928464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8643613], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5755957], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8307357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37479347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4662672], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.91525096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37237647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43326938], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4719398], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6274253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.55368555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.77903986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98252577], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42482182], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48506683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4700573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.57590365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.64366263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8595381], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9235451], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5588553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.37857997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.6613767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.99224234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.85284245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48746648], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.56739783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.74191546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4370447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4676783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.85789067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.6350871], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.96461624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5213607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.8727468], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.6365397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9767317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.94217503], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.3871954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.91847086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.6095581], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42130426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5551049], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7610911], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45408058], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6058005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.63454884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6037614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.70637536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6626366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.725366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.89855546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.86005867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6141138], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4190281], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4758796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42174307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7395144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.65958977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.73507243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39089298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3653792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.89655256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.65991163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52349573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.70718], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.81476134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.927195], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.727391], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.65683305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96700394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8092048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8282746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8094495], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.82738], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7005293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.58766073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8746412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5999247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.66429985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6713631], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47232792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54670924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39746344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4076977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6664529], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48500538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38231274], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.75153404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.83469176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.72228986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7785059], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9086863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8806921], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (11,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5917, 'query_cost': 0.0, 'learning_time': 303.7940575919347})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__11.pkl


ONLINE LEARNING CYCLE 12

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 65 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6225 datapoints
Loss: 0.00003, iter: 0/100000
Loss: 0.01853, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00921, iter: 3000/100000
Loss: 0.00922, iter: 4000/100000
Loss: 0.00002, iter: 5000/100000
Loss: 0.00001, iter: 6000/100000
Loss: 0.00927, iter: 7000/100000
Loss: 0.00004, iter: 8000/100000
Loss: 0.00002, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9508.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.77024424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.37095806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6297264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.35220572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4424423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.8059715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.94773805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51731426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.70279735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.41246292], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49273887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.98539484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.84742945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.7638394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.74991673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6138799], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.8325842], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9232407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.38131046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.84917927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4063766], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.784515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6634357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.71547866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6345052], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.37396705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.7721063], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.39794153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.64262867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5549389], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5577243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45900452], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9694371], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9381545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6472338], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.86399084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5062403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55173796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.93672097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.36519596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.93582946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48991087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5485624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42945457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.460298], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.7613574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.953578], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5932155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9899043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.8939468], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.77730113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.8400119], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6366068], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.39730805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.7860853], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.75457543], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.72268254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.90757585], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.77155656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.920124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.946726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.68963677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43404236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49745756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.72537345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.40212473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.90152395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.68407637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.55260444], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.77545553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5875419], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8053541], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8945341], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.92794895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.66356623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8852296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45901367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5724694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48591915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3966754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6525595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9243067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38552162], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6689799], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.63934684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6247621], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5447106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39605007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5169846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48036447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9624126], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40623742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.33189815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.509559], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4776333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6386604], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.67711], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.6501669], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.6173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.8556365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.35577658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.64168274], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.750336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46166065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5590667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.70336014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.7723417], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51808584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44731948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9965253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9951664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9881847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5420859], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.85494566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.84030616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46937132], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8154313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9328514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9207371], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.92415196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5862905], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4246259], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40116936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9280562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7081231], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8718596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7508834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52004886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5195949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52644753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.34132192], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38670528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4205552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6094668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.921053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5977835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6054539], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3426363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6234929], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37638235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.636659], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98544025], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3320489], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.77181244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3381948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.60043436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4814887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7509447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5006162], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.73385674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.33552602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9014383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3819932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.68017805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.80730796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9866588], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7545395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6445103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.75365466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9406662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7957104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.77020186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9409836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4099802], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6228578], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9932403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48668754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.62465197], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (12,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6355, 'query_cost': 0.0, 'learning_time': 339.37075218593236})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__12.pkl


ONLINE LEARNING CYCLE 13

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 70 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6720 datapoints
Loss: 0.00004, iter: 0/100000
Loss: 0.00002, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00002, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss: 0.00908, iter: 6000/100000
Loss: 0.00002, iter: 7000/100000
Loss: 0.00001, iter: 8000/100000
Loss: 0.00002, iter: 9000/100000
Loss: 0.00001, iter: 10000/100000
Loss: 0.00003, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11700.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.88763607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.90072703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9491706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.96212023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.941802], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.95183045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.8112157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9248624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.8078194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.89685965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.94416624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9217529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.94619185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.99312997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9359026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.8559044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.90354913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.86517525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.94985306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.89291394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.8495532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9083384], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.94599324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9795827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.91668135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8853186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9523134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99931693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.987398], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9561409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.96178496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8044148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9745902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9431123], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.7813159], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9765588], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8141036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9411674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99957603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99206173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.89983916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9797561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.89057904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.89954627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.850343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9896105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.78918004], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.92843866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.90834266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.97437763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9901782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9519904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9328829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.88952416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9908418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8926508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.99855745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9465448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9935367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.980919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9306449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.89832115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8972195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.8496405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.804096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.8542144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.8556207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.97261107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.7746272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9735725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9390351], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8750381], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.88286513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.93689406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9284889], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9385139], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.85494137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91360414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9855243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9134601], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.92981917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9550577], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8825338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8931649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9192558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.948007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98278236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9609491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.917982], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8454562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9985877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9299645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.90693694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91685784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.78084177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9710455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98821366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97539985], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.91531825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8871471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.93803585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9799469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.89186263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.8605567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9145025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.7651358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9100106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.89219064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9293973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.943557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8895245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.96949434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.92409426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9588967], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.8873196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9354284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.87016666], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8529816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8871947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8490504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9326192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9088206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7988307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8405502], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7816826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.947206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8343925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9849649], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.90152705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8845855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8376044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97890514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.81631404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8594873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97451854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8433691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9680593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8937029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.90402865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.90224814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.80066925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9461177], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8384907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.83015996], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9551191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96316904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8935557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8894383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8074738], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.89400715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9902445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8031788], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.990084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.923793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9840311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92614067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9752999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9835672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.990646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9312941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9620288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.88924336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.80195504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7741515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9443191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9773862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9743484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9719006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.89175385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9358284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9829934], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (13,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6860, 'query_cost': 0.0, 'learning_time': 379.84868930390803})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__13.pkl


ONLINE LEARNING CYCLE 14

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 75 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7215 datapoints
Loss: 0.01863, iter: 0/100000
Loss: 0.00002, iter: 1000/100000
Loss: 0.00002, iter: 2000/100000
Loss: 0.00929, iter: 3000/100000
Loss: 0.00003, iter: 4000/100000
Loss: 0.00002, iter: 5000/100000
Loss: 0.00003, iter: 6000/100000
Loss: 0.00001, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7423.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.77735025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80873835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.94611466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4704769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.93023974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9163571], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99184614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.86587244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8645155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4674783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43185002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.83730894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.68898785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.78760386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.82229716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.8890716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.941771], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.7114114], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9528223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8307868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.829092], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9784643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.83850074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9636119], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5966189], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9727603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.88481456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8849365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9052544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6230939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9898048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.81507456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.40966228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99287695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.7702913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4984704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5978867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.573819], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.77292496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53403294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8912906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8642797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79676616], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.94692886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9069221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.82976097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.920704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6904871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9160942], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.87456083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.916866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.591717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9371685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43000552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.96020937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8772646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.7773822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.96527433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.95533633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.62358505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.82453126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.88602746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.8067821], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54713625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49099082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.98593765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.98061275], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92101735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.85591865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95216465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8074769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9973821], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.83407396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6449548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.84554166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.82396066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81530577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8748573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5605248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9698475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81179136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5873497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8827589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92894334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9632698], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8101663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.84399605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8510123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.85086584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8851097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.86190826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.82952094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97775835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45650533], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9787415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.8159558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.7425628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46298185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49143323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8386086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.94099236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.81058925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9793065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.76648873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.928814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8168051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9142992], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4267934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9010407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.68142164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.79859376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.59296244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.8274736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5996277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.8066522], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8036504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6072994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6948109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8483551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.84759957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81647545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5727983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.85823345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7961183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.625764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7294901], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6068367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8623782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.983539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.85391974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5834168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.852855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9788323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81121564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7233178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95130163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99454474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8959266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9496485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.82998484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.577316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8631657], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81693494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.86000246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96920836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8085456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9941703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48761338], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.82087916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96686864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99247855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.75912064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7094482], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.92635924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38416982], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8795401], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.70856065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7834097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98108673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94983435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8034165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9923949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54172605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.89424384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5072133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9140986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9422657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8776624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.637166], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (14,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7365, 'query_cost': 0.0, 'learning_time': 415.0054460779065})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__14.pkl


ONLINE LEARNING CYCLE 15

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 80 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7710 datapoints
Loss: 0.00001, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00002, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00002, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5043.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9867639], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.98240376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9613908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99622303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9813732], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99497753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.963489], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9788074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.97709197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9691714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99627835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9899322], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.98862946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9940398], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9598481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.98854274], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99133515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99943095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9999545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9982458], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.98749745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9693659], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99358], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.96917975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9881272], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9984571], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9956415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98064166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9536371], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.990628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99114734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9769702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.92573845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99680746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9880469], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.991353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97066265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98122495], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9145434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.989361], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9997616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9991655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99845135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98670787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.970165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9952154], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9501597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98412365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98368925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9515886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9503746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9979647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9823239], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99144536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99759114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9816751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9674687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99972284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.96031505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98391706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9587297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98980343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9922604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9648539], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98274076], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99009526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9901113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99994206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9856558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9999286], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9885221], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98333746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96346736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9899317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9978226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9750512], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99299985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9653115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98783565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99707234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97420543], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99826217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94088125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98323107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9933049], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95924973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99183005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9789709], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99407697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9974869], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9885025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.988118], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9968601], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9890747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9987956], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9884609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9937836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9805809], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9861083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.99324465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9624801], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.99675316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9485453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9684756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9980678], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.97213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.97963345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.983867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.97418386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.99340194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.968461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9898656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9963214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.95315933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.99517864], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9554239], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98007506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9602011], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9905073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94799584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.999969], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99066067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96841353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98696446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98294616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9968188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99126756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99795866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9952173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99402815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97877276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.975252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99758285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.90973574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9447445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9570208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9929794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99780005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9594954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98387754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98294836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99699235], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9493001], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9925322], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98430705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.92351604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9870753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9633676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9969342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9708108], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96410704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9464751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98490053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99062544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8570304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9852566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9861411], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97991484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9977079], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99666476], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9277245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9957585], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99545884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99068856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9873317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98774385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.995764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9791379], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98380923], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (15,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7870, 'query_cost': 0.0, 'learning_time': 448.0842291468871})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__15.pkl


ONLINE LEARNING CYCLE 16

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 85 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8123 datapoints
Loss: 0.00001, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss: 0.00943, iter: 6000/100000
Loss: 0.00001, iter: 7000/100000
Loss: 0.01030, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8331.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25117904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2108118], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.20913807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.22354347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.23122701], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2479241], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.26900986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.24749899], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.22417758], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.21375996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.23382461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.21364045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.22119285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.20765255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25386977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.21028599], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.22115411], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.22205967], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2154785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.22343665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.28137133], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.23726308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24053614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24161026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.21928595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2533066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.22385673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.23434217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25166297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.23660111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.21229358], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24249837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.21727006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.20884399], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.21391739], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.22804822], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.21066988], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25592762], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.21597251], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24726936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.21821292], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.21508935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25520143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.20925142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24283154], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.23044932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.21877551], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.2259045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.22511105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.21619509], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.2146146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.24980225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.22248009], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.22755706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.22123215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.23281334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.20778988], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.2170857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.22185384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.21843646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.21301797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.33428365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.21496661], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.21990435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.23979379], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.21384858], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.2218429], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.22604497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.21074967], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20946671], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2130822], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21506825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22547388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21217035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23013672], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22029068], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25019363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21593183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22370777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21190935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21876583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21998805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20777702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25558084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22085549], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22408952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21747477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2121837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22784425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21442498], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21162564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2330278], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22882283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21259311], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25675955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24981798], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.23286049], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.20860311], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.23702903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.21674049], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.23547117], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.23442915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.22452389], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.27346656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.22392572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.23963195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.21647374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.21960908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.22178207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.2402892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.21670552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.25851303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.21943693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.2673889], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.2488473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.22142535], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26219362], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23956202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21920261], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2150122], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20795035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22623435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21586539], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24628372], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22575626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2219158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21614562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21685107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2308416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21999155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2490164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20861475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3112675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21688245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21138732], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2151383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22294322], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20963748], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22007932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21081194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21710934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21033324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22723372], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21424189], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2224657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21516712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2261158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22048627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23876318], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2543174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21735813], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21021543], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22899011], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21237671], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24496454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20930067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23021913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20927544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26548353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21544477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21401879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22436135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26566702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22976564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25604406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.275312], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21345286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22681357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21537863], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (16,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8293, 'query_cost': 0.0, 'learning_time': 487.65759720886126})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__16.pkl


ONLINE LEARNING CYCLE 17

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 90 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8618 datapoints
Loss: 0.00001, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00002, iter: 4000/100000
Loss: 0.00003, iter: 5000/100000
Loss: 0.00001, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6443.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.88588697], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44635352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.87177205], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8378225], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.37928218], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.8182231], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8275303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.40683618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.39433205], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.81519014], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.85873127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8504102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.83858144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44445807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.83975255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.840022], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.40174204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44571012], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43079475], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.86845005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8323801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.87168586], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8555722], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.489026], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4551556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4809434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8903477], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37444702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4604264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40873843], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46093506], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47114253], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.38352567], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47412047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8249641], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.89094937], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41964242], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41024277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8186566], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8374381], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38475952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.81934565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.86212295], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8541576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89840853], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38216993], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38490716], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8190934], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8860043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4094219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40048686], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8949006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39561167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90044165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8418716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8856619], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42725196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39333868], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40764713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.872735], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8950847], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (17,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8798, 'query_cost': 0.0, 'learning_time': 525.6240305769024})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__17.pkl


ONLINE LEARNING CYCLE 18

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 95 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9113 datapoints
Loss: 0.00971, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss: 0.00001, iter: 6000/100000
Loss: 0.00002, iter: 7000/100000
Loss: 0.00001, iter: 8000/100000
Loss: 0.00971, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9525.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.90354484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46097016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5521726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9311965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51120245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9384896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49280226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.99238306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48645374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50320995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.98905104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.92654973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8971346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9736229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.98317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.57347685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.572647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.97568136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9481491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.96672577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.93205655], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51333183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45643356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5259097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.93864214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9807951], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46202007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9323986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50802404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42280334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.939605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47240108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99363256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9424027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49802628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.90188175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.41675654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9873612], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.56205505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44879234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.97160006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45030528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47155866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48461515], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9132369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8999158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45303088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9946033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.55641794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8924971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49331936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5528463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.570782], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52119505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47908282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47605577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9876325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4409084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47696742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.96083033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47849464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5267748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.94701546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4681632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9561809], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44822717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50791955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5551644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48679158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91025805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9628361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9820797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5537509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92491925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9670107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9096716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96533966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49725297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98845196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5101555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.57412624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.55707365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5351164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94260234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9879067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5202355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9788689], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45385745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8974014], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5476693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.948449], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50809765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48947453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.93977785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9333549], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.95612645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4842338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.92430985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.929385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.89787304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5310587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9303537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44411457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9041008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.97852856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4188134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9955107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4731723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9138892], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.90924984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47994745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95697296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50905854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42553017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95625895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97678924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.58074725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48434034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4376301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.901087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45776534], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4582844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94547653], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5664009], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5045337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4639257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4282215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9070836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.498499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99585766], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47508955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99739313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5408876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44864237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45396402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5487596], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.93403995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9472028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99566215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5702085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9447305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94165564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.955021], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.57248706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9022702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45798904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48091578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9291854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5312103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5823348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9764773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9591112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8947513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9141407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45746964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53151965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91222304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9905901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9393772], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43479428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98700446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92997414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92868567], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (18,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9303, 'query_cost': 0.0, 'learning_time': 570.1958748789039})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__18.pkl


ONLINE LEARNING CYCLE 19

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 100 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9608 datapoints
Loss: 0.00001, iter: 0/100000
Loss: 0.00003, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00925, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss: 0.00001, iter: 6000/100000
Loss: 0.00001, iter: 7000/100000
Loss: 0.00001, iter: 8000/100000
Loss: 0.00001, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9832.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.36757195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.35896075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.36720875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.36682987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.37200946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.3789505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.3662242], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.37247768], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.38443923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.3753184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.38036364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.38292012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.38339022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.38568622], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.35637474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.40919143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.38417366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.38077804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.37413076], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.3617777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.39137504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.3698129], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3689698], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.37585282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.37579846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.35414687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.38437933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.37068114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.37999037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.38060817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.37952325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3803205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3672279], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3844434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3993308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.37746233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3881539], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3704444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.36658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.40119547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.38938323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.37784234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.36738455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.38127962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.38426495], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.37780446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.37142634], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.3601477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.37002197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.39158946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.3831414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.36997116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.39541444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.36725304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.39913678], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.3612309], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.37986058], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.38525435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.3757891], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.35492957], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.38579136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.35699275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.3649654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.36675167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.38067305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.3699002], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38326633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38126373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37356335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.411467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.35698178], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39175284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37841094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3660328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3944528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36877012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36166394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37990776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3546516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39076182], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3637704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3821854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37388936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38277686], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37458032], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37234557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36103573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38975358], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36688387], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37334165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39546037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3544492], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.34287974], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.37212265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.37475285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.3604058], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.38336208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.40430716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.3862781], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.37734815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.36869845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.38154614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.37714466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.37941328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.33740437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.35148075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.37039328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.3752698], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.3827212], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.39199603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.3695588], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.3733893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.3850426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.393578], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37882063], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.35567218], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3512194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.35410938], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3656904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37983242], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36246324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.33887365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3627079], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.35872498], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37553963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37620687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36642462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3151942], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3783499], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3689643], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.34401867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38660806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38658473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.364133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36201453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37093866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36879566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39627662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37259308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4095743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37760502], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36904413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36741623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3650826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37752268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3607451], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37815234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3671425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38539904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36219433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38386938], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38085887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3711587], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39005464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3682289], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3947527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3586109], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37769362], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36029884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.35835963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3738286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3737735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38313594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37747875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36286217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36189649], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (19,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9808, 'query_cost': 0.0, 'learning_time': 616.8539617198985})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__19.pkl


ONLINE LEARNING CYCLE 20

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 105 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10103 datapoints
Loss: 0.00001, iter: 0/100000
Loss: 0.00002, iter: 1000/100000
Loss: 0.00957, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5872.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5085848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5004763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50191504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49504146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48391882], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48931408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49359593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50372213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48482782], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49418777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49182492], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4947658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5003931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50188506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49606392], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49828777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5016187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4735114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47644943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47576594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47315145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47726384], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49981365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48587164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50228405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.499751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4874478], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48653555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5039302], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51313204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49885216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.504916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5030723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50281173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.491183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4973354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49666268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4822527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49701986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.447875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48543736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5069615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49955827], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46013352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47926214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47283006], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49707988], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48885632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4831271], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49080715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49871537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5293173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47685355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46597362], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47814962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49646103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50254244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48774377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4966015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5022935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49795854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4904219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49102753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5103557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5015909], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50644296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49125937], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48976117], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4820021], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50651836], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5009419], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49972445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46313235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50584227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47201547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4917753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50720614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50383586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4973427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5056289], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4860373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4613594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46375835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4544318], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4748683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48681107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4665437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49382052], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48858678], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49266434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5118764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49291047], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.504338], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49708325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4603233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49972868], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50219584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4746081], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46074685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47904322], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49468157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49138677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49095732], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49261242], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50120884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5041745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4960683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5032025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49751893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49715444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48296216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48255262], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47801748], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51541996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51180613], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5089211], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4901996], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47839174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50301427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49887502], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5066125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5089363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48601097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47375906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48578304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50423396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5083212], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5029546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4922609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5057376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5051467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49791187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49361676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49154195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5049707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49269763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4857824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50549376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49299896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45077115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49932268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49688566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49347627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5045057], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50182396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5039046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50479525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5007261], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5063781], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4475811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44631767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49574962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49384302], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50265026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49091983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4783257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.501936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4883439], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41761485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48885357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4947159], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47938535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49949476], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.500909], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49459073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48028523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51022226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49605793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51226395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49927807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49822047], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (20,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10313, 'query_cost': 0.0, 'learning_time': 658.3263260748936})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__20.pkl


ONLINE LEARNING CYCLE 21

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 110 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10560 datapoints
Loss: 0.00001, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00002, iter: 4000/100000
Loss: 0.00965, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00001, iter: 7000/100000
Loss: 0.00001, iter: 8000/100000
Loss: 0.00002, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9647.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7157909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7623216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71458364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68491864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.648741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7178214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.39837834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.41917115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65354395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43477297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4303586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.40235612], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43458593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6915506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.39442793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72121197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7414297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.42007607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.42874232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.64810133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4253518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7412822], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6620338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7034414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7293434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66997606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.770272], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.40314454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43204316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7549044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4145988], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.39642215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6893438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.65578526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.40768236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.65489584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.64487004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6730493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4305345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3921791], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.39641678], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.41492507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43536216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76806366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.400453], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75098395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41448826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77491987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7663814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41147584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7584579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43434185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.39331573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7485813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7688876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6942402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.3914462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.40903187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41332135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.39126548], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42003465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42955074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42873818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.39277995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.39454406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.64658594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4149236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.39370334], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39474797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.64742285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7308671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66158956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42683822], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3958756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43389937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7225424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68528455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41786245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39664808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71041614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39588273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70266247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40994585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.672348], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41890705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4066324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68899226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.677407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67535263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42087665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72196144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43391615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6606973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74261504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43344736], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6535176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6700013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66783226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.41446856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4182092], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7022838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.74207944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43252447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.39460957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67710686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6886235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7727806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.40932444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.664373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.42446297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7000973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.41785145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.40123072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7623875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4195385], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7244777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7031615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6877306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39461002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39947522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41167852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7706562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6486467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65155333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7352054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40737566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42736754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71136236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39782962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6947975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6606899], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4304953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40002143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73479307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42553598], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40673554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6914702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66009754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7303077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39917392], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4258166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67209226], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40161923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39501494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4077953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40678287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65138024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69831467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7084516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.745547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6826198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74285054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43211985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43538514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6646734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39712718], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40221277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68107533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72363544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65605545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72051823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74015397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66523206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41309857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40091884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39380708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4092356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69878906], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (21,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10780, 'query_cost': 0.0, 'learning_time': 707.4702657188755})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__21.pkl


ONLINE LEARNING CYCLE 22

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 115 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 11055 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00960, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5004.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70519906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6881577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65029794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6915326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7204295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6975738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65886843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.66432214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6497975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6496183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.64845896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65015167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6744583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6869577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71033543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6634457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69975644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68936336], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6558641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6985483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7385297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6749554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6787786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68620133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6951071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70692176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71568274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6487104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.65556645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6527295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69602466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6989803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71535057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69556856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66647196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6906935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6934761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6978778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7016971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7128815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.65585524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.720587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7017598], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67044705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66236967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.682403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7094878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6570257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.658847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71161544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6822876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7179477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6888486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71333253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6646097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68511677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6981551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6618026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.64741796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6830034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6938603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6987869], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6901009], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7184254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65016556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68996054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65567434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6619783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7208146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6633301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70699733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65949064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69256765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6870663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6685969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66354185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69142705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6507058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6918975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65593326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67861366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69758415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6895046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6691069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7202669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6551229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65602607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67511237], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7066569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6934912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6969868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6566347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.64657503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7147459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6991959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6687004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6970907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.41635188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67277706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6960455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69448704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6795972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.649516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.645872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67295647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68463075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6606027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68708277], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6767972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70254517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67387813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6515777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7149238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70475054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7008197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6829502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6604637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6732349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71632874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.646303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7188941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65140724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68278694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6630872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68448913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6590031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67454714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70712835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67328984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70344645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6816153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6773381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6941731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66140836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7025336], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6949638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6577526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6755402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.706514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6855321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7128218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72528666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69810945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7018125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.64701766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6854618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67033994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66187173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6614936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66950214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6536137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6985382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67966384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6964701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6631245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68368053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6851688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70690227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6838414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6628764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70944893], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (22,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11285, 'query_cost': 0.0, 'learning_time': 750.4014164498658})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__22.pkl


ONLINE LEARNING CYCLE 23

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 120 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 11550 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.01002, iter: 1000/100000
Loss: 0.00002, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5004.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.66119087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65383303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7044128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65956146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65995926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.66359353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6897198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6729736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.66532665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6547252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7115571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.67790616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.66435856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.662345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.64881164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.63283783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.66660035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6758973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.651338], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6583661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68670714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67497915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6699801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6671839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6768566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6501296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68355036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6975606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6680562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6787599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6790111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6648465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6673882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67039204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.683765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6633801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6560192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69098496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67220855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.673922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6712442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6656084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6689155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.660288], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6538446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.64917153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.657321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6830863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6676346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6719136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68543965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6538349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6352856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.67365754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6712732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6458954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66688263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66535354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.663994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6682435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.686481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6615375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6695283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6751057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.66516376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.65639573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.65821195], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6754035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73051095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65800405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67327046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66568166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66903275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67449147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6743275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6640913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.64310867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6584143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6685886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67976743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68257475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6591169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66764814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.63649535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67820746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66682667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6526207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6860403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6537139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.667798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6611237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6707731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6614513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6687117], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6565692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.679891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6753972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66119635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6591052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6670936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6600755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6660894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6658353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6878699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6562914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.66109246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6533337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6285102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6832357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.63284177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6582731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.659117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6864129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.64510566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67274696], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6603287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65397793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6754952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6542178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6521848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6661995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6598392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6642604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66617066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6723114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6696078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6719009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6872439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6595532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6671801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6653735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7029119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6639392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67693275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65832865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67812514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6769055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.656283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68538785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65804595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6624527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66655385], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.64258647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6525687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7214264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6647203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6544101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66970456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6582835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65675825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65708196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6699696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68405074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69828874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65729624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65365106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65511453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6723004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.667398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6219698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6612902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65748006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6839251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67575896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65007025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.670916], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (23,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11790, 'query_cost': 0.0, 'learning_time': 795.0368266118458})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__23.pkl


ONLINE LEARNING CYCLE 24

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 125 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 12045 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.01019, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00002, iter: 4000/100000
Loss: 0.00002, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5021.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.84015864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8565872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.83848715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.82151675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.84909594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8290861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8508979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.849272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7800529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.84437865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.83992636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8515815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.84805346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8514328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.85378325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.85418034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8324856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8460542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7521994], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.84826905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8497065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.85721654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75816166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7910404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79107666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8519899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.85263884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.85150033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8469221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8520031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8557955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.83605075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.85521317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8426089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79071033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.84131944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.85398567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8553413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.84714437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7827566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.85033476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8467797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8403396], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8353495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7562934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8582687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8478218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8582639], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.85229605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78632134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8452442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8407454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8452167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8304271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7847226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8595678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.83922404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8538345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.85538673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7920051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.85398036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.84742296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8513608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.84584403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8445339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8497037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8415617], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.779814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8481255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8543642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8526755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8381816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.839115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8456147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8481982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85578316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7908571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8588766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78987366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8492316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8545952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84526455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78198737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8517525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8395875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7764156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7919421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8536397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8434454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83080816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84883785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85844034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8414261], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.779217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.85085696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78718203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8373866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.84257513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8503311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.781034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.84152853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.84571356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8432344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8470388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.85690284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8435076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8404997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8392247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78655666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.79061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.85290444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.85642207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.85416543], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73111594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.840652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84134567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8499659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85357445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8363527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8503471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.848457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8399535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85186815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8503054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75306016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7241921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83352596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8447467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8357746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85863024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8316551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7722334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85552067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84403807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78159356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7870843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8442183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8437963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8518569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8455742], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8400134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7320329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85091573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77906835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7875925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8499092], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85852236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7915557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.852975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7871016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8479421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8521559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8397754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8300557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8501476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7929877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8540333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83905095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8459375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8477374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8443634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8269043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8537593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.81607527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85412824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8513269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83944297], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (24,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12295, 'query_cost': 0.0, 'learning_time': 841.2964240818401})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__24.pkl


ONLINE LEARNING CYCLE 25

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 130 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 12539 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5005.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8637111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.86848086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.85285497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.85213464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8572686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8622407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.85668033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.3832522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8632328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8451127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.84578055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8530919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.86732304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.85962343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8667628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8629165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8492467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.8553278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.82589424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.84821427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.85981286], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8619812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8684161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.86287045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.854733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8647434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8469524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.37679043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8607312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8657643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8513349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.86111754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8506763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.84986806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8632404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.86198133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8590876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8515967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8385403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8426471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8630372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.84182864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.86396337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3861211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.84586823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8388415], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.86819285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.858785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8435747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8593938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8449674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.864254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8484596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.84953755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.83734554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8648264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.87241966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8582123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.86526585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8595482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.85174567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.86979234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.84079015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.83096796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.85854614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8397937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8376887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8645495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8568411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.86099714], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8614298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8632481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8641844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.82991755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8431612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85629886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8613197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.87489635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8177486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85789204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8506647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8650483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84609044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8623856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.854771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8606555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85944635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8608263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8647738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.82586855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8474752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8386339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85340196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.858854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83883876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8700292], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.83104235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8483309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.84703285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.85402805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8599077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8660816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8351584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8614594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8590304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8671371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.86817473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.84265965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8561834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.83558357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.86372286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8689118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.86045474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.86284184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.86452675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8693801], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8439826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8562776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8404579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85486907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8582819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84757334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84148693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84213376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8613957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84328294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83413756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85564536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.86720425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85042995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8651498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8610345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8229709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84011537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.86201155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8626641], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38503137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85129863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85036194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8629164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8403666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85393476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85231817], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8364551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85873413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.82021266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37995946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8636714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8691029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.81827086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83066887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84686565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8500846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.842035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8616591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.83239245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.86297727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.848007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8428909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.86543995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.86608756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84326154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8640837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8474678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.86811227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8480581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85167944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8531874], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (25,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12799, 'query_cost': 0.0, 'learning_time': 889.0378596098162})
Wrote out test results to results/grid_row_door__rl_bridge_policy__6______RLBRIDGE_gridrowdoor-no_callplanner__25.pkl


ONLINE LEARNING CYCLE 26

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 135 trajectories...
